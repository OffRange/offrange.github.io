/*! For license information please see component---src-pages-projects-password-strength-ai-index-jsx-5f5a5d12de9987cee2eb.js.LICENSE.txt */
(self.webpackChunkdev_portfolio=self.webpackChunkdev_portfolio||[]).push([[805],{7870:function(e,t,n){"use strict";n.d(t,{C:function(){return s}});var r=n(5840);function s(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.ZSL.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},2680:function(e,t,n){"use strict";n.d(t,{dH:function(){return a},lO:function(){return o}});var r=n(5840),s=n(7870);function a(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const o={kernelName:r.ljI,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;(0,s.C)(t,"abs");let o=new Float32Array(r.ZSL.sizeFromShape(t.shape));return o=a(n.data.get(t.dataId).values),n.makeOutput(o,t.shape,t.dtype)}}},5315:function(e,t,n){"use strict";n.d(t,{UK:function(){return c},WQ:function(){return u},mx:function(){return o}});var r=n(5840),s=n(8195),a=n(6499);const o=(0,s.Z)(((e,t)=>e+t)),i=(0,a.B)(((e,t,n,r)=>({real:e+n,imag:t+r}))),u=(0,a.j)(r.OMN,o,i),c={kernelName:r.OMN,backendName:"cpu",kernelFunc:u}},6995:function(e,t,n){"use strict";n.d(t,{N:function(){return a},X:function(){return s}});var r=n(5840);function s(e,t,n,s,a){const o=r.ZSL.sizeFromShape(s),i=r.ZSL.makeZerosTypedArray(a,n);for(let r=0;r<e.length;r++){const n=e[r];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(i[n]+=o>0?t[r]:1)}return i}function a(e,t,n,s=!1){const a=e.shape[0],o=e.shape[1],i=(0,r.ra8)([a,n],t.dtype);for(let r=0;r<a;r++)for(let a=0;a<o;a++){const o=e.get(r,a);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(s?i.set(1,r,o):t.size>0?i.set(i.get(r,o)+t.get(r,a),r,o):i.set(i.get(r,o)+1,r,o))}return i}},4890:function(e,t,n){"use strict";n.d(t,{LY:function(){return u},f6:function(){return o}});var r=n(5840),s=n(8195),a=n(6499);const o=(0,s.Z)(((e,t)=>e&t)),i=(0,a.j)(r.HNs,o),u={kernelName:r.HNs,backendName:"cpu",kernelFunc:i}},6094:function(e,t,n){"use strict";n.d(t,{Ml:function(){return p},ct:function(){return c},wg:function(){return l}});var r=n(5840),s=n(8195),a=n(1317),o=n(9436),i=n(6936),u=n(5806);function c(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=r.ZSL.toTypedArray([0],n),[o,i]=(0,s.Z)(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${n} to ${a}`)}function l(e){const{inputs:t,backend:n,attrs:s}=e,{x:p}=t,{dtype:d}=s;if("complex64"===d){if("complex64"===p.dtype)return(0,i.D)({inputs:{x:p},backend:n});const e=(0,a.U)(n,p.shape,p.dtype),t=l({inputs:{x:p},backend:n,attrs:{dtype:"float32"}}),r=(0,o.f)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===p.dtype){const e=(0,u.x)({inputs:{input:p},backend:n}),t=l({inputs:{x:e},backend:n,attrs:{dtype:d}});return n.disposeIntermediateTensorInfo(e),t}if(!r.ZSL.hasEncodingLoss(p.dtype,d)){const e=(0,i.D)({inputs:{x:p},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:d}}const h=n.data.get(p.dataId).values,[f,m,g]=c(h,p.shape,p.dtype,d);return n.makeTensorInfo(f,m,g)}const p={kernelName:r.KXH,backendName:"cpu",kernelFunc:l}},4759:function(e,t,n){"use strict";n.d(t,{YG:function(){return o},uf:function(){return u}});var r=n(5840),s=n(5705),a=n(1694);const o=(0,s.o)((e=>Math.ceil(e))),i=(0,a.F)(r.QDP,o),u={kernelName:r.QDP,backendName:"cpu",kernelFunc:i}},9436:function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",o)},i}n.d(t,{f:function(){return r},v:function(){return s}});const s={kernelName:n(5840).pr3,backendName:"cpu",kernelFunc:r}},7763:function(e,t,n){"use strict";n.d(t,{h:function(){return s}});var r=n(5840);function s(e,t,n,s){const a=r.ZSL.getArrayFromDType(n,r.ZSL.sizeFromShape(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=r.ZSL.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const o="string"===n?r.C0T.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+s;for(let t=0;t<e.shape[1];++t)a[r+t]=o[i++]}s+=e.shape[1]}))}return a}},9292:function(e,t,n){"use strict";n.d(t,{LC:function(){return i},RY:function(){return u},z3:function(){return o}});var r=n(5840),s=n(8195),a=n(6499);const o=(0,s.Z)(((e,t)=>e===t?1:0)),i=(0,a.j)(r.BRl,o,null,"bool"),u={kernelName:r.BRl,backendName:"cpu",kernelFunc:i}},6423:function(e,t,n){"use strict";n.d(t,{AC:function(){return u},oN:function(){return i},sG:function(){return o}});var r=n(5840),s=n(5705),a=n(1694);const o=(0,s.o)((e=>Math.exp(e))),i=(0,a.F)(r.ox3,o,"float32"),u={kernelName:r.ox3,backendName:"cpu",kernelFunc:i}},6789:function(e,t,n){"use strict";n.d(t,{Yp:function(){return u},uM:function(){return o}});var r=n(5840),s=n(5705),a=n(1694);const o=(0,s.o)((e=>Math.expm1(e))),i=(0,a.F)(r.ybj,o),u={kernelName:r.ybj,backendName:"cpu",kernelFunc:i}},5526:function(e,t,n){"use strict";n.d(t,{Hc:function(){return u},vS:function(){return o}});var r=n(5840),s=n(5705),a=n(1694);const o=(0,s.o)((e=>Math.floor(e))),i=(0,a.F)(r.ZgB,o),u={kernelName:r.ZgB,backendName:"cpu",kernelFunc:i}},7100:function(e,t,n){"use strict";n.d(t,{q:function(){return s}});var r=n(5840);function s(e,t,n,s,a,o,i,u,c){const l=(0,r.ra8)([s,o],n);for(let r=0;r<s;r++){const n=[];let s=0;for(let t=0;t<a;t++){const o=e[r*a+t];s+=o*i[t],n.push(o)}if(s<0||s>=c/o)throw new Error(`Invalid indices: ${n} does not index into ${u}`);for(let e=0;e<o;e++)l.values[r*o+e]=t.get(...t.indexToLoc(s*o+e))}return l}},3842:function(e,t,n){"use strict";n.d(t,{G:function(){return s}});var r=n(5840);function s(e,t,n){const s=(0,r.ra8)(n,e.dtype);for(let r=0;r<s.size;++r){const n=s.indexToLoc(r).slice(),a=n[0],o=n[2],i=t.locToIndex([a,o]);n[2]=t.values[i];const u=e.locToIndex(n);0<=u&&u<e.values.length&&(s.values[r]=e.values[u])}return s}},4346:function(e,t,n){"use strict";n.d(t,{rq:function(){return o},xp:function(){return u}});var r=n(5840),s=n(8195),a=n(6499);const o=(0,s.Z)(((e,t)=>e>t?1:0)),i=(0,a.j)(r.XhZ,o,null,"bool"),u={kernelName:r.XhZ,backendName:"cpu",kernelFunc:i}},6768:function(e,t,n){"use strict";n.d(t,{VM:function(){return u},lg:function(){return o}});var r=n(5840),s=n(8195),a=n(6499);const o=(0,s.Z)(((e,t)=>e>=t?1:0)),i=(0,a.j)(r.lLS,o,null,"bool"),u={kernelName:r.lLS,backendName:"cpu",kernelFunc:i}},6936:function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,{D:function(){return r},F:function(){return s}});const s={kernelName:n(5840).lzr,backendName:"cpu",kernelFunc:r}},7588:function(e,t,n){"use strict";n.d(t,{WR:function(){return o},YW:function(){return u}});var r=n(5840),s=n(8195),a=n(6499);const o=(0,s.Z)(((e,t)=>e<t?1:0)),i=(0,a.j)(r.mIA,o,null,"bool"),u={kernelName:r.mIA,backendName:"cpu",kernelFunc:i}},3087:function(e,t,n){"use strict";n.d(t,{Q:function(){return u},cu:function(){return o}});var r=n(5840),s=n(8195),a=n(6499);const o=(0,s.Z)(((e,t)=>e<=t?1:0)),i=(0,a.j)(r.CwD,o,null,"bool"),u={kernelName:r.CwD,backendName:"cpu",kernelFunc:i}},4190:function(e,t,n){"use strict";n.d(t,{G:function(){return s}});var r=n(5840);function s(e,t,n){const s=(t-e)/(n-1),a=r.ZSL.makeZerosTypedArray(n,"float32");a[0]=e;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}},1802:function(e,t,n){"use strict";n.d(t,{Fx:function(){return u},px:function(){return o}});var r=n(5840),s=n(5705),a=n(1694);const o=(0,s.o)((e=>Math.log(e))),i=(0,a.F)(r.tG8,o),u={kernelName:r.tG8,backendName:"cpu",kernelFunc:i}},3759:function(e,t,n){"use strict";n.d(t,{j:function(){return s}});var r=n(5840);function s(e,t,n,s){const a=r.ZSL.getTypedArrayFromDType(s,r.ZSL.sizeFromShape(n));for(let r=0;r<a.length;++r){const n=r*t;let s=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>s)&&(s=t)}a[r]=s}return a}},6114:function(e,t,n){"use strict";n.d(t,{He:function(){return o},l9:function(){return u}});var r=n(5840),s=n(8195),a=n(6499);const o=(0,s.Z)(((e,t)=>Math.max(e,t))),i=(0,a.j)(r.LDN,o),u={kernelName:r.LDN,backendName:"cpu",kernelFunc:i}},8580:function(e,t,n){"use strict";n.d(t,{Nu:function(){return u},hE:function(){return o}});var r=n(5840),s=n(8195),a=n(6499);const o=(0,s.Z)(((e,t)=>Math.min(e,t))),i=(0,a.j)(r.LG0,o),u={kernelName:r.LG0,backendName:"cpu",kernelFunc:i}},5646:function(e,t,n){"use strict";n.d(t,{BF:function(){return o},lw:function(){return u},tJ:function(){return c}});var r=n(5840),s=n(8195),a=n(6499);const o=(0,s.Z)(((e,t)=>e*t)),i=(0,a.B)(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),u=(0,a.j)(r.xu7,o,i),c={kernelName:r.xu7,backendName:"cpu",kernelFunc:u}},7962:function(e,t,n){"use strict";n.d(t,{Dk:function(){return o},hd:function(){return i}});var r=n(5840),s=n(7870),a=n(5646);function o(e,t,n){const s=r.ZSL.createScalarValue(-1,n);return(0,a.BF)([],t,s,e,n)}const i={kernelName:r.l0G,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;(0,s.C)(r,"neg");const a=n.data.get(r.dataId).values,[i,u]=o(a,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,i)}}},7113:function(e,t,n){"use strict";n.d(t,{AL:function(){return u},cl:function(){return o}});var r=n(5840),s=n(8195),a=n(6499);const o=(0,s.Z)(((e,t)=>e!==t?1:0)),i=(0,a.j)(r.ylV,o,null,"bool"),u={kernelName:r.ylV,backendName:"cpu",kernelFunc:i}},1675:function(e,t,n){"use strict";n.d(t,{S3:function(){return i},_B:function(){return o}});var r=n(5840),s=n(7870),a=n(5655);function o(e,t,n,s){const[a,o]=r.C0T.computeOutAndReduceShapes(e,s),i=(0,r.TuY)(t,"int32"),u=r.ZSL.makeZerosTypedArray(r.ZSL.sizeFromShape(a),i),c=r.ZSL.sizeFromShape(o);for(let r=0;r<u.length;++r){const e=r*c;let t=1;for(let r=0;r<c;++r)t*=n[e+r];u[r]=t}return{outVals:u,outShape:a,outDtype:i}}const i={kernelName:r.kdj,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:u}=t,{axis:c,keepDims:l}=i;(0,s.C)(u,"prod");const p=u.shape.length,d=r.ZSL.parseAxisParam(c,u.shape),h=r.C0T.getAxesPermutation(d,p);let f=d,m=u;const g=[];null!=h&&(m=(0,a.m)({inputs:{x:u},backend:n,attrs:{perm:h}}),g.push(m),f=r.C0T.getInnerMostAxes(f.length,p));const y=n.data.get(m.dataId).values,{outVals:b,outShape:x,outDtype:v}=o(m.shape,m.dtype,y,f);let w=x;return l&&(w=r.C0T.expandShapeToKeepDim(x,d)),g.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(w,v,b)}}},5844:function(e,t,n){"use strict";n.d(t,{u:function(){return i}});var r=n(5840);function s(e,t,n,r){const s=[];let a=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let c=0;c<t.length-1;++c){u*=t[c];const e=t[c+1];for(let t=1;t<u+1;++t)i[c].push(t*e)}for(let c=0;c<e.length;++c){let r=e[c],o=e[c]+1;for(let e=0;e<n.length;++e){const s=n[e],a=e+t.length-1;if(a>=0){const e=i[a],t=e[e.length-1]-s[r];for(let n=r;n<o;++n)i[a].push(s[n+1]+t)}r=s[r],o=s[o]}o!==r&&(s.push([r,o]),a+=o-r)}return{outSplits:i,valueSlices:s,numValues:a}}function a(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function o(e,t,n,s,o){const i=t.slice();i[0]=o;const u=r.ZSL.getArrayFromDType(n,r.ZSL.sizeFromShape(i)),c=e.length;return function(e,t,n,r,s,o){const i=a(t,2)[1],u=a(o,2)[1];let c=0;for(const a of n)for(let t=a[0];t<a[1];++t){for(let n=0;n<r;++n)s[c*u+n]=e[t*i+n];++c}}(e,t,s,0===c?0:c/t[0],u,i),[u,i]}function i(e,t,n,a,i,u,c,l){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const a=r.ZSL.indexToLoc(s,t.length,r.ZSL.computeStrides(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}}))}(u,c,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const p=a[0],{outSplits:d,valueSlices:h,numValues:f}=s(u,c,e,p),m=function(e){const t=[];for(let n=0;n<e.length;++n){const s=e[n].length,a=r.ZSL.getArrayFromDType("int32",s);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(d),g=o(n,a,i,h,f);return[m,g[0],g[1]]}},7620:function(e,t,n){"use strict";n.d(t,{_:function(){return a}});var r=n(5840);const s=2147483647;function a(e,t,n,a,o,i,u){if(t.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(u.length>1)throw new Error("deltas must be a scalar or vector");const c=0===t.length,l=0===o.length,p=0===u.length,d=[];c||d.push(t[0]),l||d.push(o[0]),p||d.push(u[0]);for(let r=1;r<d.length;++r)if(d[r]!==d[r-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===d.length?1:d[0],f=r.ZSL.getArrayFromDType("int32",h+1);f[0]=0;for(let r=0;r<h;++r){const t=c?e[0]:e[r],n=l?a[0]:a[r],o=p?i[0]:i[r];if(0===o)throw new Error("Requires delta != 0");let u;if(o>0&&n<t||o<0&&n>t)u=0;else if(u=Math.ceil(Math.abs((n-t)/o)),u>s)throw new Error(`Requires ((limit - start) / delta) <= ${s}`);f[r+1]=f[r]+u}const m=f[h],g=r.ZSL.getArrayFromDType(n,m);let y=0;for(let r=0;r<h;++r){const t=f[r+1]-f[r];let n=c?e[0]:e[r];const s=p?i[0]:i[r];for(let e=0;e<t;++e)g[y++]=n,n+=s}return[f,g]}},814:function(e,t,n){"use strict";n.d(t,{K:function(){return u}});var r=n(5840),s=r.C0T.RowPartitionType;class a{constructor(e,t,n,s,a,o,i,u,c,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=a,this.defaultValue=o,this.defaultValueShape=i,this.rowPartitionValues=u,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=r.C0T.getRowPartitionTypesHelper(l),this.raggedRank=r.C0T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case s.VALUE_ROWIDS:return a.getMaxWidthValueRowID(t);case s.ROW_SPLITS:return a.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${s[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return i(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;r.C0T.validateDefaultValueShape(n,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=r.C0T.combineRaggedTensorToTensorShapes(this.raggedRank,s,t);a[0]<0&&(a[0]=e);for(let r=1;r<=this.raggedRank;++r)a[r]<0&&(a[r]=this.getMaxWidth(r));return a}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),a=[];let o=0;for(let r=0;r<s;++r,o+=t)a.push(o);for(let r=s;r<e;++r)a.push(-1);return r.ZSL.assert(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let o=0;o<s-1;++o){const s=e[o+1]-e[o];let i=Math.min(r,s),u=t[o];-1===u&&(i=0);for(let e=0;e<i;++e)a.push(u),u+=n;for(let e=0;e<s-i;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let o=0,i=e[0];if(i>=t.length)throw new Error(`Got currentValueRowId=${i}, which is not less than ${t.length}`);let u=t[i];a.push(u);for(let c=1;c<s;++c){const s=e[c];if(s===i)u>=0&&(++o,o<r?u+=n:u=-1);else{if(o=0,i=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);u=t[s]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const a=this.getRowPartitionTensor(e),o=this.getRowPartitionTypeByDimension(e);switch(o){case s.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case s.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${s[o]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case s.FIRST_DIM_SIZE:return e[0];case s.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case s.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${s[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let r=n.length-2;r>=0;--r)n[r]=n[r+1]*t[r+1];const s=i(t,!1),a=r.ZSL.getArrayFromDType(this.valuesDType,r.ZSL.sizeFromShape(s));if(n[0]*t[0]>0){let r=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){r=this.calculateOutputIndex(e-1,r,n[e],t[e])}this.setOutput(this.raggedRank,r,a,s)}return[s,a]}setOutput(e,t,n,s){if(0===n.length)return;const a=this.values,i=n;let u=s.slice();u=u.slice(e+1);const c=r.ZSL.sizeFromShape(u),l=t.length;let p=this.defaultValue;if(p.length!==c&&1!==p.length){const e=this.defaultValueShape;(0,r.DZQ)((()=>{const t=(0,r.tQQ)(p,e),n=(0,r.hOW)(t,u);p=n.dataSync()}))}let d=0,h=0,f=0;for(let r=0;r<=l;++r){let e=r<l?t[r]:-1;if(e!==f){if(h<f){const e=a.subarray(d*c);o(i.subarray(h*c),e,(f-h)*c)}if(r>=l){const t=n.length;e=Math.floor(t/c)}if(e>f)if(1===this.defaultValue.length)i.subarray(f*c,e*c).fill(this.defaultValue[0]),f=e;else for(;e>f;){o(i.slice(f*c),p,c),++f}e<0?(d=r+1,h=f):(d=r,h=f,f=h+1)}else++f}}}function o(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function i(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function u(e,t,n,r,s,o,i,u,c,l){return new a(e,t,n,r,s,o,i,u,c,l).compute()}},2610:function(e,t,n){"use strict";n.d(t,{q:function(){return s}});var r=n(5840);function s(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return r.ZSL.makeZerosTypedArray(0,s);const a=Math.abs(Math.ceil((t-e)/n)),o=r.ZSL.makeZerosTypedArray(a,s);t<e&&1===n&&(n=-1),o[0]=e;for(let r=1;r<o.length;r++)o[r]=o[r-1]+n;return o}},5806:function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}n.d(t,{r:function(){return s},x:function(){return r}});const s={kernelName:n(5840).LRy,backendName:"cpu",kernelFunc:r}},4092:function(e,t,n){"use strict";n.d(t,{Lt:function(){return u},Zy:function(){return o}});var r=n(5840),s=n(5705),a=n(1694);const o=(0,s.o)((e=>1/Math.sqrt(e))),i=(0,a.F)(r.TOR,o),u={kernelName:r.TOR,backendName:"cpu",kernelFunc:i}},9095:function(e,t,n){"use strict";n.d(t,{b:function(){return s}});var r=n(5840);function s(e,t,n,s,a,o,i,u,c,l){const p=[s/a,a],d=e.values,h=t.values;if(0===s)return(0,r.ra8)(n,t.dtype);const f=c instanceof r.ylz?c:(0,r.ra8)(p,t.dtype);"string"==typeof c||"number"==typeof c?f.values.fill(c):"boolean"==typeof c&&f.values.fill(+c);for(let r=0;r<o;r++){const e=[];let o=0;for(let t=0;t<i;t++){const n=d[r*i+t];e.push(n),o+=n*u[t]}if(o<0||o>=s/a)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<a;n++)l?f.values[o*a+n]+=h[r*a+n]:f.values[o*a+n]=0===t.rank?h[0]:h[r*a+n]}return f}},4904:function(e,t,n){"use strict";n.d(t,{X3:function(){return u},ry:function(){return i},zv:function(){return o}});var r=n(5840),s=n(5705),a=n(1694);const o=(0,s.o)((e=>1/(1+Math.exp(-e)))),i=(0,a.v)(r.vI1,(e=>1/(1+Math.exp(-e)))),u={kernelName:r.vI1,backendName:"cpu",kernelFunc:i}},7906:function(e,t,n){"use strict";n.d(t,{HS:function(){return a},di:function(){return o},lv:function(){return i}});var r=n(5840),s=n(7870);function a(e,t,n,s,a){const o=r.Kro.isSliceContinous(s,t,n),i=r.ZSL.sizeFromShape(n),u=r.ZSL.computeStrides(s);if(o){const n=r.Kro.computeFlatOffset(t,u);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const c="string"===a?r.C0T.fromUint8ToStringArray(e):e,l=(0,r.ra8)(s,a,c),p=(0,r.ra8)(n,a);for(let r=0;r<p.size;++r){const e=p.indexToLoc(r),n=e.map(((e,n)=>e+t[n]));p.set(l.get(...n),...e)}return"string"===a?r.C0T.fromStringArrayToUint8(p.values):p.values}function o(e){const{inputs:t,backend:n,attrs:o}=e,{x:i}=t,{begin:u,size:c}=o;(0,s.C)(i,"slice");const[l,p]=r.Kro.parseSliceParams(i,u,c);r.Kro.assertParamsValid(i,l,p);const d=a(n.data.get(i.dataId).values,l,p,i.shape,i.dtype);return n.makeTensorInfo(p,i.dtype,d)}const i={kernelName:r.JiE,backendName:"cpu",kernelFunc:o}},5744:function(e,t,n){"use strict";n.d(t,{y:function(){return s}});var r=n(5840);function s(e,t,n,s,a,o,i){const u=t[0],c=o[0],l=new Array(c),p=new Array(u),d=t[1];if(0===c){if(0!==u)throw new Error(r.C0T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[r.ZSL.getArrayFromDType(n,0),[0,d],r.ZSL.getArrayFromDType(a,0),l,p]}let h=!0,f=0;const m=new Array(c).fill(0);for(let y=0;y<u;++y){const t=e[y*d];if(t<0)throw new Error(r.C0T.getSparseFillEmptyRowsNegativeIndexErrorMessage(y,t));if(t>=c)throw new Error(r.C0T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(y,t,c));++m[t],h=h&&t>=f,f=t}let g=!0;for(let r=0;r<c;++r){const e=0===m[r];l[r]=e,g=g&&!e,m[r]=Math.max(m[r],1),r>0&&(m[r]+=m[r-1])}if(g&&h){const t=e,n=s;for(let e=0;e<u;++e)p[e]=e;return[t,[u,d],n,l,p]}{const t=m[c-1],o=r.ZSL.getArrayFromDType(n,t*d),h=r.ZSL.getArrayFromDType(a,t),f=new Array(c).fill(0);for(let n=0;n<u;++n){const t=e[n*d],r=f[t],a=(0===t?0:m[t-1])+r;f[t]++;for(let s=0;s<d;++s)o[a*d+s]=e[n*d+s];h[a]=s[n],p[n]=a}for(let e=0;e<c;++e){if(0===f[e]){const t=0===e?0:m[e-1];o[t*d+0]=e;for(let e=1;e<d;++e)o[t*d+e]=0;h[t]=i}}return[o,[t,d],h,l,p]}}},5587:function(e,t,n){"use strict";n.d(t,{l:function(){return s}});var r=n(5840);function s(e,t,n,s,a){const o=r.ZSL.sizeFromShape(s),i=t[0],u=a.length,c=[];let l=1,p=-1;for(let g=0;g<u;++g){const e=a[g];if(-1===e){if(-1!==p)throw new Error(r.C0T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,g));p=g,c.push(1)}else{if(e<0)throw new Error(r.C0T.getSparseReshapeNegativeOutputDimErrorMessage(g,e));l*=e,c.push(e)}}if(-1!==p){if(l<=0)throw new Error(r.C0T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(o/l);if(l*e!==o)throw new Error(r.C0T.getSparseReshapeInputOutputMultipleErrorMessage(s,c));c[p]=e}if(r.ZSL.sizeFromShape(c)!==o)throw new Error(r.C0T.getSparseReshapeInputOutputMismatchErrorMessage(s,c));const d=s.length,h=[];if(d>0){h[d-1]=1;for(let e=d-2;e>=0;--e)h[e]=h[e+1]*s[e+1]}const f=[];if(u>0){f[u-1]=1;for(let e=u-2;e>=0;--e)f[e]=f[e+1]*c[e+1]}const m=r.ZSL.getArrayFromDType(n,i*u);for(let r=0;r<i;++r){let t=0;for(let n=0;n<d;++n)t+=e[r*d+n]*h[n];for(let e=0;e<u;++e)m[r*u+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[i,u],c]}},5589:function(e,t,n){"use strict";n.d(t,{z:function(){return s}});var r=n(5840);function s(e,t,n,s,a,o=!1,i=0){const u=s.length,c=[t[0],e.length/t[0]],l=c[1],p=u>0?a[u-1]+1:0;if(p<0)throw new Error(r.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const d=t.slice();d[0]=p;const h=d.reduce(((e,t)=>e*t),1),f=r.ZSL.getArrayFromDType(n,h);if(0===u)return p>0&&f.fill(i),[f,d];if(p<=0)throw new Error(r.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=a[m];for(;;){let t=0;if(g<u){if(t=a[g],b===t){++g;continue}if(b>=t)throw new Error(r.C0T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=p)throw new Error(r.C0T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,p));b>y&&f.fill(i,y*l,b*l);for(let n=m;n<g;++n){const t=s[n];if(t<0||t>=c[0])throw new Error(r.C0T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,s[n],c[0]));for(let n=0;n<l;n++)f[b*l+n]+=e[t*l+n]}if(o)for(let e=0;e<l;e++)f[b*l+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>u)break}return y<p&&f.fill(i,y*l,p*l),[f,d]}},3252:function(e,t,n){"use strict";n.d(t,{Fu:function(){return u},x6:function(){return o}});var r=n(5840),s=n(5705),a=n(1694);const o=(0,s.o)((e=>Math.sqrt(e))),i=(0,a.v)(r.dFH,(e=>Math.sqrt(e))),u={kernelName:r.dFH,backendName:"cpu",kernelFunc:i}},7985:function(e,t,n){"use strict";n.d(t,{C:function(){return u},_:function(){return o}});var r=n(5840),s=n(5705),a=n(1694);const o=(0,s.o)(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),i=(0,a.F)(r.GZp,o),u={kernelName:r.GZp,backendName:"cpu",kernelFunc:i}},7686:function(e,t,n){"use strict";n.d(t,{e:function(){return s}});var r=n(5840);function s(e,t,n,s){const a=(0,r.ra8)(e,t.dtype);for(let r=0;r<a.size;r++){const e=a.indexToLoc(r),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+s[t];a.set(t.get(...o),...e)}return a}},3514:function(e,t,n){"use strict";n.d(t,{G:function(){return a}});var r=n(5840);class s{constructor(e,t,n,s,a,o){this.separator=r.ZSL.encodeString(e),this.nGramWidths=t,this.leftPad=r.ZSL.encodeString(n),this.rightPad=r.ZSL.encodeString(s),this.padWidth=a,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let o=0;o<s;++o){const i=this.getPadWidth(a),u=Math.max(0,i-o),c=Math.max(0,i-(s-(o+1))),l=a-(u+c),p=t+(u>0?0:o-i);let d=0;d+=u*this.leftPad.length;for(let t=0;t<l;++t)d+=e[p+t].length;d+=c*this.rightPad.length;d+=(u+c+l-1)*this.separator.length,n[r+o]=new Uint8Array(d);const h=n[r+o];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<l-1;++t)m(e[p+t]),m(this.separator);if(l>0){m(e[p+l-1]);for(let e=0;e<c;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<c-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=s-1,o=r.ZSL.getArrayFromDType("int32",s);if(0===n||0===s){const e=new Array(n);for(let t=0;t<=a;++t)o[t]=0;return[e,o]}o[0]=0;for(let r=1;r<=a;++r){const e=t[r]-t[r-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),o[r]=o[r-1]+n}const i=new Array(o[a]);for(let r=0;r<a;++r){const n=t[r];let s=o[r];if(this.nGramWidths.forEach((a=>{const o=t[r+1]-t[r],u=this.getNumNGrams(o,a);this.createNGrams(e,n,i,s,u,a),s+=u})),this.preserveShort&&s===o[r]){const a=t[r+1]-t[r];if(0===a)continue;const o=a+2*this.padWidth,u=1;this.createNGrams(e,n,i,s,u,o)}}return[i,o]}}function a(e,t,n,r,a,o,i,u){return new s(n,r,a,o,i,u).compute(e,t)}},2948:function(e,t,n){"use strict";n.d(t,{S:function(){return a}});var r=n(5840);function s(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function a(e,t,n){const a=e.length,o=[];let i=0,u=0;const c=new Array(a);for(let r=0;r<a;++r){const a=o.length;s(e[r],t,n,o);const l=o.length-a;c[r]=l,i+=l,u=Math.max(u,l)}const l=r.ZSL.getArrayFromDType("int32",2*i),p=new Array(i),d=[a,u];let h=0;for(let r=0;r<a;++r)for(let e=0;e<c[r];++e)l[2*h]=r,l[2*h+1]=e,p[h]=o[h],++h;return[l,p,d]}},7916:function(e,t,n){"use strict";n.d(t,{f:function(){return s}});var r=n(5840);function s(e,t){const n=r.ZSL.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=r.ZSL.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}},8566:function(e,t,n){"use strict";n.d(t,{Zl:function(){return c},dl:function(){return o},jb:function(){return u}});var r=n(5840),s=n(8195),a=n(6499);const o=(0,s.Z)(((e,t)=>e-t)),i=(0,a.B)(((e,t,n,r)=>({real:e-n,imag:t-r}))),u=(0,a.j)(r.PbM,o,i),c={kernelName:r.PbM,backendName:"cpu",kernelFunc:u}},1671:function(e,t,n){"use strict";n.d(t,{D:function(){return s}});var r=n(5840);function s(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const s=(0,r.ra8)(n,e.dtype);for(let r=0;r<s.values.length;++r){const t=s.indexToLoc(r),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const a=e.locToIndex(n);s.values[r]=e.values[a]}return s}},3475:function(e,t,n){"use strict";n.d(t,{x:function(){return o}});var r=n(5840);const s=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function a(e,t,n=0,o=e.length-1){for(;o>n;){if(o-n>600){const r=o-n+1,s=t-n+1,i=Math.log(r),u=.5*Math.exp(2*i/3),c=.5*Math.sqrt(i*u*(r-u)/r)*Math.sign(s-r/2);a(e,t,Math.max(n,Math.floor(t-s*u/r+c)),Math.min(o,Math.floor(t+(r-s)*u/r+c)))}const i=e[t];let u=n,c=o;for(r.ZSL.swap(e,n,t),s(e[o],i)>0&&r.ZSL.swap(e,n,o);u<c;){for(r.ZSL.swap(e,u,c),u++,c--;s(e[u],i)<0;)u+=1;for(;s(e[c],i)>0;)c-=1}0===s(e[n],i)?r.ZSL.swap(e,n,c):(c+=1,r.ZSL.swap(e,c,o)),c<=t&&(n=c+1),t<=c&&(o=c-1)}}function o(e,t,n,o,i){const u=t[t.length-1],[c,l]=[e.length/u,u],p=r.ZSL.getTypedArrayFromDType(n,c*o),d=r.ZSL.getTypedArrayFromDType("int32",c*o);for(let r=0;r<c;r++){const t=r*l,n=e.subarray(t,t+l);let u=new Array(n.length);n.forEach(((e,t)=>u[t]={value:e,index:t})),o<u.length&&(a(u,o),u=u.slice(0,o)),i&&u.sort(s);const c=r*o,h=p.subarray(c,c+o),f=d.subarray(c,c+o);for(let e=0;e<o;e++)h[e]=u[e].value,f[e]=u[e].index}const h=t.slice();return h[h.length-1]=o,[(0,r.ra8)(h,n,p),(0,r.ra8)(h,"int32",d)]}},5655:function(e,t,n){"use strict";n.d(t,{W:function(){return i},m:function(){return o}});var r=n(5840),s=n(7870),a=n(3396);function o(e){const{inputs:t,attrs:n,backend:r}=e,{x:o}=t,{perm:i}=n;(0,s.C)(o,"transpose");const u=o.shape.length,c=new Array(u);for(let s=0;s<c.length;s++)c[s]=o.shape[i[s]];const l=r.data.get(o.dataId).values,p=(0,a._)(l,o.shape,o.dtype,i,c);return{dataId:r.write(p,c,o.dtype),shape:c,dtype:o.dtype}}const i={kernelName:r.wx0,backendName:"cpu",kernelFunc:o}},3396:function(e,t,n){"use strict";n.d(t,{_:function(){return s}});var r=n(5840);function s(e,t,n,s,a){const o=t.length,i=r.ZSL.sizeFromShape(t),u=r.ZSL.computeStrides(t),c=r.ZSL.computeStrides(a),l=r.ZSL.getTypedArrayFromDType(n,r.ZSL.sizeFromShape(a));for(let p=0;p<i;++p){const t=r.ZSL.indexToLoc(p,o,u),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[s[e]];l[r.ZSL.locToIndex(n,o,c)]=e[p]}return l}},2750:function(e,t,n){"use strict";n.d(t,{w:function(){return s}});var r=n(5840);function s(e,t,n,s){const a=r.ZSL.parseAxisParam(t,n)[0],o=[1,n[0],1];for(let r=0;r<a;r++)o[0]*=n[r];o[1]=n[a];for(let r=a+1;r<n.length;r++)o[2]*=n[r];const i=new Map,u=new Int32Array(n[a]),c=new r.ylz(o,s,e),l=[],p=1===o[0]&&1===o[2];for(let r=0;r<n[a];r++){let t;if(p)t=e[r].toString();else{const e=[];for(let t=0;t<o[0];t++)for(let n=0;n<o[2];n++)e.push(c.get(t,r,n));t=e.join(",")}const n=i.get(t);if(null!=n)u[r]=n;else{const e=i.size;i.set(t,e),u[r]=e,l.push(r)}}const d=o.slice();d[1]=i.size;const h=new r.ylz(d,s);l.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)h.set(c.get(n,e,r),n,t,r)}));const f=n.slice();return f[a]=d[1],{outputValues:h.values,outputShape:f,indices:u}}},8195:function(e,t,n){"use strict";n.d(t,{Z:function(){return s}});var r=n(5840);function s(e){return(t,n,s,a,o)=>{const i=r.C0T.assertAndGetBroadcastShape(t,n),u=i.length,c=r.ZSL.computeStrides(i),l=r.ZSL.sizeFromShape(i),p=r.ZSL.getTypedArrayFromDType(o,l),d=t.length,h=n.length,f=r.ZSL.computeStrides(t),m=r.ZSL.computeStrides(n),g=r.C0T.getBroadcastDims(t,i),y=r.C0T.getBroadcastDims(n,i);if(g.length+y.length===0)for(let r=0;r<p.length;++r)p[r]=e(s[r%s.length],a[r%a.length]);else for(let b=0;b<p.length;++b){const t=r.ZSL.indexToLoc(b,u,c),n=t.slice(-d);g.forEach((e=>n[e]=0));const o=r.ZSL.locToIndex(n,d,f),i=t.slice(-h);y.forEach((e=>i[e]=0));const l=r.ZSL.locToIndex(i,h,m);p[b]=e(s[o],a[l])}return[p,i]}}},6499:function(e,t,n){"use strict";n.d(t,{B:function(){return u},j:function(){return i}});var r=n(5840),s=n(7870),a=n(6094),o=n(9436);function i(e,t,n,i){return null==n?({inputs:n,backend:a})=>{const{a:o,b:u}=n,c=a;(0,s.C)([o,u],e);const l=c.data.get(o.dataId).values,p=c.data.get(u.dataId).values,d="string"===o.dtype?r.C0T.fromUint8ToStringArray(l):l,h="string"===o.dtype?r.C0T.fromUint8ToStringArray(p):p,f=i||o.dtype,[m,g]=t(o.shape,u.shape,d,h,f);return c.makeTensorInfo(g,f,m)}:({inputs:e,backend:r})=>{const{a:s,b:u}=e,c=r;if("complex64"===s.dtype||"complex64"===u.dtype){const e=(0,a.wg)({inputs:{x:s},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),r=t.complexTensorInfos.real,i=t.complexTensorInfos.imag,l=c.data.get(r.dataId).values,p=c.data.get(i.dataId).values,d=(0,a.wg)({inputs:{x:u},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(d.dataId),f=h.complexTensorInfos.real,m=h.complexTensorInfos.imag,g=c.data.get(f.dataId).values,y=c.data.get(m.dataId).values,[b,x,v]=n(s.shape,u.shape,l,p,g,y),w=c.makeTensorInfo(v,"float32",b),k=c.makeTensorInfo(v,"float32",x),T=(0,o.f)({inputs:{real:w,imag:k},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(d),c.disposeIntermediateTensorInfo(w),c.disposeIntermediateTensorInfo(k),T}{const e=c.data.get(s.dataId).values,n=c.data.get(u.dataId).values,r=i||s.dtype,[a,o]=t(s.shape,u.shape,e,n,r);return c.makeTensorInfo(o,r,a)}}}function u(e){return(t,n,s,a,o,i)=>{const u=r.C0T.assertAndGetBroadcastShape(t,n),c=r.ZSL.sizeFromShape(u),l=u.length,p=r.ZSL.computeStrides(u),d=r.ZSL.getTypedArrayFromDType("float32",c),h=r.ZSL.getTypedArrayFromDType("float32",c),f=r.C0T.getBroadcastDims(t,u),m=r.C0T.getBroadcastDims(n,u),g=r.C0T.mergeRealAndImagArrays(s,a),y=r.C0T.mergeRealAndImagArrays(o,i),b=t.length,x=r.ZSL.computeStrides(t),v=n.length,w=r.ZSL.computeStrides(n);if(f.length+m.length===0)for(let r=0;r<d.length;r++){const t=r%g.length,n=r%y.length,s=e(g[2*t],g[2*t+1],y[2*n],y[2*n+1]);d[r]=s.real,h[r]=s.imag}else for(let k=0;k<d.length;k++){const t=r.ZSL.indexToLoc(k,l,p),n=t.slice(-b);f.forEach((e=>n[e]=0));const s=r.ZSL.locToIndex(n,b,x),a=t.slice(-v);m.forEach((e=>a[e]=0));const o=r.ZSL.locToIndex(a,v,w),i=e(g[2*s],g[2*s+1],y[2*o],y[2*o+1]);d[k]=i.real,h[k]=i.imag}return[d,h,u]}}},5705:function(e,t,n){"use strict";n.d(t,{o:function(){return s}});var r=n(5840);function s(e){return(t,n,s)=>{const a=r.ZSL.getArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)a[r]=e(t[r],s);return a}}},1694:function(e,t,n){"use strict";n.d(t,{F:function(){return i},v:function(){return o}});var r=n(5840),s=n(7870),a=n(5705);function o(e,t,n){return i(e,(0,a.o)(t),n)}function i(e,t,n){return({inputs:a,attrs:o,backend:i})=>{const{x:u}=a;(0,s.C)(u,e);const c=i,l=c.data.get(u.dataId).values;let p;if("string"===u.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");p=r.C0T.fromUint8ToStringArray(l)}else p=l;const d=n||u.dtype,h=t(p,d,o);return c.makeTensorInfo(u.shape,d,h)}}},1317:function(e,t,n){"use strict";n.d(t,{U:function(){return a}});var r=n(5840),s=n(9436);function a(e,t,n="float32"){if("complex64"===n){const n=a(e,t,"float32"),r=a(e,t,"float32");return(0,s.f)({inputs:{real:n,imag:r},backend:e})}const o=r.ZSL.makeZerosTypedArray(r.ZSL.sizeFromShape(t),n);return e.makeTensorInfo(t,n,o)}},597:function(e,t,n){"use strict";n.d(t,{bU:function(){return i},lj:function(){return o}});var r=n(5840);const s={},a={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function o(e,t){s[e]=t}function i(e,t){if(!(e in s)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,r._K2)().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete s[e]}),!1),(0,r._K2)().getBool("SOFTWARE_WEBGL_ENABLED")&&(a.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",a)||n.getContext("experimental-webgl",a);return n.getContext("webgl2",a)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;s[e]=n}const n=s[e];return null==n||n.isContextLost()?(delete s[e],i(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),s[e])}},4499:function(e,t,n){"use strict";n.d(t,{K:function(){return i}});var r=n(8765),s=n(2792),a=n(2394),o=n(8560);class i{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=o.BB.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=(0,r.B)();this.outputShape=e,this.enableShapeUniforms=(0,s.ik)(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?a.WA(["r","c","d"],e):a.UG(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}},6195:function(e,t,n){"use strict";n.d(t,{S:function(){return i}});var r=n(8765),s=n(2792),a=n(2394),o=n(8560);class i{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=o.BB.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=(0,r.B)();this.outputShape=e,this.enableShapeUniforms=(0,s.ik)(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?a.WA(["r","c","d"],e):a.UG(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}},5368:function(e,t,n){"use strict";n.d(t,{$:function(){return o}});var r=n(8765),s=n(2394),a=n(8560);class o{constructor(e){this.variableNames=["A"],this.outTexUsage=a.tT.DOWNLOAD;const t=(0,r.B)();this.outputShape=e,this.userCode=`\n      ${s.G2}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}},8697:function(e,t,n){"use strict";n.d(t,{N:function(){return o}});var r=n(8765),s=n(2394),a=n(8560);class o{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=a.tT.DOWNLOAD;const t=(0,r.B)();this.outputShape=e,this.userCode=`\n      ${s.G2}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}},4187:function(e,t,n){"use strict";n.d(t,{C:function(){return i}});var r=n(8765),s=n(2792),a=n(2394);const o={R:0,G:1,B:2,A:3};class i{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const i=(0,r.B)();this.outputShape=e,this.enableShapeUniforms=(0,s.ik)(this.outputShape.length);let u="result";t&&(u="floor(result * 255. + 0.5)");let c="";for(let r=0;r<n.length;r++){const e=n[r];c+=`\n          if(offset == ${r}) {\n            result = values[${o[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?a.Od():a.fM(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${i.texture2D}(A, uv);\n          ${c}\n        }\n        ${i.output} = vec4(${u}, 0., 0., 0.);\n      }\n    `}}},5320:function(e,t,n){"use strict";n.d(t,{A:function(){return o}});var r=n(8765),s=n(2792),a=n(2394);class o{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=(0,r.B)();this.outputShape=e,this.enableShapeUniforms=(0,s.ik)(this.outputShape.length);let o="",i="result";t&&(i="floor(result * 255. + 0.5)");for(let r=0;r<=1;r++)for(let t=0;t<=1;t++){const s=2*r+t;o+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${r} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${r};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?a.Od():a.fM(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${o}\n\n          ${n.output} = ${i};\n        }\n    `}}},6541:function(e,t,n){"use strict";var r=n(5840),s=n(8380);const a=(0,r._K2)();a.registerFlag("HAS_WEBGL",(()=>a.getNumber("WEBGL_VERSION")>0)),a.registerFlag("WEBGL_VERSION",(()=>(0,s.Zj)(2)?2:(0,s.Zj)(1)?1:0)),a.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),a.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===a.get("WEBGL_VERSION"))),a.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),a.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),a.registerFlag("WEBGL_PACK",(()=>a.getBool("HAS_WEBGL"))),a.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_CLIP",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_REDUCE",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_LAZILY_UNPACK",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_CONV_IM2COL",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>a.getBool("WEBGL_PACK"))),a.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>(0,s.Se)(a.getNumber("WEBGL_VERSION")))),a.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>(0,s.jL)(a.getNumber("WEBGL_VERSION")))),a.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=a.getNumber("WEBGL_VERSION");return 0===e?0:(0,s.VJ)(e)})),a.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>a.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.eMq.isMobile())),a.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>(0,s.I2)(a.getNumber("WEBGL_VERSION")))),a.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!a.getBool("WEBGL_FORCE_F16_TEXTURES")&&a.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),a.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>(0,s.N6)(a.getNumber("WEBGL_VERSION")))),a.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>(0,s.Ut)(a.getNumber("WEBGL_VERSION")))),a.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>a.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),a.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),a.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>r.eMq.isMobile()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),a.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),a.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),a.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),a.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),a.registerFlag("WEBGL_EXP_CONV",(()=>!1)),a.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>a.getBool("IS_TEST"))),a.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),a.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),a.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),a.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1))},8765:function(e,t,n){"use strict";n.d(t,{B:function(){return s}});var r=n(5840);function s(){let e,t,n,s,a,o,i,u,c,l;return 2===(0,r._K2)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",a="texture",o="outputColor",i="out vec4 outputColor;",u=(0,r._K2)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",a="texture2D",o="gl_FragColor",i="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:a,output:o,defineOutput:i,defineSpecialNaN:u,defineSpecialInf:c,defineRound:l}}},3839:function(e,t,n){"use strict";n.d(t,{n:function(){return u}});var r=n(5840),s=n(597),a=n(7646),o=n(8560),i=n(8380);class u{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,r._K2)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,(0,s.lj)(t,e)):this.gl=(0,s.bU)(t),e=this.gl,2===(0,r._K2)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>i.ul(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>i.ul(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>i.ul(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>i.ul(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>i.ul(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>i.ul(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>i.ul(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>i.ul(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const u="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,r._K2)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=i.HM(this.gl,e),i.Ql(this.gl,t))this.textureHalfFloatExtension=i.HM(this.gl,t);else if((0,r._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),i.Ql(this.gl,u))this.colorBufferHalfFloatExtension=i.HM(this.gl,u);else if((0,r._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",i.Ql(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!i.Ql(this.gl,u))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(u)}this.vertexBuffer=a.b1(this.gl),this.indexBuffer=a.Ng(this.gl),this.framebuffer=i.oN(this.gl),this.textureConfig=o.EZ(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,r._K2)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;i.ul(e,(()=>e.finish())),i.ul(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),i.ul(e,(()=>e.deleteFramebuffer(this.framebuffer))),i.ul(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),i.ul(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),i.ul(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),a.cD(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),a.WH(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),a.Hw(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),a.qg(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),a.y7(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),a.Me(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),a.bG(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(i.sA(this.gl,this.framebuffer),this.outputTexture=null),i.ul(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>a.ir(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,o){return a.SD(this.gl,e,t,n,r,s,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return a.$k(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=a.zP(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,r._K2)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else(0,r._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,r._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>a.uS(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=a.yr(t));const n=i.rC(t);i.ul(t,(()=>t.attachShader(n,this.vertexShader))),i.ul(t,(()=>t.attachShader(n,e))),i.R7(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&i.bz(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;i.ul(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),a.Z(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(i.ul(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&i.bz(this.gl,this.program),i.ul(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?i.Rh(this.gl,e,t):i.Yn(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),i.ul(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),i.y_(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=o.NO(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&i.bz(this.gl,this.program),i.s6(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}i.ul(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),i.ul(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=i.HM(this.gl,2===(0,r._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,r._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,r._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.ZSL.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,r._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,r._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,r._K2)().platform&&(n=(0,r._K2)().platform.setTimeoutCustom.bind((0,r._K2)().platform)),r.ZSL.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),i.SO(this.gl,e,this.framebuffer),this.debug&&i.s6(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(i.SO(this.gl,this.outputTexture,this.framebuffer),this.debug&&i.s6(this.gl)):i.sA(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;i.SO(r,e,this.framebuffer),this.debug&&i.s6(r),this.outputTexture=e,i.ul(r,(()=>r.viewport(0,0,t,n))),i.ul(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),i.ul(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}},2792:function(e,t,n){"use strict";n.d(t,{Kz:function(){return o},Tb:function(){return l},Tw:function(){return i},ik:function(){return p},mB:function(){return c}});var r=n(5840),s=n(7575),a=n(8380);function o(e,t,n,o){const u=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),c=u.map((e=>e.shapeInfo)),l={logicalShape:o.shape,texShape:o.texData.texShape,isUniform:!1,isPacked:o.texData.isPacked,flatOffset:null},p=s.yr(u,l,t),d=(0,a.yG)(e.gl,p),h=e.createProgram(d);return(0,r._K2)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:d,source:p,webGLProgram:h,inShapeInfos:c,outShapeInfo:l,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(h),Object.assign({program:t,fragmentShader:d,source:p,webGLProgram:h,inShapeInfos:c,outShapeInfo:l},i(e,t,h)))}function i(e,t,n){const s=[],a=[];let o,i,u,c=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===(0,r._K2)().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const p=!1;for(const r of t.variableNames){const a={name:r,uniform:e.getUniformLocation(n,r,p),offset:e.getUniformLocation(n,`offset${r}`,p)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${r}Shape`,p),a.texShape=e.getUniformLocation(n,`${r}TexShape`,p)),s.push(a)}if(t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",p),u=e.getUniformLocation(n,"outShapeStrides",p),i=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms)for(const r of t.customUniforms)a.push(e.getUniformLocation(n,r.name,p));return{variablesLocations:s,customUniformLocations:a,infLoc:c,nanLoc:l,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:i}}function u(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,a=t[n],o=a.shape;if(!r.ZSL.arraysEqual(s,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${o} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,u=a.isUniform?null:a.texData.texShape;if(!r.ZSL.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)}))}function c(e,t,n,a,o){t.program.enableShapeUniforms||(u(t.inShapeInfos,n),u([t.outShapeInfo],[a]));const i=a.texData.texture,c=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,c[0],c[1]):e.setOutputMatrixTexture(i.texture,c[0],c[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,r._K2)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<n.length;++u){const a=n[u],{uniform:o,offset:i,shape:c,texShape:l}=t.variablesLocations[u];if(c){const{uniformShape:n}=s.YE(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(c,new Int32Array(n));break;case 2:e.gl.uniform2iv(c,new Int32Array(n));break;case 3:e.gl.uniform3iv(c,new Int32Array(n));break;case 4:e.gl.uniform4iv(c,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,a.texData.texShape[0],a.texData.texShape[1]),null!=o)if(a.isUniform)if(r.ZSL.sizeFromShape(a.shape)<2)e.gl.uniform1f(o,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(o,t)}else null!=a.texData.slice&&null!=i&&e.gl.uniform1i(i,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,o,u)}const l=t.outShapeLocation;if(l)switch(a.shape.length){case 1:e.gl.uniform1iv(l,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(l,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(l,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(l,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=r.ZSL.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&o)for(let r=0;r<t.program.customUniforms.length;++r){const n=t.program.customUniforms[r],s=t.customUniformLocations[r],a=o[r];if("float"===n.type)e.gl.uniform1fv(s,a);else if("vec2"===n.type)e.gl.uniform2fv(s,a);else if("vec3"===n.type)e.gl.uniform3fv(s,a);else if("vec4"===n.type)e.gl.uniform4fv(s,a);else if("int"===n.type)e.gl.uniform1iv(s,a);else if("ivec2"===n.type)e.gl.uniform2iv(s,a);else if("ivec3"===n.type)e.gl.uniform3iv(s,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,a)}}e.executeProgram()}function l(e,t,n){let a="";t.concat(n).forEach((t=>{const o=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:l}=s.YE(e.packedInputs,t.shape,i);let p="",d="",h="";if(1===c.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];p=`${e[0]>1}_${e[1]>1}`}else if(2!==c.length||e.packedInputs){if(c.length>2&&!e.packedInputs){const e=r.ZSL.computeStrides(c);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else d=`${c[0]>1}_${c[1]>1}`;const f=t.shape.length,m=2===c.length&&r.ZSL.arraysEqual(t.shape,i),g=1===r.ZSL.sizeFromShape(t.shape),y=r.C0T.getBroadcastDims(t.shape,n.shape),b=!e.packedInputs&&f===n.shape.length&&r.ZSL.arraysEqual(i,n.texData.texShape),x=e.packedInputs||c.length>2?"":`${i[0]>1}_${i[1]>1}`;a+=`${f}_${b}_${u?l:""}_${c.length}_${g}_${y}_${m}_${p}_${d}_${h}_${x}_${o}`}else{const e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${o}`}}));const o=e.userCode;let i=e.constructor.name;return i+="_"+a+"_"+o+`${(0,r._K2)().getNumber("WEBGL_VERSION")}`,i}function p(e){return(0,r._K2)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}},7646:function(e,t,n){"use strict";n.d(t,{$k:function(){return N},Hw:function(){return g},Ij:function(){return y},J$:function(){return h},Me:function(){return v},Ng:function(){return c},SD:function(){return C},WH:function(){return f},Z:function(){return w},b1:function(){return u},bG:function(){return b},cD:function(){return d},fj:function(){return p},ir:function(){return I},qg:function(){return T},uS:function(){return E},wM:function(){return m},y7:function(){return k},yr:function(){return i},z8:function(){return x},zP:function(){return S}});var r=n(5840),s=n(8765),a=n(8560),o=n(8380);function i(e){const t=(0,s.B)(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return o.yr(e,n)}function u(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return o.HW(e,t)}function c(e){const t=new Uint16Array([0,1,2,2,1,3]);return o.$e(e,t)}function l(e,t,n,s,a,i){o.ph(t,n);const u=o.sZ(e),c=e.TEXTURE_2D;return o.ul(e,(()=>e.bindTexture(c,u))),o.ul(e,(()=>e.texParameteri(c,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),o.ul(e,(()=>e.texParameteri(c,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),o.ul(e,(()=>e.texParameteri(c,e.TEXTURE_MIN_FILTER,e.NEAREST))),o.ul(e,(()=>e.texParameteri(c,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,r._K2)().getNumber("WEBGL_VERSION")?o.ul(e,(()=>e.texImage2D(c,0,s,t,n,0,a,i,null))):o.ul(e,(()=>e.texStorage2D(c,1,s,t,n))),o.ul(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:u,texShape:[n,t]}}function p(e){return e.internalFormatFloat}function d(e,t,n,r){const[s,o]=a.Qn(t,n);return l(e,s,o,p(r),r.textureFormatFloat,e.FLOAT)}function h(e){return e.internalFormatHalfFloat}function f(e,t,n,r){const[s,o]=a.Qn(t,n);return l(e,s,o,h(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function m(e){return e.downloadTextureFormat}function g(e,t,n,r){const[s,o]=a.Qn(t,n);return l(e,s,o,m(r),e.RGBA,e.UNSIGNED_BYTE)}function y(e){return e.internalFormatPackedFloat}function b(e,t,n,r){const[s,o]=a.NO(t,n);return l(e,s,o,y(r),e.RGBA,e.FLOAT)}function x(e){return e.internalFormatPackedHalfFloat}function v(e,t,n,r){const[s,o]=a.NO(t,n);return l(e,s,o,x(r),e.RGBA,r.textureTypeHalfFloat)}function w(e,t,n){o.ul(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));return o.rw(e,t,"clipSpacePos",n,3,20,0)&&o.rw(e,t,"uv",n,2,20,12)}function k(e,t,n,s,a,i){let u,c,l;o.ul(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(u=new Uint8Array(n*s*4),c=e.UNSIGNED_BYTE,l=e.RGBA):(u=new Float32Array(n*s*4),c=e.FLOAT,l=i.internalFormatPackedFloat),u.set(a),2===(0,r._K2)().getNumber("WEBGL_VERSION")?o.ul(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,c,u))):o.ul(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,c,u))),o.ul(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function T(e,t,n){o.ul(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,r._K2)().getNumber("WEBGL_VERSION")?o.ul(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):o.ul(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,r._K2)().getNumber("WEBGL_VERSION")?o.ul(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):o.ul(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),o.ul(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function S(e,t,n,r){const s=e.createBuffer();o.ul(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return o.ul(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),o.ul(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),o.ul(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}function N(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function I(e,t,n,r){const[s,i]=a.Qn(t,n),u=new Uint8Array(a.EX(t*n,4));return o.ul(e,(()=>e.readPixels(0,0,s,i,r.downloadTextureFormat,e.UNSIGNED_BYTE,u))),new Float32Array(u.buffer)}function C(e,t,n,r,s,o,i,u){const c=e,l=new Float32Array(a.PM(o,i));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}function E(e,t,n){const r=new Float32Array(t*n*4);return o.ul(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}},457:function(e,t,n){"use strict";n.d(t,{Gs:function(){return X},jm:function(){return J},h0:function(){return ee},PA:function(){return te},Kf:function(){return ne},Md:function(){return re},dv:function(){return se},PP:function(){return ae},E$:function(){return oe},SF:function(){return ie},CJ:function(){return ue},UF:function(){return ce},QM:function(){return le},BW:function(){return de},Tm:function(){return pe},mo:function(){return fe},uw:function(){return he},AC:function(){return me},rI:function(){return ge},rw:function(){return ye},Dy:function(){return be},h:function(){return xe},Xe:function(){return ve},rQ:function(){return we},ad:function(){return ke},Og:function(){return Te},G4:function(){return Se},Oy:function(){return Ne},G3:function(){return Ie},we:function(){return Ce},tc:function(){return Ee},fC:function(){return Ae},BC:function(){return $e},f8:function(){return Fe},J3:function(){return Re},sB:function(){return De},vo:function(){return _e},zN:function(){return Oe},LF:function(){return Le},yZ:function(){return Me},cy:function(){return ze},UC:function(){return Pe},S6:function(){return Be},fW:function(){return We},lL:function(){return Ve},$O:function(){return Ue},xt:function(){return Ge},Q5:function(){return Ze},M_:function(){return je}});var r={};n.r(r),n.d(r,{mx:function(){return a.mx},XI:function(){return o.X},Nk:function(){return o.N},f6:function(){return i.f6},ct:function(){return u.ct},YG:function(){return c.YG},hH:function(){return l.h},z3:function(){return p.z3},sG:function(){return d.sG},uM:function(){return h.uM},vS:function(){return f.vS},qB:function(){return m.q},GG:function(){return g.G},lg:function(){return b.lg},rq:function(){return y.rq},cu:function(){return v.cu},WR:function(){return x.WR},GE:function(){return w.G},px:function(){return k.px},jC:function(){return T.j},He:function(){return S.He},hE:function(){return N.hE},BF:function(){return I.BF},Dk:function(){return C.Dk},cl:function(){return E.cl},_B:function(){return A._B},ub:function(){return $.u},_f:function(){return F._},Ku:function(){return R.K},qy:function(){return D.q},Zy:function(){return _.Zy},bu:function(){return O.b},zv:function(){return L.zv},dH:function(){return s.dH},HS:function(){return M.HS},yH:function(){return z.y},l3:function(){return P.l},z9:function(){return B.z},x6:function(){return W.x6},_m:function(){return V._},eW:function(){return U.e},GK:function(){return G.G},SP:function(){return Z.S},yr:function(){return j.f},dl:function(){return H.dl},Dw:function(){return K.D},xT:function(){return Y.x},_X:function(){return Q._},wz:function(){return q.w}});var s=n(2680),a=n(5315),o=n(6995),i=n(4890),u=n(6094),c=n(4759),l=n(7763),p=n(9292),d=n(6423),h=n(6789),f=n(5526),m=n(7100),g=n(3842),y=n(4346),b=n(6768),x=n(7588),v=n(3087),w=n(4190),k=n(1802),T=n(3759),S=n(6114),N=n(8580),I=n(5646),C=n(7962),E=n(7113),A=n(1675),$=n(5844),F=n(7620),R=n(814),D=n(2610),_=n(4092),O=n(9095),L=n(4904),M=n(7906),z=n(5744),P=n(5587),B=n(5589),W=n(3252),V=n(7985),U=n(7686),G=n(3514),Z=n(2948),j=n(7916),H=n(8566),K=n(1671),Y=n(3475),Q=n(3396),q=n(2750);const{mx:X,XI:J,Nk:ee,f6:te,ct:ne,YG:re,hH:se,z3:ae,sG:oe,uM:ie,vS:ue,qB:ce,GG:le,rq:pe,lg:de,WR:he,cu:fe,GE:me,px:ge,jC:ye,He:be,hE:xe,BF:ve,Dk:we,cl:ke,_B:Te,ub:Se,_f:Ne,Ku:Ie,qy:Ce,Zy:Ee,bu:Ae,zv:$e,dH:Fe,HS:Re,yH:De,l3:_e,z9:Oe,x6:Le,_m:Me,eW:ze,GK:Pe,SP:Be,yr:We,dl:Ve,Dw:Ue,xT:Ge,_X:Ze,wz:je}=r},282:function(e,t,n){"use strict";n.d(t,{m:function(){return o}});var r=n(2792),s=n(5694),a=n(7575);class o{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=(0,r.ik)(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=(0,s.Jp)("rc",this.rank),t=(0,a.bf)(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),o=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${o}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}},5694:function(e,t,n){"use strict";function r(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function s(e,t){return 1===t?[e]:r(e,t)}function a(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}n.d(t,{Fd:function(){return r},Jp:function(){return s},kp:function(){return a}})},9023:function(e,t,n){"use strict";n.d(t,{R:function(){return a}});var r=n(2792),s=n(2394);class a{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=(0,r.ik)(this.outputShape.length);let n="";for(let r=0;r<4;r++){let e="thisRC = rc;";r%2==1&&(e+="thisRC.z += 1;"),r>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}var a,o;this.userCode=`\n      ${a=t,o=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${o?s.TN(["r","c","d"],"inputShape"):s.UG(["r","c","d"],a)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?s.Od():s.fM(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}},2394:function(e,t,n){"use strict";n.d(t,{G2:function(){return c},Od:function(){return u},TN:function(){return o},UG:function(){return s},WA:function(){return a},fM:function(){return i}});var r=n(5840);function s(e,t,n="index"){const s=r.ZSL.computeStrides(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function a(e,t,n="index"){const s=r.ZSL.computeStrides(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function o(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let a=n-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${r[s]}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}function i(e){const t=r.ZSL.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function u(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}const c="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n"},8560:function(e,t,n){"use strict";n.d(t,{BB:function(){return r},EX:function(){return u},EZ:function(){return d},GM:function(){return c},NO:function(){return l},PM:function(){return p},Qn:function(){return i},j:function(){return a},tT:function(){return s}});var r,s,a,o=n(5840);function i(e,t){return[t,e]}function u(e,t){return e*t}function c(e){const t=o.ZSL.sizeFromShape(e),n=Math.ceil(t/4);return o.ZSL.sizeToSquarishShape(n)}function l(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function p(e,t){const[n,r]=l(e,t);return n*r*4}function d(e,t){const n=e;let r,s,a,i,u,c,l,p,d,h;return 2===(0,o._K2)().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,u=n.RED,l=4,p=1,d=n.HALF_FLOAT,h=n.FLOAT,c=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,u=e.RGBA,l=4,p=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,c=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:u,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:p,textureTypeHalfFloat:d,textureTypeFloat:h}}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(r||(r={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(s||(s={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(a||(a={}))},7403:function(e,t,n){"use strict";n.d(t,{p:function(){return o}});var r=n(5840),s=n(7646),a=n(8560);class o{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=u(t,n),s=c(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const o=i(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let l;return r===a.j.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===a.j.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===a.j.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===a.j.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===a.j.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(l),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),l}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const a=u(n,s),o=c(t,a,s);o in this.freeTextures||(this.freeTextures[o]=[]);const l=i(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,s),p=(0,r._K2)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==p&&this._numBytesAllocated>p?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=l):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=l),this.numUsedTextures--;const d=this.usedTextures[o],h=d&&d.indexOf(e);if(null==h||h<0)throw new Error("Cannot release a texture that was never provided by this texture manager");d[h]=d[d.length-1],d.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function i(e,t,n,r,o){const i=function(e,t){switch(e){case a.j.PACKED_2X2_FLOAT32:return(0,s.Ij)(t);case a.j.PACKED_2X2_FLOAT16:return(0,s.z8)(t);case a.j.UNPACKED_FLOAT32:return(0,s.fj)(t);case a.j.UNPACKED_FLOAT16:return(0,s.J$)(t);case a.j.PACKED_4X1_UNSIGNED_BYTE:return(0,s.wM)(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let u;if(o){const[t,n]=(0,a.NO)(e[0],e[1]);u=t*n}else{const[t,n]=(0,a.Qn)(e[0],e[1]);u=t*n}const c=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return u*c}function u(e,t){if(e===a.tT.UPLOAD)return a.j.PACKED_2X2_FLOAT32;if(e===a.tT.RENDER||null==e)return function(e){return(0,r._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?a.j.PACKED_2X2_FLOAT32:a.j.UNPACKED_FLOAT32:e?a.j.PACKED_2X2_FLOAT16:a.j.UNPACKED_FLOAT16}(t);if(e===a.tT.DOWNLOAD||e===a.tT.PIXELS)return a.j.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function c(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}},8173:function(e,t,n){"use strict";n.d(t,{Hq:function(){return d},Nb:function(){return l},UC:function(){return p},X0:function(){return u},X8:function(){return c},_Q:function(){return o},dR:function(){return a},hE:function(){return s},pd:function(){return i}});var r=n(2792);class s{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=(0,r.ik)(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const a="if (isnan(x)) return x;",o="return x;",i="return abs(x);";const u="return (x >= 0.0) ? x : (exp(x) - 1.0);",c=a+"\n  return (x < 0.0) ? 0.0 : x;\n",l=a+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",p="return x;",d="return 1.0 / (1.0 + exp(-1.0 * x));"},2509:function(e,t,n){"use strict";n.d(t,{Hq:function(){return u},Nb:function(){return i},X0:function(){return a},X8:function(){return o},_Q:function(){return s},rf:function(){return c}});var r=n(2792);const s="return x;",a="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",o="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",i="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",u="return 1.0 / (1.0 + exp(-1.0 * x));";class c{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=(0,r.ik)(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}},6969:function(e,t,n){"use strict";n.d(t,{z:function(){return o}});var r=n(2792),s=n(5694),a=n(7575);class o{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=(0,r.ik)(this.outputShape.length);const t=e.length,n=(0,s.Jp)("rc",t),o=(0,a.bf)(t),i=(0,s.kp)(t,n),u=n.slice(-2),c=t<=1?"rc":`vec2(${u.join(",")})`;this.userCode=`\n      void main() {\n        ${o} rc = getOutputCoords();\n        vec4 packedInput = getA(${i});\n\n        setOutput(getChannel(packedInput, ${c}));\n      }\n    `}}},8380:function(e,t,n){"use strict";n.d(t,{$e:function(){return x},CE:function(){return Y},FP:function(){return _},HM:function(){return l},HW:function(){return b},I2:function(){return Z},N0:function(){return R},N6:function(){return j},P0:function(){return M},Ph:function(){return D},Ql:function(){return U},R7:function(){return g},Rh:function(){return S},SO:function(){return C},Se:function(){return B},Ut:function(){return K},VJ:function(){return V},Yn:function(){return N},Zj:function(){return G},bz:function(){return y},cr:function(){return f},dm:function(){return c},fA:function(){return O},jL:function(){return W},oN:function(){return k},ph:function(){return w},rC:function(){return m},rw:function(){return T},s6:function(){return A},sA:function(){return E},sZ:function(){return v},ul:function(){return o},yG:function(){return d},y_:function(){return I},yr:function(){return p}});var r=n(5840),s=n(597),a=n(8560);function o(e,t){const n=t();return(0,r._K2)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}const i=5.96e-8,u=65504;function c(e){return!!((0,r._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||i<Math.abs(e)&&Math.abs(e)<u)}function l(e,t){return $(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function p(e,t){const n=$(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(o(e,(()=>e.shaderSource(n,t))),o(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function d(e,t){const n=$(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(o(e,(()=>e.shaderSource(n,t))),o(e,(()=>e.compileShader(n))),(0,r._K2)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw f(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const h=/ERROR: [0-9]+:([0-9]+):/g;function f(e,t){const n=h.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],a=e.split("\n"),o=a.length.toString().length+2,i=a.map(((e,t)=>r.ZSL.rightPad((t+1).toString(),o)+e));let u=0;for(let r=0;r<i.length;r++)u=Math.max(i[r].length,u);const c=i.slice(0,s-1),l=i.slice(s-1,s),p=i.slice(s);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r.ZSL.rightPad(l[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join("\n"))}function m(e){return $(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function g(e,t){if(o(e,(()=>e.linkProgram(t))),!(0,r._K2)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function y(e,t){if(o(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function b(e,t){const n=$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return o(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),o(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function x(e,t){const n=$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return o(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),o(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function v(e){return $(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function w(e,t){const n=(0,r._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function k(e){return $(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function T(e,t,n,r,s,a,i){const u=e.getAttribLocation(t,n);return-1!==u&&(o(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),o(e,(()=>e.vertexAttribPointer(u,s,e.FLOAT,!1,a,i))),o(e,(()=>e.enableVertexAttribArray(u))),!0)}function S(e,t,n){return $(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function N(e,t,n){return e.getUniformLocation(t,n)}function I(e,t,n,r){o(e,(()=>function(e,t,n){F(e,n),o(e,(()=>e.activeTexture(e.TEXTURE0+n))),o(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),o(e,(()=>e.uniform1i(n,r)))}function C(e,t,n){o(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),o(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function E(e,t){o(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),o(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function A(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function $(e,t,n){const r=o(e,(()=>t()));if(null==r)throw new Error(n);return r}function F(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function R(e,t=2){return r.ZSL.sizeFromShape(e.slice(0,e.length-t))}function D(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function _(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[R(e),...D(e)]),t}function O(e,t=!1){let n=(0,r._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=(0,r._K2)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&(0,r._K2)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,1===(e=e.map(((t,n)=>n>=e.length-2?r.ZSL.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=r.ZSL.squeezeShape(e);e=t.newShape}let a=r.ZSL.sizeFromShape(e),o=null;e.length<=1&&a<=n?o=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?o=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?o=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?o=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?o=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(o=[e[0],e[1]*e[2]*e[3]]);const i=null!=o&&Math.max(...o)>s&&Math.min(...o)<=(t?2:1)&&Math.min(...o)>0;if(null==o||i)if(t){const t=R(e);let n=2,s=2;e.length&&([n,s]=D(e)),a=t*(n/2)*(s/2),o=r.ZSL.sizeToSquarishShape(a).map((e=>2*e))}else o=r.ZSL.sizeToSquarishShape(a);return o}function L(e){return e%2==0}function M(e,t){if(e=e.slice(-2),t=t.slice(-2),r.ZSL.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(L(n)&&L(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&L(e[0])&&L(t[0])}let z,P;function B(e){if(null==z){const t=(0,s.bU)(e);z=t.getParameter(t.MAX_TEXTURE_SIZE)}return z}function W(e){if(null==P){const t=(0,s.bU)(e);P=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,P)}function V(e){if(0===e)return 0;let t;const n=(0,s.bU)(e);return t=U(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:U(n,"EXT_disjoint_timer_query")?1:0,t}function U(e,t){return null!=e.getExtension(t)}function G(e){try{if(null!=(0,s.bU)(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Z(e){if(0===e)return!1;const t=(0,s.bU)(e);if(1===e){if(!U(t,"OES_texture_float"))return!1}else if(!U(t,"EXT_color_buffer_float"))return!1;return H(t)}function j(e){if(0===e)return!1;const t=(0,s.bU)(e);if(1!==e){if(U(t,"EXT_color_buffer_float"))return H(t);const e="EXT_color_buffer_half_float";if(U(t,e)){const n=t.getExtension(e);return function(e,t){const n=(0,a.EZ)(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const s=1,o=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,o,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const u=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),u}(t,n)}return!1}if(!U(t,"OES_texture_float"))return!1;if(!U(t,"WEBGL_color_buffer_float"))return!1;return H(t)}function H(e){const t=(0,a.EZ)(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function K(e){if(2!==e)return!1;return null!=(0,s.bU)(e).fenceSync}function Y(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.ZSL.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}},5149:function(e,t,n){"use strict";n.d(t,{GJ:function(){return r},uI:function(){return s}});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class s{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}readToGPU(e,t){return a("readToGPU")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,r,s){return a("move")}createTensorFromGPUData(e,t,n){return a("createTensorFromGPUData")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},8360:function(e,t,n){"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,o=!1;for(;r<s;){a=r+(s-r>>>1);const i=n(t,e[a]);i>0?r=a+1:(s=a,o=!i)}return o?r:-r-1}(e,t,n||s)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function s(e,t){return e>t?1:e<t?-1:0}function a(e,t,n,r,s){return u(e,t,n,r,s,0)}function o(e,t,n,r,s,a){return u(e,t,n,r,s,0,!1,a,!0)}function i(e,t,n,r,s,a){return u(e,t,n,r,s,a,!0)}function u(e,t,n,s,a,o,i=!1,u=!1,d=!1){const h=[];for(let r=0;r<t.length;r++)t[r]>a&&h.push({score:t[r],boxIndex:r,suppressBeginIndex:0});h.sort(p);const f=o>0?-.5/o:0,m=[],g=[];for(;m.length<n&&h.length>0;){const t=h.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<a)break;let u=!1;for(let r=m.length-1;r>=i;--r){const n=c(e,o,m[r]);if(n>=s){u=!0;break}if(t.score=t.score*l(s,f,n),t.score<=a)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(o),g.push(t.score)):t.score>a&&r(h,t,p))}const y=m.length,b=n-y;u&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return i&&(x.selectedScores=g),d&&(x.validOutputs=y),x}function c(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),p=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),h=(i-a)*(u-o),f=(p-c)*(d-l);if(h<=0||f<=0)return 0;const m=Math.max(a,c),g=Math.max(o,l),y=Math.min(i,p),b=Math.min(u,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(h+f-x)}function l(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function p(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{c7:function(){return a},ZS:function(){return o},ut:function(){return i}})},4411:function(e,t,n){"use strict";n.d(t,{Y:function(){return s}});var r=n(448);function s(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const s=(0,r.r)(e,"int32"),a=(0,r.r)([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=s.indexToLoc(n[r]),o=r*e.length;a.values.set(t,o)}return a.toTensor()}},1585:function(e,t,n){"use strict";n.d(t,{T2:function(){return v},Ye:function(){return x}});var r=n(5149),s=n(6574),a=n(1743),o=n(7822),i=n(7074),u=n(3673),c=n(3879),l=n(5119);class p{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new h)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let o;const i=c.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:c.now()-i})}if((0,s._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let s=0;s<r.length;s++){const t=r[s];t.data().then((n=>{d(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function d(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(e,t,n,r,s,a){const o="number"==typeof r?l.av(`${r}ms`,9):r.error,i=l.av(e,25),u=t.rank,c=t.size,p=l.av(t.shape.toString(),14);let d="";for(const l in s){const e=s[l];if(null!=e){const n=e.shape||t.shape,r=n.length;d+=`${l}: ${r}D ${r>0?n:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${p}\t%c${c}\t%c${d}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(259),m=n(565);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.i(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new p(this.backendInstance),!0}setupRegisteredKernels(){(0,i.Op)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.Op)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.uI||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.i(`Initialization of backend ${e} failed`),u.i(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return u.i(`Initialization of backend ${e} failed`),u.i(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=v.runKernel(o.lzr,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return v.runKernel(o.KXH,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,i._5)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const c=(0,i._5)(t,this.backendName);l.vA(null!=c,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();u=c.kernelFunc({inputs:s,attrs:a,backend:this.backend});const o=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:p,attrs:d}=e,h=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,p,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),r&&this.addTapeNode(c,p,t,h,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map((e=>null!=p[e]?p[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,i.vQ)(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(l.vA(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const o=n.filter(((e,t)=>s[t]));return a.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&l.Kg(e[0])&&(s=e.map((e=>c.encodeString(e))));const a=r.write(s,t,n),o=new f.qY(t,n,a,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,l.SL)(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new f.qY(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new f.rT(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*l.jv(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.rT||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*l.jv(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},u=(0,i.vQ)(e);null!=u&&(r=u.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=l.Ty(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(l.vA(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));l.vA(s instanceof f.qY,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],a=n.inputs;for(const e in a){const o=a[e];let i=!1;for(let e=0;e<t.length;e++)if(r[o.id]){n.outputs.forEach((e=>r[e.id]=!0)),i=!0,s[n.id]=!0;break}if(i)break}}const a={};a[n.id]=!0;const o={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let u=0;u<e.length;u++){const t=e[u];if(s[t.id]&&o[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=(0,l.FZ)((0,l.Ze)(e),"float32");return v.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],o=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const i=a.gradient(o);for(const t in a.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const s=n((()=>i[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const o=a.inputs[t];if(!l.r1(s.shape,o.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=s;else{const t=e[o.id];e[o.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),w);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return l.vA(l.Tn(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;l.vA(t.every((e=>e instanceof f.qY)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),l.vA(n.value instanceof f.qY,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),l.vA(l.Tn(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];l.vA(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),l.vA(a.every((e=>e instanceof f.qY)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return a.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,c.now)(),n=await this.backend.time(e);return n.wallMs=(0,c.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=(0,a.L)();if(null==e._tfengine){const t=new s.OH(e);e._tfengine=new b(t)}return(0,s.tj)(e._tfengine.ENV),(0,f.qP)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const v=x();function w(e,t){const n={a:e,b:t};return v.runKernel(o.OMN,n)}},6574:function(e,t,n){"use strict";n.d(t,{OH:function(){return a},_K:function(){return i},tj:function(){return c}});var r=n(5119);const s="tfjsflags";class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.yL)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(s in e){e[s].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function o(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function i(){return u}let u=null;function c(e){u=e}},1743:function(e,t,n){"use strict";let r;function s(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function a(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{L:function(){return s},m:function(){return a}})},7668:function(e,t,n){"use strict";n.d(t,{AS:function(){return l},DZ:function(){return c},Hi:function(){return i},Hs:function(){return f},aC:function(){return p},gJ:function(){return h},jz:function(){return d},m1:function(){return u}});var r=n(1585),s=n(6574),a=n(259),o=n(565);function i(){return r.T2}function u(){return r.T2.memory()}function c(e,t){return r.T2.tidy(e,t)}function l(e){(0,o.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function p(e){return r.T2.keep(e)}function d(){return r.T2.backendName}function h(e,t,n=1){return r.T2.registerBackend(e,t,n)}function f(){return r.T2.backend}(0,a.B4)((function(e){(0,s._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},1830:function(e,t,n){"use strict";n.d(t,{_X:function(){return i},y7:function(){return o}});var r=n(1585),s=n(259),a=n(5119);function o(e,t){a.vA(a.Tn(e),(()=>"The f passed in variableGrads(f) must be a function")),a.vA(null==t||Array.isArray(t)&&t.every((e=>e instanceof s.rT)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.T2.registeredVariables)t.push(r.T2.registeredVariables[e])}const o=n?t.filter((e=>!e.trainable)):null,i=t.length;t=t.filter((e=>e.trainable)),a.vA(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`));const{value:u,grads:c}=r.T2.gradients(e,t,null,!0);a.vA(c.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),a.vA(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const l={};return t.forEach(((e,t)=>{null!=c[t]&&(l[e.name]=c[t])})),null!=o&&o.forEach((e=>l[e.name]=null)),{value:u,grads:l}}function i(e){return r.T2.customGrad(e)}},5840:function(e,t,n){"use strict";n.d(t,{ljI:function(){return ut.ljI},Vvy:function(){return ut.Vvy},PH8:function(){return ut.PH8},OMN:function(){return ut.OMN},EkD:function(){return ut.EkD},u8Z:function(){return ut.u8Z},FSt:function(){return ut.FSt},Jp_:function(){return ut.Jp_},p_m:function(){return ut.p_m},QKF:function(){return ut.QKF},epO:function(){return ut.epO},TyE:function(){return ut.TyE},lxb:function(){return ut.lxb},zP9:function(){return ut.zP9},ho8:function(){return ut.ho8},cS:function(){return ut.cS},wwC:function(){return ut.wwC},VCH:function(){return ut.VCH},jAQ:function(){return ut.jAQ},Ik2:function(){return ut.Ik2},N4F:function(){return ut.N4F},HNs:function(){return ut.HNs},vj7:function(){return ut.vj7},KXH:function(){return ut.KXH},QDP:function(){return ut.QDP},vaV:function(){return ut.vaV},pr3:function(){return ut.pr3},$zE:function(){return ut.$zE},$dB:function(){return ut.$dB},p2J:function(){return ut.p2J},rFm:function(){return ut.rFm},jfg:function(){return ut.jfg},A1h:function(){return ut.A1h},iGz:function(){return ut.iGz},gC7:function(){return ut.gC7},Mn0:function(){return ut.Mn0},MnK:function(){return ut.MnK},MRQ:function(){return ut.MRQ},jj_:function(){return ut.jj_},nY8:function(){return ut.nY8},GJx:function(){return Gn.GJ},wNW:function(){return ut.wNW},TMz:function(){return ut.TMz},tGH:function(){return ut.tGH},X$8:function(){return ut.X$8},nVu:function(){return ut.nVu},ORI:function(){return ut.ORI},jxD:function(){return ut.jxD},pk0:function(){return ut.pk0},bP9:function(){return ut.bP9},XmO:function(){return ut.XmO},Qgm:function(){return ut.Qgm},Pah:function(){return ut.Pah},rsH:function(){return ut.rsH},BRl:function(){return ut.BRl},_s9:function(){return ut._s9},ox3:function(){return ut.ox3},ybN:function(){return ut.ybN},ybj:function(){return ut.ybj},rGP:function(){return ut.rGP},SQl:function(){return ut.SQl},BxF:function(){return ut.BxF},ZgB:function(){return ut.ZgB},ElG:function(){return ut.ElG},awo:function(){return ut.awo},i5R:function(){return ut.i5R},aAr:function(){return ut.aAr},T7M:function(){return ut.T7M},O4G:function(){return ut.O4G},mxL:function(){return ut.mxL},XhZ:function(){return ut.XhZ},lLS:function(){return ut.lLS},OAQ:function(){return ut.OAQ},lzr:function(){return ut.lzr},dv8:function(){return ut.dv8},gIW:function(){return ut.gIW},E3$:function(){return ut.E3$},iPs:function(){return ut.iPs},uI_:function(){return Gn.uI},jM4:function(){return ut.jM4},ToN:function(){return ut.ToN},X0$:function(){return ut.X0$},mIA:function(){return ut.mIA},CwD:function(){return ut.CwD},mnI:function(){return ut.mnI},tG8:function(){return ut.tG8},Cg$:function(){return ut.Cg$},RUm:function(){return ut.RUm},nZd:function(){return ut.nZd},LXA:function(){return ut.LXA},VAI:function(){return ut.VAI},t3d:function(){return ut.t3d},ySp:function(){return ut.ySp},cHb:function(){return ut.cHb},RXX:function(){return ut.RXX},TL8:function(){return ut.TL8},LDN:function(){return ut.LDN},g5A:function(){return ut.g5A},lNG:function(){return ut.lNG},LG0:function(){return ut.LG0},x7F:function(){return ut.x7F},BLA:function(){return ut.BLA},WT3:function(){return ut.WT3},xu7:function(){return ut.xu7},l0G:function(){return ut.l0G},SDM:function(){return ut.SDM},Zl4:function(){return ut.Zl4},e0f:function(){return ut.e0f},ylV:function(){return ut.ylV},urI:function(){return ut.urI},LWX:function(){return ut.LWX},ELo:function(){return Ie},mM$:function(){return ut.mM$},ODT:function(){return ut.ODT},pyJ:function(){return ut.pyJ},Ncv:function(){return ut.Ncv},kdj:function(){return ut.kdj},oJ2:function(){return ut.oJ2},CQC:function(){return ut.CQC},mH5:function(){return ut.mH5},Q6t:function(){return ut.Q6t},LRy:function(){return ut.LRy},sDr:function(){return ut.sDr},huO:function(){return ut.huO},fUj:function(){return ut.fUj},P_L:function(){return ut.P_L},R23:function(){return ut.R23},hgw:function(){return ut.hgw},FCQ:function(){return ut.FCQ},jOE:function(){return ut.jOE},XQy:function(){return ut.XQy},D7i:function(){return ut.D7i},BK4:function(){return ut.BK4},hVg:function(){return ut.hVg},TOR:function(){return ut.TOR},pJc:function(){return ut.pJc},uWl:function(){return ut.uWl},l6P:function(){return ut.l6P},u$b:function(){return ut.u$b},vI1:function(){return ut.vI1},YVe:function(){return ut.YVe},hql:function(){return ut.hql},J3C:function(){return ut.J3C},JiE:function(){return ut.JiE},rFG:function(){return ut.rFG},Fin:function(){return ut.Fin},A8B:function(){return ut.A8B},C8s:function(){return ut.C8s},BoJ:function(){return ut.BoJ},L6G:function(){return ut.L6G},DvZ:function(){return ut.DvZ},jgd:function(){return ut.jgd},Blb:function(){return ut.Blb},dFH:function(){return ut.dFH},M6A:function(){return ut.M6A},Ddj:function(){return ut.Ddj},GZp:function(){return ut.GZp},pnw:function(){return ut.pnw},UcO:function(){return ut.UcO},YAb:function(){return ut.YAb},iW0:function(){return ut.iW0},$jE:function(){return ut.$jE},PbM:function(){return ut.PbM},WuN:function(){return ut.WuN},oFs:function(){return ut.oFs},iuW:function(){return ut.iuW},qYS:function(){return ce.qY},ylz:function(){return ce.yl},X4r:function(){return ut.X4r},FAs:function(){return ut.FAs},TBb:function(){return ut.TBb},dLy:function(){return ut.dLy},wx0:function(){return ut.wx0},EwU:function(){return ut.EwU},dXR:function(){return ut.dXR},pPe:function(){return ut.pPe},xJ3:function(){return ut.xJ3},Dr:function(){return ut.Dr},tnl:function(){return Ct.tnl},WQq:function(){return Ct.WQq},Q7R:function(){return Ct.Q7R},bzn:function(){return Ct.bzn},FLi:function(){return Ct.FLi},$jT:function(){return Ct.$jT},sub:function(){return Ct.sub},Hs:function(){return pe.Hs},C0T:function(){return u},BFc:function(){return Ct.BFc},kSi:function(){return Ct.kSi},T5N:function(){return Ct.T5N},hOW:function(){return Ct.hOW},ZEY:function(){return it},TaL:function(){return o},ra8:function(){return Ct.ra8},wgE:function(){return Ct.wgE},zQh:function(){return Ct.zQh},o8B:function(){return Ct.o8B},xWs:function(){return Ct.xWs},I1m:function(){return Ct.I1m},RPU:function(){return Ct.RPU},O5O:function(){return Ct.O5O},P1l:function(){return Ct.P1l},kA9:function(){return Ct.kA9},Xtf:function(){return Ct.Xtf},wX9:function(){return Ct.wX9},IPL:function(){return Ct.IPL},jIJ:function(){return Ct.jIJ},aOp:function(){return Ct.aOp},Gl3:function(){return Ct.Gl3},eMq:function(){return r},ASo:function(){return pe.AS},y4m:function(){return Ct.y4m},EZY:function(){return Ct.EZY},Pqc:function(){return Ct.Pqc},Hi9:function(){return pe.Hi},_K2:function(){return m._K},LCg:function(){return Ct.LCg},Y12:function(){return Ct.Y12},oNF:function(){return Ct.oNF},UG6:function(){return Ct.UG6},y5U:function(){return Ct.y5U},GSj:function(){return Ct.GSj},RIf:function(){return Ct.RIf},cZk:function(){return Ct.cZk},kgh:function(){return Ct.kgh},rhj:function(){return Ct.rhj},DQN:function(){return Ct.DQN},Slp:function(){return Ct.Slp},io:function(){return a},aCs:function(){return pe.aC},kpo:function(){return c},H8d:function(){return Ct.H8d},mPL:function(){return Ct.mPL},Rm2:function(){return Ct.Rm2},Kko:function(){return Ct.Kko},HPB:function(){return Ct.HPB},VZ:function(){return Ct.VZ},n76:function(){return Ct.n76},NoW:function(){return Ct.NoW},T9B:function(){return Ct.T9B},jgi:function(){return Ct.jgi},NYV:function(){return Ct.NYV},PhQ:function(){return Ct.PhQ},i2o:function(){return Ct.i2o},m1Z:function(){return pe.m1},jkA:function(){return Ct.jkA},BpO:function(){return Ct.BpO},Clk:function(){return Ct.Clk},lKK:function(){return Ct.lKK},HZy:function(){return Ct.HZy},dA1:function(){return $t},Ec:function(){return Ct.Ec},Mw0:function(){return Ct.Mw0},SaS:function(){return Ct.SaS},P61:function(){return Ct.P61},eVF:function(){return Ct.eVF},n7C:function(){return Ct.n7C},NsG:function(){return Ct.NsG},FE$:function(){return Ct.FE$},YeY:function(){return Ct.YeY},y17:function(){return Ct.y17},gJX:function(){return pe.gJ},tAK:function(){return ct.tA},VVh:function(){return Ct.VVh},tQQ:function(){return Ct.tQQ},BEg:function(){return Ct.BEg},d_2:function(){return Ct.d_2},WfX:function(){return Ct.WfX},wdz:function(){return Ct.wdz},JFn:function(){return s},ry7:function(){return Ct.ry7},dik:function(){return Ct.dik},Q$M:function(){return Ct.Q$M},zAd:function(){return Ct.zAd},wck:function(){return Ct.wck},R0O:function(){return Ct.R0O},Kro:function(){return kt},Vs9:function(){return Ct.Vs9},lw0:function(){return Ct.lw0},lDo:function(){return Ct.lDo},RZD:function(){return Ct.RZD},r2V:function(){return Ct.r2V},t$z:function(){return Ct.t$z},jbE:function(){return Ct.jbE},czq:function(){return Ct.czq},chL:function(){return It.ch},ymU:function(){return Ct.ymU},OEK:function(){return Ct.OEK},tGX:function(){return Ct.tGX},KtR:function(){return Ct.KtR},d_S:function(){return Tt},DZQ:function(){return pe.DZ},Vsq:function(){return Ct.Vsq},BaG:function(){return Et},mgz:function(){return Ct.mgz},efE:function(){return Ct.efE},K$i:function(){return Ct.K$i},TuY:function(){return It.Tu},ZSL:function(){return St},bvq:function(){return Ct.bvq},bgA:function(){return Nt},_M9:function(){return Ct._M9},Ul9:function(){return Ct.Ul9},POl:function(){return Ct.POl}});var r={};n.r(r),n.d(r,{isBrowser:function(){return f},isMobile:function(){return h},mockIsMobile:function(){return d}});var s={};n.r(s),n.d(s,{Serializable:function(){return ke},SerializationMap:function(){return Te},getRegisteredName:function(){return Ne},registerClass:function(){return Se}});var a={};n.r(a),n.d(a,{CompositeArrayBuffer:function(){return T.D},browserFiles:function(){return Ue},browserHTTPRequest:function(){return Je},concatenateArrayBuffers:function(){return y.AQ},copyModel:function(){return X},decodeWeights:function(){return y.CY},decodeWeightsStream:function(){return y.s5},encodeWeights:function(){return y.aG},fromMemory:function(){return rt},fromMemorySync:function(){return st},getLoadHandlers:function(){return k},getModelArtifactsForJSON:function(){return y.Ej},getModelArtifactsForJSONSync:function(){return y.Rl},getModelArtifactsInfoForJSON:function(){return y.oR},getSaveHandlers:function(){return w},getWeightSpecs:function(){return y.Xf},http:function(){return Xe},isHTTPScheme:function(){return Qe},listModels:function(){return Q},loadWeights:function(){return He},moveModel:function(){return J},registerLoadRouter:function(){return v},registerSaveRouter:function(){return x},removeModel:function(){return q},weightsLoaderFactory:function(){return Ke},withSaveHandler:function(){return at},withSaveHandlerSync:function(){return ot}});var o={};n.r(o),n.d(o,{draw:function(){return vt},fromPixels:function(){return wt},fromPixelsAsync:function(){return yt},toPixels:function(){return xt}});var i={};n.r(i),n.d(i,{collectGatherOpShapeInfo:function(){return Pn},computeOutShape:function(){return zn},segOpComputeOptimalWindowSize:function(){return Mn}});var u={};n.r(u),n.d(u,{ERF_A1:function(){return Jt},ERF_A2:function(){return en},ERF_A3:function(){return tn},ERF_A4:function(){return nn},ERF_A5:function(){return rn},ERF_P:function(){return Xt},PARALLELIZE_THRESHOLD:function(){return Wt},RowPartitionType:function(){return _t},SELU_SCALE:function(){return qt.X},SELU_SCALEALPHA:function(){return qt.j},applyActivation:function(){return Lt.f2},assertAndGetBroadcastShape:function(){return it.assertAndGetBroadcastShape},assertAxesAreInnerMostDims:function(){return Ft.WC},assertParamsConsistent:function(){return Rt},assignToTypedArray:function(){return pn},axesAreInnerMostDims:function(){return Ft.WH},calculateShapes:function(){return Qt.l8},checkEinsumDimSizes:function(){return vn},checkPadOnDimRoundingMode:function(){return Ot.s_},combineLocations:function(){return Ft.aF},combineRaggedTensorToTensorShapes:function(){return Mt},complexWithEvenIndex:function(){return un},complexWithOddIndex:function(){return cn},computeConv2DInfo:function(){return Ot.uf},computeConv3DInfo:function(){return Ot.p$},computeDefaultPad:function(){return Ot.G8},computeDilation2DInfo:function(){return Ot.YQ},computeOptimalWindowSize:function(){return Vt},computeOutAndReduceShapes:function(){return Ft.lb},computeOutShape:function(){return Dt},computePool2DInfo:function(){return Ot.E6},computePool3DInfo:function(){return Ot.l5},convertConv2DDataFormat:function(){return Ot.$Q},decodeEinsumEquation:function(){return bn},eitherStridesOrDilationsAreOne:function(){return Ot.G0},expandShapeToKeepDim:function(){return Ft.SM},exponent:function(){return hn},exponents:function(){return dn},fromStringArrayToUint8:function(){return Wn},fromUint8ToStringArray:function(){return Bn},getAxesPermutation:function(){return Ft.Em},getBroadcastDims:function(){return it.getBroadcastDims},getComplexWithIndex:function(){return ln},getEinsumComputePath:function(){return wn},getEinsumPermutation:function(){return xn},getFusedBiasGradient:function(){return Lt.Do},getFusedDyActivation:function(){return Lt.XB},getImageCenter:function(){return Ut},getInnerMostAxes:function(){return Ft.fK},getPermuted:function(){return Zt},getRaggedRank:function(){return Pt},getReductionAxes:function(){return it.getReductionAxes},getReshaped:function(){return Gt},getReshapedPermuted:function(){return jt},getRowPartitionTypesHelper:function(){return zt},getSliceBeginCoords:function(){return Ht},getSliceSize:function(){return Kt},getSparseFillEmptyRowsIndicesDenseShapeMismatch:function(){return Nn},getSparseFillEmptyRowsNegativeIndexErrorMessage:function(){return In},getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:function(){return Cn},getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:function(){return $n},getSparseReshapeInputOutputMismatchErrorMessage:function(){return Rn},getSparseReshapeInputOutputMultipleErrorMessage:function(){return Fn},getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:function(){return En},getSparseReshapeNegativeOutputDimErrorMessage:function(){return An},getSparseSegmentReductionIndicesOutOfRangeErrorMessage:function(){return Ln},getSparseSegmentReductionNegativeSegmentIdsErrorMessage:function(){return Dn},getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:function(){return _n},getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:function(){return On},getUndoAxesPermutation:function(){return Ft.gx},isIdentityPermutation:function(){return kn},log:function(){return sn.R},mergeRealAndImagArrays:function(){return an},prepareAndValidate:function(){return Yt},prepareSplitSize:function(){return Sn},segment_util:function(){return i},shouldFuse:function(){return Lt.zE},slice_util:function(){return kt},splitRealAndImagArrays:function(){return on},stridesOrDilationsArePositive:function(){return Ot.qk},tupleValuesAreOne:function(){return Ot.Dh},upcastType:function(){return It.Tu},validateDefaultValueShape:function(){return Bt},validateInput:function(){return Qt.TT},validateUpdateShape:function(){return Qt.Ly},warn:function(){return sn.i}});var c={};n.r(c),n.d(c,{c7:function(){return Vn.c7},ZS:function(){return Vn.ZS},ut:function(){return Vn.ut},YO:function(){return Un.Y}});var l=n(1585);let p;function d(e){p=e}function h(e){if(void 0!==p)return p;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function f(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var m=n(6574);const g=(0,m._K)();g.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),g.registerFlag("IS_BROWSER",(()=>f())),g.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),g.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),g.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),g.registerFlag("PROD",(()=>!1)),g.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>g.getBool("DEBUG"))),g.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),g.registerFlag("IS_TEST",(()=>!1)),g.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>g.getBool("DEBUG"))),g.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),g.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),g.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var y=n(7084);class b{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==b.instance&&(b.instance=new b),b.instance}static registerSaveRouter(e){b.getInstance().saveRouters.push(e)}static registerLoadRouter(e){b.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return b.getHandlers(e,"save")}static getLoadHandlers(e,t){return b.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?b.getInstance().loadRouters:b.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const x=e=>b.registerSaveRouter(e),v=e=>b.registerLoadRouter(e),w=e=>b.getSaveHandlers(e),k=(e,t)=>b.getLoadHandlers(e,t);var T=n(6734);const S="tensorflowjs",N="models_store",I="model_info_store";function C(){if(!(0,m._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function E(e){const t=e.result;t.createObjectStore(N,{keyPath:"modelPath"}),t.createObjectStore(I,{keyPath:"modelPath"})}class A{constructor(e){if(this.indexedDB=C(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(S,1);r.onupgradeneeded=()=>E(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(N,"readonly"),r=t.objectStore(N).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=T.D.join(t.weightData);const r=(0,y.oR)(t),o=s.transaction(I,"readwrite");let i,u,c=o.objectStore(I);try{i=c.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(a){return n(a)}i.onsuccess=()=>{u=s.transaction(N,"readwrite");const i=u.objectStore(N);let l;try{l=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(a){return n(a)}l.onsuccess=()=>e({modelArtifactsInfo:r}),l.onerror=e=>{c=o.objectStore(I);const t=c.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(l.error)),t.onerror=e=>(s.close(),n(l.error))}},i.onerror=e=>(s.close(),n(i.error)),o.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}A.URL_SCHEME="indexeddb://";const $=e=>{return(0,m._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(A.URL_SCHEME)?(t=e.slice(A.URL_SCHEME.length),new A(t)):null;var t};b.registerSaveRouter($),b.registerLoadRouter($);class F{constructor(){this.indexedDB=C()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(S,1);n.onupgradeneeded=()=>E(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(I,"readonly"),a=s.objectStore(I).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(A.URL_SCHEME)?t.slice(A.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(S,1);r.onupgradeneeded=()=>E(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(I,"readwrite"),o=a.objectStore(I),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),a=()=>{u=s.transaction(N,"readwrite");const r=u.objectStore(N).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}var R=n(5119);const D="/",_="tensorflowjs_models",O="info",L="model_topology",M="weight_specs",z="weight_data",P="model_metadata";function B(e){return{info:[_,e,O].join(D),topology:[_,e,L].join(D),weightSpecs:[_,e,M].join(D),weightData:[_,e,z].join(D),modelMetadata:[_,e,P].join(D)}}function W(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function V(e){const t=e.split(D);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(D)}class U{constructor(e){if(!(0,m._K)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=B(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=(0,y.oR)(e),a=T.D.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,(0,y.l3)(a));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:s}}catch(t){throw W(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=(0,y.jf)(a),t}}U.URL_SCHEME="localstorage://";const G=e=>{return(0,m._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(U.URL_SCHEME)?(t=e.slice(U.URL_SCHEME.length),new U(t)):null;var t};b.registerSaveRouter(G),b.registerLoadRouter(G);class Z{constructor(){(0,R.vA)((0,m._K)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,R.vA)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=_+D,n=D+O;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[V(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=B(e=(t=e).startsWith(U.URL_SCHEME)?t.slice(U.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return W(n),r}}const j="://";class H{constructor(){this.managers={}}static getInstance(){return null==H.instance&&(H.instance=new H),H.instance}static registerManager(e,t){(0,R.vA)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(j)&&(e=e.slice(0,e.indexOf(j))),(0,R.vA)(e.length>0,(()=>"scheme must not be an empty string."));const n=H.getInstance();(0,R.vA)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=H.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(H.getInstance().managers)}}function K(e){if(-1===e.indexOf(j))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${H.getSchemes().join(",")}`);return{scheme:e.split(j)[0],path:e.split(j)[1]}}async function Y(e,t,n=!1){(0,R.vA)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=b.getLoadHandlers(e);(0,R.vA)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,R.vA)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=b.getSaveHandlers(t);(0,R.vA)(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,R.vA)(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=a[0],i=K(e).scheme,u=K(e).path,c=i===K(e).scheme,l=await s.load();n&&c&&await H.getManager(i).removeModel(u);const p=await o.save(l);return n&&!c&&await H.getManager(i).removeModel(u),p.modelArtifactsInfo}async function Q(){const e=H.getSchemes(),t={};for(const n of e){const e=await H.getManager(n).listModels();for(const r in e){t[n+j+r]=e[r]}}return t}async function q(e){const t=K(e);return H.getManager(t.scheme).removeModel(t.path)}async function X(e,t){return Y(e,t,!1)}async function J(e,t){return Y(e,t,!0)}var ee=n(6448);class te{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&(0,m._K)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,ee.Y)(e)}}if((0,m._K)().get("IS_BROWSER")){(0,m._K)().setPlatform("browser",new te);try{H.registerManager(U.URL_SCHEME,new Z)}catch(Zn){}try{H.registerManager(A.URL_SCHEME,new F)}catch(Zn){}}const ne=()=>n(5817);let re;class se{constructor(){this.util=n(8590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,m._K)().global.fetch?(0,m._K)().global.fetch(e,t):(null==re&&(re=ne()),re(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,m._K)().get("IS_NODE")&&!(0,m._K)().get("IS_BROWSER")&&(0,m._K)().setPlatform("node",new se);var ae=n(448),oe=n(9809),ie=n(125),ue=n(5295),ce=n(259);(0,l.Ye)();const le={buffer:ae.r,cast:oe.w,clone:ie.o,print:ue.y};(0,ce.Q5)(le);var pe=n(7668),de=n(7523),he=n(9359),fe=n(9258),me=n(9348),ge=n(5793),ye=n(5537),be=n(1830),xe=n(5702);const ve=new Map,we=new Map;class ke{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Te{constructor(){this.classNameMap={}}static getMap(){return null==Te.instance&&(Te.instance=new Te),Te.instance}static register(e){Te.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Se(e,t,n){(0,R.vA)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,R.vA)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,R.vA)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return Te.register(e),ve.set(r,e),we.set(e,r),e}function Ne(e){return we.has(e)?we.get(e):e.className}class Ie extends ke{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return(0,pe.AS)(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,be.y7)(e,t)}dispose(){null!=this.iterations_&&(0,pe.AS)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,xe.d)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ie,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ce extends Ie{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=l.T2.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=l.T2.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,pe.DZ)((()=>(0,ye.P)(r).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,pe.DZ)((()=>(0,ye.P)(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,pe.DZ)((()=>{const e=(0,de.W)((0,fe.l)(o,this.rho),(0,fe.l)((0,ge.E)(a),1-this.rho)),t=(0,fe.l)((0,he.y)((0,me.R)((0,de.W)(i,this.epsilon)),(0,me.R)((0,de.W)(o,this.epsilon))),a),n=(0,de.W)((0,fe.l)(i,this.rho),(0,fe.l)((0,ge.E)(t),1-this.rho));o.assign(e),i.assign(n);const s=(0,de.W)((0,fe.l)(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,pe.AS)(this.accumulatedGrads.map((e=>e.variable))),(0,pe.AS)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var Ee=n(6111);class Ae extends Ie{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=l.T2.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,pe.DZ)((()=>(0,Ee.G)(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;(0,pe.DZ)((()=>{const e=(0,de.W)(a,(0,ge.E)(s));a.assign(e);const t=(0,de.W)((0,fe.l)((0,he.y)(s,(0,me.R)((0,de.W)(e,l.T2.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,pe.AS)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var $e=n(6609),Fe=n(7126);class Re extends Ie{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,pe.DZ)((()=>{this.accBeta1=(0,xe.d)(t).variable(),this.accBeta2=(0,xe.d)(n).variable()})),null==r&&(this.epsilon=l.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,pe.DZ)((()=>{const n=(0,Fe.j)(1,this.accBeta1),r=(0,Fe.j)(1,this.accBeta2);t.forEach(((t,s)=>{const a=l.T2.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,pe.DZ)((()=>(0,ye.P)(a).variable(o)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:(0,pe.DZ)((()=>(0,ye.P)(a).variable(o)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const u=this.accumulatedFirstMoment[s].variable,c=this.accumulatedSecondMoment[s].variable,p=(0,de.W)((0,fe.l)(u,this.beta1),(0,fe.l)(i,1-this.beta1)),d=(0,de.W)((0,fe.l)(c,this.beta2),(0,fe.l)((0,ge.E)(i),1-this.beta2)),h=(0,he.y)(p,n),f=(0,he.y)(d,r);u.assign(p),c.assign(d);const m=(0,de.W)((0,fe.l)((0,he.y)(h,(0,de.W)((0,me.R)(f),this.epsilon)),-this.learningRate),a);a.assign(m)})),this.accBeta1.assign((0,fe.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,fe.l)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,pe.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,pe.AS)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,pe.DZ)((()=>{this.accBeta1.assign((0,$e.n)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,$e.n)(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var De=n(4888),_e=n(178);class Oe extends Ie{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,pe.DZ)((()=>{this.iteration=(0,xe.d)(0).variable(),this.accBeta1=(0,xe.d)(t).variable()})),null==r&&(this.epsilon=l.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,pe.DZ)((()=>{const n=(0,Fe.j)(1,this.accBeta1),r=(0,he.y)(-this.learningRate,(0,de.W)((0,fe.l)(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=l.T2.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,ye.P)(a).variable(o)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:(0,ye.P)(a).variable(o)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const u=this.accumulatedFirstMoment[s].variable,c=this.accumulatedWeightedInfNorm[s].variable,p=(0,de.W)((0,fe.l)(u,this.beta1),(0,fe.l)(i,1-this.beta1)),d=(0,fe.l)(c,this.beta2),h=(0,De.t)(i),f=(0,_e.P)(d,h);u.assign(p),c.assign(f);const m=(0,de.W)((0,fe.l)((0,he.y)(r,n),(0,he.y)(p,(0,de.W)(f,this.epsilon))),a);a.assign(m)})),this.iteration.assign((0,de.W)(this.iteration,1)),this.accBeta1.assign((0,fe.l)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,pe.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,pe.AS)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Le extends Ie{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=l.T2.registeredVariables[t];(0,pe.DZ)((()=>{const e=(0,de.W)((0,fe.l)(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,pe.aC)((0,xe.d)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Me extends Le{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,xe.d)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=l.T2.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,pe.DZ)((()=>(0,ye.P)(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&(0,pe.DZ)((()=>{let e;const t=(0,de.W)((0,fe.l)(this.m,s),a);e=this.useNesterov?(0,de.W)((0,fe.l)(this.c,(0,de.W)(a,(0,fe.l)(t,this.m))),r):(0,de.W)((0,fe.l)(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,pe.AS)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class ze extends Ie{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=l.T2.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=l.T2.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,pe.DZ)((()=>(0,ye.P)(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,pe.DZ)((()=>(0,ye.P)(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,pe.DZ)((()=>(0,ye.P)(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,pe.DZ)((()=>{const e=(0,de.W)((0,fe.l)(o,this.decay),(0,fe.l)((0,ge.E)(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=(0,de.W)((0,fe.l)(t,this.decay),(0,fe.l)(a,1-this.decay)),u=(0,he.y)((0,fe.l)(a,this.learningRate),(0,me.R)((0,Fe.j)(e,(0,de.W)((0,ge.E)(s),this.epsilon)))),c=(0,de.W)((0,fe.l)(i,this.momentum),u);o.assign(e),t.assign(s),i.assign(c);const l=(0,Fe.j)(r,c);r.assign(l)}else{const e=(0,de.W)((0,fe.l)(o,this.decay),(0,fe.l)((0,ge.E)(a),1-this.decay)),t=(0,de.W)((0,fe.l)(i,this.momentum),(0,he.y)((0,fe.l)(a,this.learningRate),(0,me.R)((0,de.W)(e,this.epsilon))));o.assign(e),i.assign(t);const n=(0,Fe.j)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,pe.AS)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,pe.AS)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,pe.AS)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Pe=[Ce,Ae,Re,Oe,Me,ze,Le];function Be(e){return new Promise((e=>setTimeout(e))).then(e)}class We{constructor(e){if(!(0,m._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(We.URL_SCHEME)&&(e=e.slice(We.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=T.D.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=(0,y.zV)(e,t),s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await Be((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Be((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,y.oR)(e)}}}}We.URL_SCHEME="downloads://";class Ve{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=(0,y.Ej)(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,y.P8)(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=(0,y.P8)(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Ue(e){return new Ve(e)}function Ge(e,t,n,r){!function(e){(0,R.vA)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,R.vA)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,R.vA)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,R.vA)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const o=n+ ++s/e.length*(r-n);return t(o),a})),a))))}b.registerSaveRouter((e=>(0,m._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(We.URL_SCHEME)?function(e="model"){return new We(e)}(e.slice(We.URL_SCHEME.length)):null));var Ze=n(5685);async function je(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,m._K)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Ge(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Ge(s,t.onProgress,.5,1)}async function He(e,t="",n,r){return Ke((e=>je(e,{requestInit:r})))(e,t,n)}function Ke(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=Ze.i[u]*R.Ze(e.shape),l=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=r?r.forEach(((t,n)=>{t===e.name&&(l(),o[n]=!0)})):l(),i.push(e.name),n+=c}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),c=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)}))}));const l=await e(c),p={};let d=0;return u.forEach((e=>{const n=t[e].paths.length,r=new T.D(l.slice(d,d+n));a[e].forEach((e=>{const t=r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,y.CY)(t,[e.manifestEntry]);for(const r in n)p[r]=n[r]})),d+=n})),p}}class Ye{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,R.vA)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,m._K)().platform.fetch,(0,R.vA)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,R.vA)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=(0,y.zV)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=T.D.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:(0,y.oR)(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(s){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return(0,y.Ej)(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=(0,y.Xf)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?(0,m._K)().platform.fetch:t.fetchFunc;let s,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;a<e.length;){if(!s){const n=(await r(e[a],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:i,value:u}=await s.read();if(!i)return void n.enqueue(u);a++,s=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[(0,y.Xf)(e),await je(t,this.loadOptions)]}}function Qe(e){return null!=e.match(Ye.URL_SCHEME_REGEX)}Ye.URL_SCHEME_REGEX=/^https?:\/\//;const qe=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Qe(e))):Qe(e),n)return Xe(e,t)}return null};function Xe(e,t){return new Ye(e,t)}function Je(e,t){return Xe(e,t)}b.registerSaveRouter(qe),b.registerLoadRouter(qe);class et{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class tt{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class nt{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function rt(e,t,n,r){return new nt(st(...arguments))}function st(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new et(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new et({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new et({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function at(e){return new tt(e)}function ot(e){return new tt(e)}var it=n(2198),ut=n(7822),ct=n(7074),lt=n(8189),pt=n(929),dt=n(2768);let ht,ft=!1;function mt(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(null!=(0,ct._5)(ut.awo,l.T2.backendName)){const n={pixels:e},r={numChannels:t};return l.T2.runKernel(ut.awo,n,r)}const[u,c]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let p,d;if(o)p=e.getContext("2d").getImageData(0,0,u,c).data;else if(r||n)p=e.data;else if(a||s||i){if(null==ht)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");ht=new OffscreenCanvas(1,1).getContext("2d")}else ht=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ht.canvas.width=u,ht.canvas.height=c,ht.drawImage(e,0,0,u,c),p=ht.getImageData(0,0,u,c).data}if(4===t)d=new Int32Array(p);else{const e=u*c;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=p[4*n+e]}const h=[c,u,t];return(0,dt.$)(d,h,"int32")}function gt(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function yt(e,t=3){let n=null;if((0,m._K)().getBool("WRAP_TO_IMAGEBITMAP")&&gt(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return mt(n,t)}function bt(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function xt(e,t){let n=(0,lt.YT)(e,"img","toPixels");if(!(e instanceof ce.qY)){const e=n;n=(0,oe.w)(e,"int32"),e.dispose()}bt(n);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let c=0;c<r*s;++c){const e=[0,0,0,255];for(let r=0;r<a;r++){const t=o[c*a+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===a?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[r]=t*i}const t=4*c;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){if(!ft){null!=(0,ct._5)(ut.XmO,l.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),ft=!0)}t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}function vt(e,t,n){let r=(0,lt.YT)(e,"img","draw");if(!(e instanceof ce.qY)){const e=r;r=(0,oe.w)(e,"int32"),e.dispose()}bt(r),function(e){const t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);const s={image:r},a={canvas:t,options:n};l.T2.runKernel(ut.XmO,s,a)}const wt=(0,pt.op)({fromPixels_:mt});var kt=n(4969),Tt=n(565),St=n(3879);const Nt="4.20.0";var It=n(2046),Ct=n(4066);const Et=class{static sgd(e){return new Le(e)}static momentum(e,t,n=!1){return new Me(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new ze(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Re(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Ce(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Oe(e,t,n,r,s)}static adagrad(e,t=.1){return new Ae(e,t)}},At="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function $t(){return new Promise((e=>At((()=>e()))))}var Ft=n(1078);function Rt(e,t){const n=e[0].length;e.forEach(((e,t)=>{R.vA(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),R.vA(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)R.vA(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Dt(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var _t,Ot=n(7195),Lt=n(8646);function Mt(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],o=r[r.length-n.length+s],i=r[o];if(a>=0)if(i>=0){if(i!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${i}`)}else r[o]=a}return r}function zt(e){const t={FIRST_DIM_SIZE:_t.FIRST_DIM_SIZE,VALUE_ROWIDS:_t.VALUE_ROWIDS,ROW_LENGTHS:_t.ROW_LENGTHS,ROW_SPLITS:_t.ROW_SPLITS,ROW_LIMITS:_t.ROW_LIMITS,ROW_STARTS:_t.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Pt(e){return 0===e.length?0:e[0]===_t.FIRST_DIM_SIZE?e.length-1:e.length}function Bt(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(_t||(_t={}));const Wt=30;function Vt(e){return e<=Wt?e:(0,R.lK)(e,Math.floor(Math.sqrt(e)))}function Ut(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Gt(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Zt(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function jt(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?r?s.push(t[a-1]*e[a]):s.push(e[a]/t[a-1]):s.push(e[a]);return s}function Ht(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Kt(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function Yt(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,R.Ze)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let o=1;for(let p=0;p<s.length-1;++p)o*=s[p];const i=e.shape,u=s.slice();u.pop();let c=1;for(let p=a;p<n;++p)c*=i[p],u.push(i[p]);const l=[...(0,R.Ur)(e.shape).map((e=>e/c)),1].slice(0,a);return[u,o,c,l]}var Qt=n(6170),qt=n(8576);const Xt=.3275911,Jt=.254829592,en=-.284496736,tn=1.421413741,nn=-1.453152027,rn=1.061405429;var sn=n(3673);function an(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function on(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function un(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function cn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function ln(e,t){return{real:e[2*t],imag:e[2*t+1]}}function pn(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function dn(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function hn(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const fn="->",mn=/->/g,gn=",",yn="...";function bn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(mn,"").length)/fn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${fn}").`);const[r,s]=e.split(fn);(0,R.vA)(-1===r.indexOf(yn),(()=>`The ellipsis notation ("${yn}") is not supported yet.`));const a=r.split(gn),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let p=0;p<s.length;++p){const e=s[p];if(!a.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===i.indexOf(e)&&i.push(e)}for(let p=0;p<r.length;++p){const e=r[p];-1===i.indexOf(e)&&e!==gn&&i.push(e)}const u=new Array(a.length);for(let p=0;p<o;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);u[p]=[];for(let e=0;e<a[p].length;++e)u[p].push(i.indexOf(a[p][e]))}const c=i.length,l=[];for(let p=s.length;p<c;++p)l.push(p);return{allDims:i,summedDims:l,idDims:u}}function xn(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;const r=[];for(let s=0;s<e;++s)-1===n[s]&&r.push(s);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function vn(e,t,n){const r=new Array(e);for(let s=0;s<n.length;++s){const e=n[s].shape;for(let n=0;n<t[s].length;++n)void 0===r[t[s][n]]?r[t[s][n]]=e[n]:(0,R.vA)(r[t[s][n]]===e[n],(()=>`Expected dimension ${r[t[s][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function wn(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let o=0;o<s;++o)r.push([]);const a=[];for(let o=0;o<n.length;++o){const e=Tn(t,n[o]);for(const t of e)-1===a.indexOf(t)&&(r[o].push(t),a.push(t))}return{path:n,steps:r}}function kn(e){return e.every(((e,t)=>e===t))}function Tn(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Sn(e,t,n=0){let r=[];if("number"==typeof t)(0,R.vA)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,R.vA)(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}(0,R.vA)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Nn(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function In(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Cn(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function En(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function An(e,t){return`size ${e} must be non-negative, not ${t}`}function $n(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Fn(e,t){return`Input to reshape is a SparseTensor with ${(0,R.Ze)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,R.Ze)(t)}. inputShape=${e} outputShape= ${t}`}function Rn(e,t){return`Input to reshape is a tensor with ${(0,R.Ze)(e)} dense values, but the requested shape has ${(0,R.Ze)(t)}. inputShape=${e} outputShape=${t}`}function Dn(){return"segment ids must be >= 0"}function _n(){return"segment ids are not increasing"}function On(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Ln(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Mn(e,t){let n,r=!1;for(e<=Wt?(n=e,r=!0):n=(0,R.lK)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,R.lK)(e,n+1);return n}function zn(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Pn(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let p=0;p<r;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);const o=e.shape[n],i=[];let u=1,c=1,l=1;for(let p=0;p<r;++p)i.push(e.shape[p]),u*=e.shape[p];for(let p=r;p<n;p++)i.push(e.shape[p]),c*=e.shape[p];for(let p=r;p<s;p++)i.push(t.shape[p]);for(let p=n+1;p<a;p++)i.push(e.shape[p]),l*=e.shape[p];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:o,outputShape:i}}function Bn(e){try{return e.map((e=>(0,St.decodeString)(e)))}catch(Zn){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${Zn}`)}}function Wn(e){return e.map((e=>(0,St.encodeString)(e)))}var Vn=n(8360),Un=n(4411),Gn=n(5149);!function(){for(const e of Pe)Se(e)}()},6734:function(e,t,n){"use strict";n.d(t,{D:function(){return s}});var r=n(3879);class s{static join(e){return new s(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>r.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],r=e+a-n.start,i=a,u=Math.min(t,n.end)-n.start,c=new Uint8Array(n.buffer,r,u-r);if(s.set(c,i),a+=c.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},7084:function(e,t,n){"use strict";n.d(t,{AQ:function(){return T},CY:function(){return d},Ej:function(){return C},P8:function(){return S},Rl:function(){return I},Xf:function(){return A},aG:function(){return p},jf:function(){return k},l3:function(){return w},oR:function(){return E},s5:function(){return y},zV:function(){return N}});var r=n(7148),s=n(4027),a=n(5119),o=n(5685),i=n(6734),u=n(7668),c=n(6574);const l=4;async function p(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const o=s[a],i=Array.isArray(e)?e[a].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+l*t.length,r=new Uint8Array(n);let s=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=l,r.set(e,s),s+=e.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:b(await Promise.all(r)),specs:n}}function d(e,t){const n=new i.D(e),r={};let s=0;for(const a of t){const e=h(a,((e,t)=>n.slice(s+e,s+t)));r[a.name]=m(a,n.slice(s,s+e)),s+=e}return r}function h(e,t){const n=(0,a.Ze)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=o.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=l+new Uint32Array(t(e,e+l))[0];return e}r=o.i[e.dtype]}return n*r}async function f(e,t){const n=(0,a.Ze)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=o.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=l+new Uint32Array(await t(e,e+l))[0];return e}r=o.i[e.dtype]}return n*r}function m(e,t){const n=e.name,i=e.dtype,u=e.shape,c=(0,a.Ze)(u);let p,d=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${i}.`)}const s=o.i[r.dtype],a="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===i)if("uint8"===r.dtype||"uint16"===r.dtype){p=new Float32Array(a.length);for(let e=0;e<a.length;e++){const t=a[e];p[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let o=0;o<r.length;o++){const s=r[o],i=e[n[s>>10]+(1023&s)]+t[s>>10];a[o]=i}return new Float32Array(s)}}();p=e(a)}}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${n}': ${i}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);p=new Int32Array(a.length);for(let e=0;e<a.length;e++){const t=a[e];p[e]=Math.round(t*r.scale+r.min)}}d+=c*s}else if("string"===i){const n=(0,a.Ze)(e.shape);p=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(d,d+l))[0];d+=l;const n=new Uint8Array(t.slice(d,d+e));p.push(n),d+=e}}else{const e=o.i[i];if("float32"===i)p=new Float32Array(t);else if("int32"===i)p=new Int32Array(t);else{if("bool"!==i){if("complex64"===i){p=new Float32Array(t);const e=new Float32Array(p.length/2),n=new Float32Array(p.length/2);for(let t=0;t<e.length;t++)e[t]=p[2*t],n[t]=p[2*t+1];const a=(0,s.O)(e,u,"float32"),o=(0,s.O)(n,u,"float32"),i=(0,r.f)(a,o);return a.dispose(),o.dispose(),i}throw new Error(`Unsupported dtype in weight '${n}': ${i}`)}p=new Uint8Array(t)}d+=c*e}return(0,s.O)(p,u,i)}async function g(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:s}=await e.read();if(t&&null==s){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const a=new Uint8Array(r.length+s.byteLength);a.set(r,0),a.set(new Uint8Array(s),r.length),r=a}return r.buffer}async function y(e,t){const n={},r=e.getReader();let s=new ArrayBuffer(0);for(const o of t){const e=await f(o,(async(e,t)=>(s=await g(r,s,t),s.slice(e,t))));s=await g(r,s,e);const t=s.slice(0,e);s=s.slice(e);const i=m(o,t);if(n[o.name]=i,"webgpu"===(0,u.jz)()){const e=(0,u.Hs)();"uploadToGPU"in e&&(0,a.Ze)(i.shape)>=(0,c._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function b(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const x="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function v(e){return x?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function w(e){if(x)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function k(e){if(x){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function T(e){return i.D.join(e)}function S(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function N(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function I(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function C(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),I(e,n,r)}function E(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:v(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:v(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new i.D(e.weightData).byteLength}}function A(e){const t=[];for(const n of e)t.push(...n.weights);return t}},5685:function(e,t,n){"use strict";n.d(t,{i:function(){return r}});const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},7822:function(e,t,n){"use strict";n.d(t,{$dB:function(){return R},$jE:function(){return Xt},$zE:function(){return F},A1h:function(){return L},A8B:function(){return zt},BK4:function(){return hn},BLA:function(){return Ke},BRl:function(){return ae},Blb:function(){return Pt},BoJ:function(){return Vt},BxF:function(){return pe},C8s:function(){return Wt},CQC:function(){return lt},Cg$:function(){return $e},CwD:function(){return Ce},D7i:function(){return kt},Ddj:function(){return jt},Dr:function(){return fn},DvZ:function(){return Gt},E3$:function(){return Te},EkD:function(){return i},ElG:function(){return he},EwU:function(){return on},FAs:function(){return nn},FCQ:function(){return vt},FSt:function(){return c},Fin:function(){return Ot},GZp:function(){return Kt},HNs:function(){return S},Ik2:function(){return k},J3C:function(){return Rt},JiE:function(){return $t},Jp_:function(){return l},KXH:function(){return C},L6G:function(){return Ut},LB5:function(){return N},LDN:function(){return ze},LG0:function(){return je},LRy:function(){return ht},LWX:function(){return nt},LXA:function(){return De},M6A:function(){return Ht},MRQ:function(){return U},Mn0:function(){return P},MnK:function(){return B},N4F:function(){return T},Ncv:function(){return it},O4G:function(){return ge},OAQ:function(){return ve},ODT:function(){return at},OMN:function(){return o},ORI:function(){return Y},PH8:function(){return a},P_L:function(){return wt},Pah:function(){return ne},PbM:function(){return Jt},Q6t:function(){return dt},QDP:function(){return E},QKF:function(){return d},Qgm:function(){return te},R23:function(){return gt},RUm:function(){return Fe},RXX:function(){return Be},SDM:function(){return Je},SQl:function(){return le},T7M:function(){return gn},TBb:function(){return rn},TL8:function(){return Ue},TMz:function(){return Z},TOR:function(){return St},ToN:function(){return Le},TyE:function(){return f},UcO:function(){return Yt},VAI:function(){return Me},VCH:function(){return b},Vvy:function(){return s},WT3:function(){return Ye},WuN:function(){return Mt},X$8:function(){return H},X0$:function(){return Ne},X4r:function(){return It},XQy:function(){return bt},XhZ:function(){return ye},XmO:function(){return J},YAb:function(){return Qt},YVe:function(){return Dt},ZgB:function(){return de},Zl4:function(){return et},_s9:function(){return se},aAr:function(){return mn},awo:function(){return dn},bP9:function(){return q},cHb:function(){return Ve},cS:function(){return x},dFH:function(){return Lt},dLy:function(){return sn},dXR:function(){return un},dv8:function(){return we},e0f:function(){return tt},epO:function(){return h},fUj:function(){return mt},g5A:function(){return Ge},gC7:function(){return z},gIW:function(){return ke},hVg:function(){return Tt},hgw:function(){return xt},ho8:function(){return y},hql:function(){return Ft},huO:function(){return ft},i5R:function(){return fe},iGz:function(){return M},iPs:function(){return Se},iW0:function(){return qt},iuW:function(){return tn},jAQ:function(){return w},jM4:function(){return Oe},jOE:function(){return yt},jfg:function(){return O},jgd:function(){return Zt},jj_:function(){return W},jxD:function(){return Q},kdj:function(){return ut},l0G:function(){return qe},l6P:function(){return Et},lLS:function(){return be},lNG:function(){return Ze},ljI:function(){return r},lxb:function(){return g},lzr:function(){return xe},mH5:function(){return pt},mIA:function(){return Ie},mM$:function(){return st},mnI:function(){return Ee},mxL:function(){return me},nVu:function(){return K},nY8:function(){return V},nZd:function(){return Re},oFs:function(){return en},oJ2:function(){return ct},ox3:function(){return oe},p2J:function(){return D},pJc:function(){return Nt},pPe:function(){return cn},p_m:function(){return p},pk0:function(){return X},pnw:function(){return pn},pr3:function(){return $},pyJ:function(){return ot},rFG:function(){return Bt},rFm:function(){return _},rGP:function(){return ce},rsH:function(){return re},sDr:function(){return ee},t3d:function(){return Pe},tG8:function(){return Ae},tGH:function(){return j},u$b:function(){return At},u8Z:function(){return u},uWl:function(){return Ct},urI:function(){return rt},vI1:function(){return _t},vaV:function(){return A},vj7:function(){return I},wNW:function(){return G},wwC:function(){return v},wx0:function(){return an},x7F:function(){return He},xJ3:function(){return ln},xu7:function(){return Qe},ySp:function(){return We},ybN:function(){return ie},ybj:function(){return ue},ylV:function(){return Xe},zP9:function(){return m},zfU:function(){return _e}});const r="Abs",s="Acos",a="Acosh",o="Add",i="AddN",u="All",c="Any",l="ArgMax",p="ArgMin",d="Asin",h="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",T="Bincount",S="BitwiseAnd",N="BroadcastTo",I="BroadcastArgs",C="Cast",E="Ceil",A="ClipByValue",$="Complex",F="ComplexAbs",R="Concat",D="Conv2D",_="Conv2DBackpropFilter",O="Conv2DBackpropInput",L="Conv3D",M="Conv3DBackpropFilterV2",z="Conv3DBackpropInputV2",P="Cos",B="Cosh",W="Cumprod",V="Cumsum",U="CropAndResize",G="DenseBincount",Z="DepthToSpace",j="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",Y="Diag",Q="Dilation2D",q="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",J="Draw",ee="RealDiv",te="Einsum",ne="Elu",re="EluGrad",se="Erf",ae="Equal",oe="Exp",ie="ExpandDims",ue="Expm1",ce="FFT",le="Fill",pe="FlipLeftRight",de="Floor",he="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",ye="Greater",be="GreaterEqual",xe="Identity",ve="IFFT",we="Imag",ke="IsFinite",Te="IsInf",Se="IsNan",Ne="LeakyRelu",Ie="Less",Ce="LessEqual",Ee="LinSpace",Ae="Log",$e="Log1p",Fe="LogicalAnd",Re="LogicalNot",De="LogicalOr",_e="LogSoftmax",Oe="LRN",Le="LRNGrad",Me="Max",ze="Maximum",Pe="MaxPool",Be="MaxPoolGrad",We="MaxPool3D",Ve="MaxPool3DGrad",Ue="MaxPoolWithArgmax",Ge="Mean",Ze="Min",je="Minimum",He="MirrorPad",Ke="Mod",Ye="Multinomial",Qe="Multiply",qe="Neg",Xe="NotEqual",Je="NonMaxSuppressionV3",et="NonMaxSuppressionV4",tt="NonMaxSuppressionV5",nt="OnesLike",rt="OneHot",st="Pack",at="PadV2",ot="Pow",it="Prelu",ut="Prod",ct="RaggedGather",lt="RaggedRange",pt="RaggedTensorToTensor",dt="Range",ht="Real",ft="Reciprocal",mt="Relu",gt="Reshape",yt="ResizeNearestNeighbor",bt="ResizeNearestNeighborGrad",xt="ResizeBilinear",vt="ResizeBilinearGrad",wt="Relu6",kt="Reverse",Tt="Round",St="Rsqrt",Nt="ScatterNd",It="TensorScatterUpdate",Ct="SearchSorted",Et="Select",At="Selu",$t="Slice",Ft="Sin",Rt="Sinh",Dt="Sign",_t="Sigmoid",Ot="Softplus",Lt="Sqrt",Mt="Sum",zt="SpaceToBatchND",Pt="SplitV",Bt="Softmax",Wt="SparseFillEmptyRows",Vt="SparseReshape",Ut="SparseSegmentMean",Gt="SparseSegmentSum",Zt="SparseToDense",jt="SquaredDifference",Ht="Square",Kt="StaticRegexReplace",Yt="StridedSlice",Qt="StringNGrams",qt="StringSplit",Xt="StringToHashBucketFast",Jt="Sub",en="Tan",tn="Tanh",nn="Tile",rn="TopK",sn="Transform",an="Transpose",on="Unique",un="Unpack",cn="UnsortedSegmentSum",ln="ZerosLike",pn="Step",dn="FromPixels",hn="RotateWithOffset",fn="_FusedMatMul",mn="FusedConv2D",gn="FusedDepthwiseConv2D"},7074:function(e,t,n){"use strict";n.d(t,{Op:function(){return l},_5:function(){return u},kr:function(){return d},tA:function(){return p},vQ:function(){return c}});var r=n(6574),s=n(1743),a=n(3673);const o=(0,s.m)("kernelRegistry",(()=>new Map)),i=(0,s.m)("gradRegistry",(()=>new Map));function u(e,t){const n=h(e,t);return o.get(n)}function c(e){return i.get(e)}function l(e){const t=o.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,o]=s,[i]=a.split("_");i===e&&n.push(o)}return n}function p(e){const{kernelName:t,backendName:n}=e,r=h(t,n);o.has(r)&&a.i(`The kernel '${t}' for backend '${n}' is already registered`),o.set(r,e)}function d(e){const{kernelName:t}=e;i.has(t)&&(0,r._K)().getBool("DEBUG")&&a.i(`Overriding the gradient for '${t}'`),i.set(t,e)}function h(e,t){return`${t}_${e}`}},3673:function(e,t,n){"use strict";n.d(t,{R:function(){return a},i:function(){return s}});var r=n(6574);function s(...e){(0,r._K)().getBool("IS_TEST")||(0,r._K)().getBool("PROD")||console.warn(...e)}function a(...e){(0,r._K)().getBool("IS_TEST")||(0,r._K)().getBool("PROD")||console.log(...e)}},4888:function(e,t,n){"use strict";n.d(t,{t:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({abs_:function(e){const t=(0,a.YT)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.T2.runKernel(s.$zE,e)}{const e={x:t};return r.T2.runKernel(s.ljI,e)}}})},2804:function(e,t,n){"use strict";n.d(t,{H:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({acos_:function(e){const t={x:(0,a.YT)(e,"x","acos")};return r.T2.runKernel(s.Vvy,t)}})},7558:function(e,t,n){"use strict";n.d(t,{F:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({acosh_:function(e){const t={x:(0,a.YT)(e,"x","acosh")};return r.T2.runKernel(s.PH8,t)}})},7523:function(e,t,n){"use strict";n.d(t,{W:function(){return i}});var r=n(1585),s=n(7822),a=n(565),o=n(8189);const i=(0,n(929).op)({add_:function(e,t){let n=(0,o.YT)(e,"a","add"),i=(0,o.YT)(t,"b","add");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.T2.runKernel(s.OMN,u)}})},2307:function(e,t,n){"use strict";n.d(t,{Q:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({all_:function(e,t=null,n=!1){const o={x:(0,a.YT)(e,"x","all","bool")},i={axis:t,keepDims:n};return r.T2.runKernel(s.u8Z,o,i)}})},9326:function(e,t,n){"use strict";n.d(t,{b:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({any_:function(e,t=null,n=!1){const o={x:(0,a.YT)(e,"x","any","bool")},i={axis:t,keepDims:n};return r.T2.runKernel(s.FSt,o,i)}})},897:function(e,t,n){"use strict";n.d(t,{F:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({argMax_:function(e,t=0){const n={x:(0,a.YT)(e,"x","argMax")},o={axis:t};return r.T2.runKernel(s.Jp_,n,o)}})},4339:function(e,t,n){"use strict";n.d(t,{X:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({argMin_:function(e,t=0){const n={x:(0,a.YT)(e,"x","argMin")},o={axis:t};return r.T2.runKernel(s.p_m,n,o)}})},6841:function(e,t,n){"use strict";n.d(t,{q:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({asin_:function(e){const t={x:(0,a.YT)(e,"x","asin")};return r.T2.runKernel(s.QKF,t)}})},269:function(e,t,n){"use strict";n.d(t,{y:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({asinh_:function(e){const t={x:(0,a.YT)(e,"x","asinh")};return r.T2.runKernel(s.epO,t)}})},9580:function(e,t,n){"use strict";n.d(t,{r:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({atan_:function(e){const t={x:(0,a.YT)(e,"x","atan")};return r.T2.runKernel(s.TyE,t)}})},1404:function(e,t,n){"use strict";n.d(t,{F:function(){return i}});var r=n(1585),s=n(7822),a=n(565),o=n(8189);const i=(0,n(929).op)({atan2_:function(e,t){let n=(0,o.YT)(e,"a","atan2"),i=(0,o.YT)(t,"b","atan2");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.T2.runKernel(s.lxb,u)}})},3774:function(e,t,n){"use strict";n.d(t,{r:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({atanh_:function(e){const t={x:(0,a.YT)(e,"x","atanh")};return r.T2.runKernel(s.zP9,t)}})},3909:function(e,t,n){"use strict";n.d(t,{$:function(){return p}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119),i=n(9809),u=n(7195),c=n(929),l=n(2302);const p=(0,c.op)({avgPool_:function(e,t,n,c,p){const d=(0,a.YT)(e,"x","avgPool","float32");o.vA(u.G0(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let h=d,f=!1;3===d.rank&&(f=!0,h=(0,l.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.vA(4===h.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${h.rank}.`)),u.s_("avgPool",c,p);const m={x:h},g={filterSize:t,strides:n,pad:c,dimRoundingMode:p};let y=r.T2.runKernel(s.ho8,m,g);return y=(0,i.w)(y,d.dtype),f?(0,l.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1078:function(e,t,n){"use strict";n.d(t,{Em:function(){return c},SM:function(){return i},WC:function(){return u},WH:function(){return s},aF:function(){return a},fK:function(){return p},gx:function(){return l},lb:function(){return o}});var r=n(5119);function s(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const r=e.length+t.length,s=[];let a=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(e[a++]):s.push(t[o++]);return s}function o(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function i(e,t){return a(e,t.map((e=>1)),t)}function u(e,t,n){r.vA(s(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function c(e,t){if(s(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function l(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function p(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},9772:function(e,t,n){"use strict";n.d(t,{G:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119);const i=(0,n(929).op)({batchToSpaceND_:function(e,t,n){const i=(0,a.YT)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));o.vA(i.rank>=1+t.length,(()=>`input rank is ${i.rank} but should be > than blockShape.length ${t.length}`)),o.vA(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),o.vA(i.shape[0]%u==0,(()=>`input tensor batch is ${i.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`));const c={x:i},l={blockShape:t,crops:n};return r.T2.runKernel(s.Ik2,c,l)}})},9160:function(e,t,n){"use strict";n.d(t,{$:function(){return u}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119),i=n(2302);const u=(0,n(929).op)({batchNorm_:function(e,t,n,u,c,l){null==l&&(l=.001);const p=(0,a.YT)(e,"x","batchNorm"),d=(0,a.YT)(t,"mean","batchNorm"),h=(0,a.YT)(n,"variance","batchNorm");let f,m;null!=c&&(f=(0,a.YT)(c,"scale","batchNorm")),null!=u&&(m=(0,a.YT)(u,"offset","batchNorm")),o.vA(d.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.vA(null==m||d.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.vA(null==f||d.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,i.t)(e,[1,1,1,e.size]):2===e.rank?(0,i.t)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,i.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(p),scale:f,offset:m,mean:d,variance:h},y={varianceEpsilon:l},b=r.T2.runKernel(s.i5R,g,y);return(0,i.t)(b,p.shape)}})},3567:function(e,t,n){"use strict";n.d(t,{h:function(){return l}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119),i=n(125),u=n(929),c=n(2302);const l=(0,u.op)({broadcastTo_:function(e,t){let n=(0,a.YT)(e,"broadcastTo","x");const u=n.shape;if((0,o.SA)(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,c.t)(n,e)}const l=n.shape,p=Array.from(t);for(let r=t.length-1;r>=0;r--)if(l[r]===t[r])p[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${u}] cannot be broadcast to [${t}].`);if(0===p.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.o)(n);const d={x:n},h={reps:p};return r.T2.runKernel(s.FAs,d,h)}})},2198:function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,o=e[a]||1;(t[t.length-1-s]||1)>1&&1===o&&r.unshift(a)}return r}function s(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,o=t[a];(null==s||1===s&&o>1)&&n.unshift(a)}return n}function a(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let o=t[t.length-s-1];if(null==o&&(o=1),1===a)r[n-s-1]=o;else if(1===o)r[n-s-1]=a;else{if(a!==o){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-s-1]=a}}return r}n.r(t),n.d(t,{assertAndGetBroadcastShape:function(){return a},getBroadcastDims:function(){return r},getReductionAxes:function(){return s}})},448:function(e,t,n){"use strict";n.d(t,{r:function(){return a}});var r=n(259),s=n(5119);function a(e,t="float32",n){return t=t||"float32",s.SA(e),new r.yl(e,t,n)}},9809:function(e,t,n){"use strict";n.d(t,{w:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119);const i=(0,n(929).op)({cast_:function(e,t){const n=(0,a.YT)(e,"x","cast");if(!o.xn(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},u={dtype:t};return r.T2.runKernel(s.KXH,i,u)}})},855:function(e,t,n){"use strict";n.d(t,{m:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({ceil_:function(e){const t={x:(0,a.YT)(e,"x","ceil","float32")};return r.T2.runKernel(s.QDP,t)}})},6928:function(e,t,n){"use strict";n.d(t,{z:function(){return u}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119),i=n(6111);const u=(0,n(929).op)({clipByValue_:function(e,t,n){const u=(0,a.YT)(e,"x","clipByValue");if(o.vA(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return(0,i.G)(u.shape,t,u.dtype);const c={x:u},l={clipValueMin:t,clipValueMax:n};return r.T2.runKernel(s.vaV,c,l)}})},125:function(e,t,n){"use strict";n.d(t,{o:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({clone_:function(e){const t={x:(0,a.YT)(e,"x","clone","string_or_numeric")};return r.T2.runKernel(s.lzr,t)}})},7148:function(e,t,n){"use strict";n.d(t,{f:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119);const i=(0,n(929).op)({complex_:function(e,t){const n=(0,a.YT)(e,"real","complex"),i=(0,a.YT)(t,"imag","complex");o.O3(n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const u={real:n,imag:i};return r.T2.runKernel(s.pr3,u)}})},5030:function(e,t,n){"use strict";n.d(t,{x:function(){return u}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119),i=n(125);const u=(0,n(929).op)({concat_:function(e,t=0){(0,o.vA)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,a.j1)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,i.o)(n[0]);const u=n,c={axis:t};return r.T2.runKernel(s.$dB,u,c)}})},3701:function(e,t,n){"use strict";n.d(t,{k:function(){return c}});var r=n(8189),s=n(5119),a=n(8794),o=n(7195),i=n(929),u=n(2302);const c=(0,i.op)({conv1d_:function(e,t,n,i,c="NWC",l=1,p){const d=(0,r.YT)(e,"x","conv1d"),h=(0,r.YT)(t,"filter","conv1d");let f=d,m=!1;2===d.rank&&(m=!0,f=(0,u.t)(d,[1,d.shape[0],d.shape[1]])),s.vA(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),s.vA(3===h.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${h.rank}.`)),o.s_("conv1d",i,p),s.vA(f.shape[2]===h.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${h.shape[1]}.`)),s.vA(o.G0(n,l),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`)),s.vA(o.qk(l),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),s.vA(o.qk(n),(()=>"Error in conv1D: Stride should be larger than 0.")),s.vA("NWC"===c,(()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`));const g=(0,u.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),y=(0,u.t)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],x=[1,l],v=(0,a.X)(y,g,b,i,"NHWC",x,p);return m?(0,u.t)(v,[v.shape[2],v.shape[3]]):(0,u.t)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},8794:function(e,t,n){"use strict";n.d(t,{X:function(){return l}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119),i=n(7195),u=n(929),c=n(2302);const l=(0,u.op)({conv2d_:function(e,t,n,u,l="NHWC",p=[1,1],d){const h=(0,a.YT)(e,"x","conv2d","float32"),f=(0,a.YT)(t,"filter","conv2d","float32");let m=h,g=!1;3===h.rank&&(g=!0,m=(0,c.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.vA(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),o.vA(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),i.s_("conv2d",u,d);const y="NHWC"===l?m.shape[3]:m.shape[1];o.vA(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),o.vA(i.G0(n,p),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`)),o.vA(i.qk(p),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),o.vA(i.qk(n),(()=>"Error in conv2D: Strides should be larger than 0."));const b={x:m,filter:f},x={strides:n,pad:u,dataFormat:l,dilations:p,dimRoundingMode:d},v=r.T2.runKernel(s.p2J,b,x);return g?(0,c.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},5248:function(e,t,n){"use strict";n.d(t,{H:function(){return c}});var r=n(1585),s=n(7822),a=n(5119),o=n(7195),i=n(929),u=n(2302);const c=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,c,l="NHWC",p){let d=e;3===e.rank&&(d=(0,u.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,u.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a.vA(4===d.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${d.shape}.`)),a.vA(4===h.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${h.shape}.`)),a.vA(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===l?d.shape[3]:d.shape[1],m="NHWC"===l?h.shape[3]:h.shape[1];a.vA(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),a.vA(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),o.s_("conv2dDerFilter",c,p);const g={x:d,dy:h},y={strides:i,pad:c,dataFormat:l,dimRoundingMode:p,filterShape:n};return r.T2.runKernel(s.rFm,g,y)}})},252:function(e,t,n){"use strict";n.d(t,{v:function(){return c}});var r=n(1585),s=n(7822),a=n(5119),o=n(7195),i=n(929),u=n(2302);const c=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,c,l="NHWC",p){a.vA(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let d=e,h=t,f=!1;3===t.rank&&(f=!0,h=(0,u.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),d=[1,e[0],e[1],e[2]]),a.vA(4===d.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${d.length}.`)),a.vA(4===h.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${h.rank}`)),a.vA(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===l?d[3]:d[1],g="NHWC"===l?h.shape[3]:h.shape[1];a.vA(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),a.vA(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),o.s_("conv2dDerInput",c,p);const y={dy:h,filter:n},b={strides:i,pad:c,dataFormat:l,dimRoundingMode:p,inputShape:d},x=r.T2.runKernel(s.jfg,y,b);return f?(0,u.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},1106:function(e,t,n){"use strict";n.d(t,{w:function(){return a}});var r=n(8189),s=n(252);const a=(0,n(929).op)({conv2dTranspose_:function(e,t,n,a,o,i){const u=(0,r.YT)(e,"x","conv2dTranspose"),c=(0,r.YT)(t,"filter","conv2dTranspose");return(0,s.v)(n,u,c,a,o,"NHWC",i)}})},1895:function(e,t,n){"use strict";n.d(t,{c:function(){return u}});var r=n(1585),s=n(7822),a=n(5119),o=n(929),i=n(2302);const u=(0,o.op)({conv3DBackpropInput_:function(e,t,n,o,u){a.vA(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let c=e,l=t,p=!1;4===t.rank&&(p=!0,l=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),c=[1,e[0],e[1],e[2],e[3]]);const d=c[4],h=l.shape[4];a.vA(5===c.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${c.length}.`)),a.vA(5===l.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${l.rank}`)),a.vA(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),a.vA(d===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[3]}.`)),a.vA(h===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[4]}.`));const f={dy:l,filter:n},m={pad:u,strides:o,inputShape:c},g=r.T2.runKernel(s.gC7,f,m);return p?(0,i.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},7195:function(e,t,n){"use strict";n.d(t,{$Q:function(){return y},Dh:function(){return f},E6:function(){return a},G0:function(){return m},G8:function(){return c},YQ:function(){return s},l5:function(){return o},p$:function(){return u},qk:function(){return g},s_:function(){return b},uf:function(){return i}});var r=n(5119);function s(e,t,n,r,s="NHWC",a){return i(e,[...t,e[3]],n,a,r,null,null,y(s))}function a(e,t,n,r,s,a,o="channelsLast"){const[u,c]=l(t);let p;if("channelsLast"===o)p=[u,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);p=[u,c,e[1],e[1]]}return i(e,p,n,r,s,a,!1,o)}function o(e,t,n,r,s,a,o="NDHWC"){const[i,c,l]=p(t);let d,h;if("NDHWC"===o)h="channelsLast",d=[i,c,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",d=[i,c,l,e[1],e[1]]}return u(e,d,n,r,s,!1,h,a)}function i(e,t,n,r,s,a,o=!1,i="channelsLast"){let[u,p,f,m]=[-1,-1,-1,-1];if("channelsLast"===i)[u,p,f,m]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,m,p,f]=e}const[g,y,,b]=t,[x,v]=l(n),[w,k]=l(r),T=d(g,w),S=d(y,k),{padInfo:N,outHeight:I,outWidth:C}=function(e,t,n,r,s,a,o,i,u){let l,p,d;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=c(e,t,n));const a=e[0],o=e[1],i=h((a-t+2*r)/n+1,s),u=h((o-t+2*r)/n+1,s);return[i,u]}([t,n],a,r,e,i);p=s[0],d=s[1]}else if("same"===e){p=Math.ceil(t/r),d=Math.ceil(n/s);const e=Math.max(0,(p-1)*r+a-t),i=Math.max(0,(d-1)*s+o-n),u=Math.floor(e/2),c=e-u,h=Math.floor(i/2);l={top:u,bottom:c,left:h,right:i-h,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-a+1)/r),d=Math.ceil((n-o+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const c="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];l={top:c,bottom:f,left:m,right:g,type:0===c&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},p=h((t-a+c+f)/r+1,i),d=h((n-o+m+g)/s+1,i)}}return{padInfo:l,outHeight:p,outWidth:d}}(s,p,f,x,v,T,S,a,i),E=o?b*m:b;let A;return"channelsFirst"===i?A=[u,E,I,C]:"channelsLast"===i&&(A=[u,I,C,E]),{batchSize:u,dataFormat:i,inHeight:p,inWidth:f,inChannels:m,outHeight:I,outWidth:C,outChannels:E,padInfo:N,strideHeight:x,strideWidth:v,filterHeight:g,filterWidth:y,effectiveFilterHeight:T,effectiveFilterWidth:S,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function u(e,t,n,r,s,a=!1,o="channelsLast",i){let[u,l,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,l,f,m,g]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,g,l,f,m]=e}const[y,b,x,,v]=t,[w,k,T]=p(n),[S,N,I]=p(r),C=d(y,S),E=d(b,N),A=d(x,I),{padInfo:$,outDepth:F,outHeight:R,outWidth:D}=function(e,t,n,r,s,a,o,i,u,l,p){let d,f,m,g;"valid"===e&&(e=0);if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,r,s,a){null==s&&(s=c(e,t[0],r[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*s>=t[i]&&(o[i]=h((e[i]-t[i]+2*s)/r[i]+1,a));return o}([t,n,r,1],[i,u,l],1,[s,a,o],e,p);f=y[0],m=y[1],g=y[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{f=Math.ceil(t/s),m=Math.ceil(n/a),g=Math.ceil(r/o);const e=(f-1)*s+i-t,c=(m-1)*a+u-n,p=(g-1)*o+l-r,h=Math.floor(e/2),y=e-h,b=Math.floor(c/2),x=c-b,v=Math.floor(p/2);d={top:b,bottom:x,left:v,right:p-v,front:h,back:y,type:"SAME"}}}return{padInfo:d,outDepth:f,outHeight:m,outWidth:g}}(s,l,f,m,w,k,T,C,E,A,i),_=a?v*g:v;let O;return"channelsFirst"===o?O=[u,_,F,R,D]:"channelsLast"===o&&(O=[u,F,R,D,_]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:f,inWidth:m,inChannels:g,outDepth:F,outHeight:R,outWidth:D,outChannels:_,padInfo:$,strideDepth:w,strideHeight:k,strideWidth:T,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:S,dilationHeight:N,dilationWidth:I,inShape:e,outShape:O,filterShape:t}}function c(e,t,n,r=1){const s=d(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function l(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function p(e){return"number"==typeof e?[e,e,e]:e}function d(e,t){return t<=1?e:e+(e-1)*(t-1)}function h(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=l(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){return l(e).every((e=>e>0))}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function b(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)r.vA(r.E6(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.vA(r.E6(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},9907:function(e,t,n){"use strict";n.d(t,{g:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({cos_:function(e){const t={x:(0,a.YT)(e,"x","cos","float32")};return r.T2.runKernel(s.Mn0,t)}})},7451:function(e,t,n){"use strict";n.d(t,{y:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({cosh_:function(e){const t={x:(0,a.YT)(e,"x","cosh","float32")};return r.T2.runKernel(s.MnK,t)}})},302:function(e,t,n){"use strict";n.d(t,{L:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({cumprod_:function(e,t=0,n=!1,o=!1){const i={x:(0,a.YT)(e,"x","cumprod")},u={axis:t,exclusive:n,reverse:o};return r.T2.runKernel(s.jj_,i,u)}})},6808:function(e,t,n){"use strict";n.d(t,{r:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({cumsum_:function(e,t=0,n=!1,o=!1){const i={x:(0,a.YT)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:o};return r.T2.runKernel(s.nY8,i,u)}})},1216:function(e,t,n){"use strict";n.d(t,{R:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119);const i=(0,n(929).op)({depthToSpace_:function(e,t,n="NHWC"){const i=(0,a.YT)(e,"x","depthToSpace","float32"),u="NHWC"===n?i.shape[1]:i.shape[2],c="NHWC"===n?i.shape[2]:i.shape[3],l="NHWC"===n?i.shape[3]:i.shape[1];o.vA(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),o.vA(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${i.shape}`)),o.vA(c*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${t} for depthToSpace with input shape\n        ${i.shape}`)),o.vA(l%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${l} for depthToSpace with input shape ${i.shape}`));const p={x:i},d={blockSize:t,dataFormat:n};return r.T2.runKernel(s.TMz,p,d)}})},676:function(e,t,n){"use strict";n.d(t,{G:function(){return l}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119),i=n(7195),u=n(929),c=n(2302);const l=(0,u.op)({depthwiseConv2d_:function(e,t,n,u,l="NHWC",p=[1,1],d){const h=(0,a.YT)(e,"x","depthwiseConv2d","float32"),f=(0,a.YT)(t,"filter","depthwiseConv2d","float32");let m=h,g=!1;3===h.rank&&(g=!0,m=(0,c.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.vA(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),o.vA(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`));const y="NHWC"===l?m.shape[3]:m.shape[1];o.vA(y===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${y}) must match the inChannels dimension in filter ${f.shape[2]}.`)),i.s_("depthwiseConv2d",u,d);const b={x:m,filter:f},x={strides:n,pad:u,dataFormat:l,dilations:p,dimRoundingMode:d},v=r.T2.runKernel(s.tGH,b,x);return g?(0,c.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1890:function(e,t,n){"use strict";n.d(t,{x:function(){return i}});var r=n(1585),s=n(7822),a=n(929),o=n(2302);const i=(0,a.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,i,u=[1,1],c){let l=e;3===e.rank&&(l=(0,o.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const d={x:l,dy:p},h={strides:a,pad:i,dimRoundingMode:c,dilations:u,filterShape:n};return r.T2.runKernel(s.X$8,d,h)}})},3134:function(e,t,n){"use strict";n.d(t,{l:function(){return i}});var r=n(1585),s=n(7822),a=n(929),o=n(2302);const i=(0,a.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,i,u=[1,1],c){let l=t,p=!1;3===t.rank&&(p=!0,l=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const d={dy:l,filter:n},h={strides:a,pad:i,dimRoundingMode:c,dilations:u,inputShape:e},f=r.T2.runKernel(s.nVu,d,h);return p?(0,o.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3002:function(e,t,n){"use strict";n.d(t,{X:function(){return c}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119),i=n(929),u=n(2302);const c=(0,i.op)({dilation2d_:function(e,t,n,i,c=[1,1],l="NHWC"){const p=(0,a.YT)(e,"x","dilation2d"),d=(0,a.YT)(t,"filter","dilation2d");o.vA(3===p.rank||4===p.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${p.rank}.`)),o.vA(3===d.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${d.rank}.`)),o.vA("NHWC"===l,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${l}`));let h=p,f=!1;3===p.rank&&(h=(0,u.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),f=!0),o.vA(h.shape[3]===d.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${h.shape[3]} vs ${d.shape[2]}`));const m={x:h,filter:d},g={strides:n,pad:i,dilations:c},y=r.T2.runKernel(s.jxD,m,g);return f?(0,u.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},9359:function(e,t,n){"use strict";n.d(t,{y:function(){return u}});var r=n(1585),s=n(7822),a=n(565),o=n(8189),i=n(8991);const u=(0,n(929).op)({div_:function(e,t){let n=(0,o.YT)(e,"a","div"),u=(0,o.YT)(t,"b","div");if([n,u]=(0,a.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,i.w)(n,u);const c={a:n,b:u};return r.T2.runKernel(s.sDr,c,{})}})},919:function(e,t,n){"use strict";n.d(t,{e:function(){return l}});var r=n(565),s=n(8189),a=n(9359),o=n(3020),i=n(929),u=n(2151),c=n(5537);const l=(0,i.op)({divNoNan_:function(e,t){let n=(0,s.YT)(e,"a","div"),i=(0,s.YT)(t,"b","div");[n,i]=(0,r.makeTypesMatch)(n,i);const l=(0,a.y)(n,i),p=(0,c.P)(l),d=(0,o.L)(i,p);return(0,u._)(d,p,l)}})},9759:function(e,t,n){"use strict";n.d(t,{O:function(){return u}});var r=n(8189),s=n(5119),a=n(5703),o=n(929),i=n(2302);const u=(0,o.op)({dot_:function(e,t){const n=(0,r.YT)(e,"t1","dot"),o=(0,r.YT)(t,"t2","dot");s.vA(!(1!==n.rank&&2!==n.rank||1!==o.rank&&2!==o.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${o.rank}.`));const u=1===n.rank?n.size:n.shape[1],c=1===o.rank?o.size:o.shape[0];if(s.vA(u===c,(()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${c}.`)),1===n.rank&&1===o.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(o,[-1,1]),r=(0,a.N)(e,t);return(0,i.t)(r,[])}if(1===n.rank&&2===o.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(o,[o.shape[0],o.shape[1]]),r=(0,a.N)(e,t);return(0,i.t)(r,[r.size])}if(2===n.rank&&1===o.rank){const e=(0,i.t)(o,[-1,1]),t=(0,a.N)(n,e);return(0,i.t)(t,[t.size])}{const e=(0,i.t)(o,[o.shape[0],o.shape[1]]);return(0,a.N)(n,e)}}})},3416:function(e,t,n){"use strict";n.d(t,{P:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({elu_:function(e){const t={x:(0,a.YT)(e,"x","elu","float32")};return r.T2.runKernel(s.Pah,t)}})},3020:function(e,t,n){"use strict";n.d(t,{L:function(){return u}});var r=n(1585),s=n(7822),a=n(565),o=n(8189),i=n(2198);const u=(0,n(929).op)({equal_:function(e,t){let n=(0,o.YT)(e,"a","equal","string_or_numeric"),u=(0,o.YT)(t,"b","equal","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(s.BRl,c)}})},5207:function(e,t,n){"use strict";n.d(t,{Y:function(){return u}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119),i=n(9809);const u=(0,n(929).op)({erf_:function(e){let t=(0,a.YT)(e,"x","erf");o.vA("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,i.w)(t,"float32"));const n={x:t};return r.T2.runKernel(s._s9,n)}})},4881:function(e,t,n){"use strict";n.d(t,{p:function(){return s}});var r=n(2596);const s=(0,n(929).op)({euclideanNorm_:function(e,t=null,n=!1){return(0,r.x)(e,"euclidean",t,n)}})},8631:function(e,t,n){"use strict";n.d(t,{o:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({exp_:function(e){const t={x:(0,a.YT)(e,"x","exp")};return r.T2.runKernel(s.ox3,t)}})},8710:function(e,t,n){"use strict";n.d(t,{U:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119);const i=(0,n(929).op)({expandDims_:function(e,t=0){const n=(0,a.YT)(e,"x","expandDims","string_or_numeric");o.vA(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},u={dim:t};return r.T2.runKernel(s.ybN,i,u)}})},517:function(e,t,n){"use strict";n.d(t,{I:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({expm1_:function(e){const t={x:(0,a.YT)(e,"x","expm1")};return r.T2.runKernel(s.ybj,t)}})},6111:function(e,t,n){"use strict";n.d(t,{G:function(){return o}});var r=n(1585),s=n(7822),a=n(5119);function o(e,t,n){(0,a.SA)(e);const o={shape:e,value:t,dtype:n=n||(0,a.X$)(t)};return r.T2.runKernel(s.SQl,{},o)}},5606:function(e,t,n){"use strict";n.d(t,{R:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({floor_:function(e){const t={x:(0,a.YT)(e,"x","floor","float32")};return r.T2.runKernel(s.ZgB,t)}})},8991:function(e,t,n){"use strict";n.d(t,{w:function(){return i}});var r=n(1585),s=n(7822),a=n(565),o=n(8189);const i=(0,n(929).op)({floorDiv_:function(e,t){let n=(0,o.YT)(e,"a","floorDiv"),i=(0,o.YT)(t,"b","floorDiv");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.T2.runKernel(s.ElG,u)}})},8646:function(e,t,n){"use strict";n.d(t,{Do:function(){return m},XB:function(){return f},f2:function(){return g},zE:function(){return y}});var r=n(2198),s=n(3416),a=n(6919),o=n(9258),i=n(4394),u=n(112),c=n(3732),l=n(2302),p=n(8968),d=n(8319),h=n(3791);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,o.l)(e,(0,d.P)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const s=r.getReductionAxes(e.shape,t.shape);return s.length>0&&(n=(0,h.c)(n,s)),(0,l.t)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,u.V)(e);if("elu"===t)return(0,s.P)(e);if("relu6"===t)return(0,c.j)(e);if("prelu"===t)return(0,i.N)(e,n);if("leakyrelu"===t)return(0,a.H)(e,r);if("sigmoid"===t)return(0,p.r)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},8229:function(e,t,n){"use strict";n.d(t,{k:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({gather_:function(e,t,n=0,o=0){const i={x:(0,a.YT)(e,"x","gather"),indices:(0,a.YT)(t,"indices","gather","int32")},u={axis:n,batchDims:o};return r.T2.runKernel(s.mxL,i,u)}})},2058:function(e,t,n){"use strict";n.d(t,{r:function(){return u}});var r=n(1585),s=n(7822),a=n(565),o=n(8189),i=n(2198);const u=(0,n(929).op)({greater_:function(e,t){let n=(0,o.YT)(e,"a","greater","string_or_numeric"),u=(0,o.YT)(t,"b","greater","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(s.XhZ,c)}})},3337:function(e,t,n){"use strict";n.d(t,{D:function(){return u}});var r=n(1585),s=n(7822),a=n(565),o=n(8189),i=n(2198);const u=(0,n(929).op)({greaterEqual_:function(e,t){let n=(0,o.YT)(e,"a","greaterEqual","string_or_numeric"),u=(0,o.YT)(t,"b","greaterEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(s.lLS,c)}})},5040:function(e,t,n){"use strict";n.d(t,{n:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({imag_:function(e){const t={input:(0,a.YT)(e,"input","imag")};return r.T2.runKernel(s.dv8,t)}})},4711:function(e,t,n){"use strict";n.d(t,{v:function(){return c}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119),i=n(929),u=n(2302);const c=(0,i.op)({resizeBilinear_:function(e,t,n=!1,i=!1){const c=(0,a.YT)(e,"images","resizeBilinear");o.vA(3===c.rank||4===c.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${c.rank}.`)),o.vA(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),o.vA(!1===i||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let l=c,p=!1;3===c.rank&&(p=!0,l=(0,u.t)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=t,d={images:l},h={alignCorners:n,halfPixelCenters:i,size:t},f=r.T2.runKernel(s.hgw,d,h);return p?(0,u.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},2954:function(e,t,n){"use strict";n.d(t,{b:function(){return c}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119),i=n(929),u=n(2302);const c=(0,i.op)({resizeNearestNeighbor_:function(e,t,n=!1,i=!1){const c=(0,a.YT)(e,"images","resizeNearestNeighbor");o.vA(3===c.rank||4===c.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${c.rank}.`)),o.vA(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),o.vA("float32"===c.dtype||"int32"===c.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),o.vA(!1===i||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let l=c,p=!1;3===c.rank&&(p=!0,l=(0,u.t)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=t,d={images:l},h={alignCorners:n,halfPixelCenters:i,size:t},f=r.T2.runKernel(s.jOE,d,h);return p?(0,u.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},8318:function(e,t,n){"use strict";n.d(t,{M:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({isFinite_:function(e){const t={x:(0,a.YT)(e,"x","isFinite")};return r.T2.runKernel(s.gIW,t)}})},3454:function(e,t,n){"use strict";n.d(t,{E:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({isInf_:function(e){const t={x:(0,a.YT)(e,"x","isInf")};return r.T2.runKernel(s.E3$,t)}})},6300:function(e,t,n){"use strict";n.d(t,{y:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({isNaN_:function(e){const t={x:(0,a.YT)(e,"x","isNaN")};return r.T2.runKernel(s.iPs,t)}})},6919:function(e,t,n){"use strict";n.d(t,{H:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({leakyRelu_:function(e,t=.2){const n={x:(0,a.YT)(e,"x","leakyRelu")},o={alpha:t};return r.T2.runKernel(s.X0$,n,o)}})},1303:function(e,t,n){"use strict";n.d(t,{M:function(){return u}});var r=n(1585),s=n(7822),a=n(565),o=n(8189),i=n(2198);const u=(0,n(929).op)({less_:function(e,t){let n=(0,o.YT)(e,"a","less","string_or_numeric"),u=(0,o.YT)(t,"b","less","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(s.mIA,c)}})},6508:function(e,t,n){"use strict";n.d(t,{I:function(){return u}});var r=n(1585),s=n(7822),a=n(565),o=n(8189),i=n(2198);const u=(0,n(929).op)({lessEqual_:function(e,t){let n=(0,o.YT)(e,"a","lessEqual","string_or_numeric"),u=(0,o.YT)(t,"b","lessEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(s.CwD,c)}})},3531:function(e,t,n){"use strict";n.d(t,{K:function(){return c}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119),i=n(929),u=n(2302);const c=(0,i.op)({localResponseNormalization_:function(e,t=5,n=1,i=1,c=.5){const l=(0,a.YT)(e,"x","localResponseNormalization");o.vA(4===l.rank||3===l.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`)),o.vA(o.E6(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let p=l,d=!1;3===l.rank&&(d=!0,p=(0,u.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const h={x:p},f={depthRadius:t,bias:n,alpha:i,beta:c},m=r.T2.runKernel(s.jM4,h,f);return d?(0,u.t)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},4010:function(e,t,n){"use strict";n.d(t,{R:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({log_:function(e){const t={x:(0,a.YT)(e,"x","log","float32")};return r.T2.runKernel(s.tG8,t)}})},2015:function(e,t,n){"use strict";n.d(t,{K:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({log1p_:function(e){const t={x:(0,a.YT)(e,"x","log1p")};return r.T2.runKernel(s.Cg$,t)}})},5645:function(e,t,n){"use strict";n.d(t,{n:function(){return l}});var r=n(1830),s=n(8189),a=n(9258),o=n(6522),i=n(929),u=n(8968),c=n(6030);const l=(0,i.op)({logSigmoid_:function(e){const t=(0,s.YT)(e,"x","logSigmoid");return(0,r._X)((e=>({value:(0,o.H)((0,c.l)((0,o.H)(e))),gradFunc:t=>(0,a.l)(t,(0,u.r)((0,o.H)(e)))})))(t)}})},7991:function(e,t,n){"use strict";n.d(t,{H:function(){return h}});var r=n(1830),s=n(8189),a=n(9809),o=n(8631),i=n(4010),u=n(1938),c=n(9258),l=n(929),p=n(7126),d=n(3791);const h=(0,l.op)({logSoftmax_:function(e,t=-1){const n=(0,s.YT)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,r._X)(((e,n)=>{const r=(0,u.T)(e,t,!0),s=(0,p.j)(e,r),l=(0,p.j)((0,a.w)(s,"float32"),(0,i.R)((0,d.c)((0,o.o)(s),t,!0)));n([l]);return{value:l,gradFunc:(e,n)=>{const[r]=n,s=(0,o.o)(r);return(0,p.j)(e,(0,c.l)((0,d.c)(e,t,!0),s))}}}))(n)}})},3330:function(e,t,n){"use strict";n.d(t,{V:function(){return f}});var r=n(8189),s=n(5119),a=n(7523),o=n(1078),i=n(8631),u=n(4010),c=n(1938),l=n(929),p=n(2302),d=n(7126),h=n(3791);const f=(0,l.op)({logSumExp_:function(e,t=null,n=!1){const l=(0,r.YT)(e,"x","logSumExp"),f=(0,s.Y6)(t,l.shape),m=(0,c.T)(l,f,!0),g=(0,d.j)(l,m),y=(0,i.o)(g),b=(0,h.c)(y,f),x=(0,u.R)(b),v=(0,a.W)((0,p.t)(m,x.shape),x);if(n){const e=(0,o.SM)(v.shape,f);return(0,p.t)(v,e)}return v}})},3789:function(e,t,n){"use strict";n.d(t,{n:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(2198);const i=(0,n(929).op)({logicalAnd_:function(e,t){const n=(0,a.YT)(e,"a","logicalAnd","bool"),i=(0,a.YT)(t,"b","logicalAnd","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const u={a:n,b:i};return r.T2.runKernel(s.RUm,u)}})},9881:function(e,t,n){"use strict";n.d(t,{N:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({logicalNot_:function(e){const t={x:(0,a.YT)(e,"x","logicalNot","bool")};return r.T2.runKernel(s.nZd,t)}})},9879:function(e,t,n){"use strict";n.d(t,{z:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(2198);const i=(0,n(929).op)({logicalOr_:function(e,t){const n=(0,a.YT)(e,"a","logicalOr","bool"),i=(0,a.YT)(t,"b","logicalOr","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const u={a:n,b:i};return r.T2.runKernel(s.LXA,u)}})},9925:function(e,t,n){"use strict";n.d(t,{r:function(){return u}});var r=n(8189),s=n(2198),a=n(3789),o=n(9881),i=n(9879);const u=(0,n(929).op)({logicalXor_:function(e,t){const n=(0,r.YT)(e,"a","logicalXor","bool"),u=(0,r.YT)(t,"b","logicalXor","bool");return(0,s.assertAndGetBroadcastShape)(n.shape,u.shape),(0,a.n)((0,i.z)(e,t),(0,o.N)((0,a.n)(e,t)))}})},5703:function(e,t,n){"use strict";n.d(t,{N:function(){return i}});var r=n(1585),s=n(7822),a=n(565),o=n(8189);const i=(0,n(929).op)({matMul_:function(e,t,n=!1,i=!1){let u=(0,o.YT)(e,"a","matMul"),c=(0,o.YT)(t,"b","matMul");[u,c]=(0,a.makeTypesMatch)(u,c);const l={a:u,b:c},p={transposeA:n,transposeB:i};return r.T2.runKernel(s.jAQ,l,p)}})},1938:function(e,t,n){"use strict";n.d(t,{T:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({max_:function(e,t=null,n=!1){const o={x:(0,a.YT)(e,"x","max")},i={reductionIndices:t,keepDims:n};return r.T2.runKernel(s.VAI,o,i)}})},6999:function(e,t,n){"use strict";n.d(t,{j:function(){return l}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119),i=n(7195),u=n(929),c=n(2302);const l=(0,u.op)({maxPool_:function(e,t,n,u,l){const p=(0,a.YT)(e,"x","maxPool");let d=p,h=!1;3===p.rank&&(h=!0,d=(0,c.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.vA(4===d.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${d.rank}.`)),o.vA(i.G0(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),i.s_("maxPool",u,l);const f={x:d},m={filterSize:t,strides:n,pad:u,dimRoundingMode:l},g=r.T2.runKernel(s.t3d,f,m);return h?(0,c.t)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},178:function(e,t,n){"use strict";n.d(t,{P:function(){return c}});var r=n(1585),s=n(7822),a=n(565),o=n(8189),i=n(2198),u=n(9809);const c=(0,n(929).op)({maximum_:function(e,t){let n=(0,o.YT)(e,"a","maximum"),c=(0,o.YT)(t,"b","maximum");[n,c]=(0,a.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=(0,u.w)(n,"int32"),c=(0,u.w)(c,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return r.T2.runKernel(s.LDN,l)}})},2611:function(e,t,n){"use strict";n.d(t,{i:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({mean_:function(e,t=null,n=!1){const o={x:(0,a.YT)(e,"x","mean")},i={axis:t,keepDims:n};return r.T2.runKernel(s.g5A,o,i)}})},7436:function(e,t,n){"use strict";n.d(t,{j:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({min_:function(e,t=null,n=!1){const o={x:(0,a.YT)(e,"x","min")},i={axis:t,keepDims:n};return r.T2.runKernel(s.lNG,o,i)}})},2644:function(e,t,n){"use strict";n.d(t,{B:function(){return c}});var r=n(1585),s=n(7822),a=n(565),o=n(8189),i=n(2198),u=n(9809);const c=(0,n(929).op)({minimum_:function(e,t){let n=(0,o.YT)(e,"a","minimum"),c=(0,o.YT)(t,"b","minimum");[n,c]=(0,a.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=(0,u.w)(n,"int32"),c=(0,u.w)(c,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return r.T2.runKernel(s.LG0,l)}})},6567:function(e,t,n){"use strict";n.d(t,{F:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119);const i=(0,n(929).op)({mirrorPad_:function(e,t,n){o.vA("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const i=(0,a.YT)(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.vA(t.length===i.rank,(()=>`Padding doesn't match input. Must be ${i.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let r=0;r<i.rank;r++)o.vA(2===t[r].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),o.vA(t[r][0]>=0&&t[r][0]<=i.shape[r]-u&&t[r][1]>=0&&t[r][1]<=i.shape[r]-u,(()=>`Padding in dimension ${r} cannot be greater than or equal to ${i.shape[r]-u} or less than 0 for input of shape ${i.shape}`));const c={paddings:t,mode:n},l={x:i};return r.T2.runKernel(s.x7F,l,c)}})},152:function(e,t,n){"use strict";n.d(t,{z:function(){return i}});var r=n(1585),s=n(7822),a=n(565),o=n(8189);const i=(0,n(929).op)({mod_:function(e,t){let n=(0,o.YT)(e,"a","mod"),i=(0,o.YT)(t,"b","mod");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.T2.runKernel(s.BLA,u)}})},9258:function(e,t,n){"use strict";n.d(t,{l:function(){return i}});var r=n(1585),s=n(7822),a=n(565),o=n(8189);const i=(0,n(929).op)({mul_:function(e,t){let n=(0,o.YT)(e,"a","mul"),i=(0,o.YT)(t,"b","mul");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.T2.runKernel(s.xu7,u)}})},6522:function(e,t,n){"use strict";n.d(t,{H:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({neg_:function(e){const t={x:(0,a.YT)(e,"x","neg")};return r.T2.runKernel(s.l0G,t)}})},2596:function(e,t,n){"use strict";n.d(t,{x:function(){return y}});var r=n(8189),s=n(5119),a=n(4888),o=n(1078),i=n(1938),u=n(7436),c=n(929),l=n(6609),p=n(2302),d=n(5702),h=n(9348),f=n(5793),m=n(3791);function g(e,t,n=null){if(0===e.rank)return(0,a.t)(e);if(1!==e.rank&&null===n)return g((0,p.t)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.c)((0,a.t)(e),n);if(t===1/0)return(0,i.T)((0,a.t)(e),n);if(t===-1/0)return(0,u.j)((0,a.t)(e),n);if("euclidean"===t||2===t)return(0,h.R)((0,m.c)((0,l.n)((0,a.t)(e),(0,d.d)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,i.T)((0,m.c)((0,a.t)(e),n[0]),n[1]-1);if(t===1/0)return(0,i.T)((0,m.c)((0,a.t)(e),n[1]),n[0]);if(t===-1/0)return(0,u.j)((0,m.c)((0,a.t)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,h.R)((0,m.c)((0,f.E)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,c.op)({norm_:function(e,t="euclidean",n=null,a=!1){const i=g(e=(0,r.YT)(e,"x","norm"),t,n);let u=i.shape;if(a){const t=(0,s.Y6)(n,e.shape);u=o.SM(i.shape,t)}return(0,p.t)(i,u)}})},2118:function(e,t,n){"use strict";n.d(t,{E:function(){return u}});var r=n(1585),s=n(7822),a=n(565),o=n(8189),i=n(2198);const u=(0,n(929).op)({notEqual_:function(e,t){let n=(0,o.YT)(e,"a","notEqual","string_or_numeric"),u=(0,o.YT)(t,"b","notEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(s.ylV,c)}})},1760:function(e,t,n){"use strict";n.d(t,{M:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({oneHot_:function(e,t,n=1,o=0,i="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const u={indices:(0,a.YT)(e,"indices","oneHot","int32")},c={dtype:i,depth:t,onValue:n,offValue:o};return r.T2.runKernel(s.urI,u,c)}})},1411:function(e,t,n){"use strict";n.d(t,{S:function(){return i}});var r=n(1585),s=n(5119),a=n(7148),o=n(2855);function i(e,t="float32"){if((0,s.SA)(e),"complex64"===t){const t=i(e,"float32"),n=(0,o.U)(e,"float32");return(0,a.f)(t,n)}const n=(0,s.FZ)((0,s.Ze)(e),t);return r.T2.makeTensor(n,e,t)}},9885:function(e,t,n){"use strict";n.d(t,{P:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({onesLike_:function(e){const t={x:(0,a.YT)(e,"x","onesLike")};return r.T2.runKernel(s.LWX,t)}})},929:function(e,t,n){"use strict";n.d(t,{B:function(){return a},op:function(){return o}});var r=n(1585),s=n(5119);const a="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=a;const i=(...e)=>{r.T2.startScope(n);try{const t=o(...e);return(0,s.yL)(t)&&console.error("Cannot return a Promise inside of tidy."),r.T2.endScope(t),t}catch(t){throw r.T2.endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},4066:function(e,t,n){"use strict";n.d(t,{BTT:function(){return d.B},tnl:function(){return s.t},HQu:function(){return a.H},FqL:function(){return o.F},WQq:function(){return i.W},QiD:function(){return h},Q7R:function(){return f.Q},bzn:function(){return m.b},FLi:function(){return g.F},XRg:function(){return y.X},qRo:function(){return b.q},yHs:function(){return x.y},rYl:function(){return v.r},FPz:function(){return w.F},rfv:function(){return k.r},$jT:function(){return T.$},sub:function(){return C},lZX:function(){return _},$v7:function(){return L.$},BFc:function(){return M},kSi:function(){return z},T5N:function(){return P},GTe:function(){return O.G},HbZ:function(){return B},vjT:function(){return W},ftb:function(){return nr},ROE:function(){return V},hOW:function(){return U.h},ra8:function(){return G.r},wgE:function(){return S.w},mkO:function(){return Z.m},zQh:function(){return j.z},o8B:function(){return H.o},faB:function(){return K.f},xWs:function(){return E.x},I1m:function(){return Y},RPU:function(){return Q},O5O:function(){return q},P1l:function(){return X},kA9:function(){return J.k},Xtf:function(){return ee.X},wX9:function(){return te.w},IPL:function(){return ne},jIJ:function(){return se},gnS:function(){return ae.g},yIG:function(){return oe.y},_jP:function(){return dr},Lp0:function(){return ie.L},rCv:function(){return ue.r},aOp:function(){return ce},Rj8:function(){return le.R},Gl3:function(){return pe.G},smy:function(){return de},X7t:function(){return he.X},y4m:function(){return fe.y},ek5:function(){return me.e},Omf:function(){return ge.O},EZY:function(){return lr},_3C:function(){return ye},Pqc:function(){return be.P},FJY:function(){return pr},QP2:function(){return xe},LCg:function(){return ve.L},Y12:function(){return we.Y},p4S:function(){return ke.p},oNF:function(){return Te.o},UG6:function(){return Se.U},IYd:function(){return Ne.I},y5U:function(){return Ce},hVP:function(){return wn.h},GSj:function(){return Ee.G},RIf:function(){return Ae.R},wh_:function(){return $e.w},cZk:function(){return r},kgh:function(){return Fe.k},SY9:function(){return cr},rhj:function(){return Re.r},DQN:function(){return De.D},KGM:function(){return kn.K},ngS:function(){return _e.n},Slp:function(){return gs},U4u:function(){return hr},ggX:function(){return Tn.g},MIs:function(){return Oe.M},EN4:function(){return Le.E},yrW:function(){return Me.y},H8d:function(){return ze.H},M7h:function(){return Pe.M},InN:function(){return Be.I},mPL:function(){return ys},mT8:function(){return We},Kgs:function(){return Ve.K},Rm2:function(){return Ue.R},Kko:function(){return Ge.K},nqI:function(){return Ze.n},HPB:function(){return je.H},VZ:function(){return He.V},n76:function(){return Ke.n},NSZ:function(){return Ye.N},ztW:function(){return Qe.z},rxB:function(){return qe.r},YYh:function(){return bs},yzS:function(){return et},NoW:function(){return A.N},T9B:function(){return tt.T},jgi:function(){return nt.j},NYV:function(){return rt},RO:function(){return st},PhQ:function(){return at.P},i2o:function(){return ot.i},OYQ:function(){return ct},jkA:function(){return lt.j},BpO:function(){return pt.B},FFZ:function(){return dt.F},ziu:function(){return ht.z},Clk:function(){return yt},CRk:function(){return or},lKK:function(){return $.l},YDF:function(){return bt},OjQ:function(){return xt},HZy:function(){return vt.H},xbf:function(){return sr.x},Ec:function(){return wt.E},Mw0:function(){return kt.M},SaS:function(){return it.S},P61:function(){return Tt.P},op:function(){return d.op},X4o:function(){return St},eVF:function(){return Nt.e},BZs:function(){return It},grY:function(){return Ct},XHu:function(){return Et},WLX:function(){return At},dzn:function(){return $t.d},n7C:function(){return Ft.n},NsG:function(){return Rt.N},yyV:function(){return Dt.y},_eU:function(){return _t._},whe:function(){return Ot},iyU:function(){return Lt},Q0_:function(){return Mt},_9M:function(){return zt},pR9:function(){return Ut},FE$:function(){return Gt},m0H:function(){return Zt},YeY:function(){return jt},HYA:function(){return Ht},y17:function(){return Kt},xav:function(){return Yt.x},VOZ:function(){return Qt.V},VVh:function(){return qt.V},j__:function(){return Xt.j},tQQ:function(){return I.t},BEg:function(){return Jt.B},QD2:function(){return en},LMr:function(){return tn},I2l:function(){return nn},JYU:function(){return rn},z8$:function(){return Sn.z},LIG:function(){return sn.L},Z$r:function(){return an.Z},d_2:function(){return on.d},NFr:function(){return ir},sZg:function(){return Je},WfX:function(){return un.W},wdz:function(){return cn.w},F12:function(){return ln},ry7:function(){return F.r},_SZ:function(){return pn._},vPA:function(){return ms},F8e:function(){return dn.F},L0l:function(){return hn.L},dik:function(){return R.d},Q$M:function(){return fn},zAd:function(){return mn},wck:function(){return gn},R0O:function(){return yn},Vs9:function(){return bn.V},lw0:function(){return xn.l},eDJ:function(){return vn.e},lMo:function(){return xs},Zhr:function(){return ur},lOn:function(){return fs},lDo:function(){return Nn.l},RZD:function(){return In.R},EwI:function(){return mt.E},Pbu:function(){return Cn.P},r2V:function(){return En.r},t$z:function(){return An.t},PMw:function(){return $n.P},Ym9:function(){return Fn.Y},YjP:function(){return vs},jbE:function(){return gt.j},czq:function(){return Rn.c},Mlm:function(){return Dn.M},ymU:function(){return D.y},OEK:function(){return _n.O},tGX:function(){return Ln},KtR:function(){return Mn},$_$:function(){return zn.$},g9W:function(){return Pn},Lpo:function(){return Bn},yxw:function(){return Wn},NNh:function(){return Un},Vsq:function(){return Ie.V},rfw:function(){return Gn.r},mgz:function(){return rr.m},efE:function(){return Zn},AmM:function(){return jn.A},zAU:function(){return Hn.z},K$i:function(){return Kn.K},rni:function(){return Yn},bvq:function(){return Qn},_M9:function(){return qn._},YJN:function(){return Jn},Ul9:function(){return er.U},POl:function(){return tr.P}});var r={};n.r(r),n.d(r,{conv2d:function(){return xr},depthwiseConv2d:function(){return kr},matMul:function(){return Tr}});var s=n(4888),a=n(2804),o=n(7558),i=n(7523),u=n(1585),c=n(7822),l=n(8189),p=n(5119),d=n(929);const h=(0,d.op)({addN_:function(e){p.vA(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),p.vA(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,l.YT)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!p.r1(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return u.T2.runKernel(c.EkD,r)}});var f=n(2307),m=n(9326),g=n(897),y=n(4339),b=n(6841),x=n(269),v=n(9580),w=n(1404),k=n(3774),T=n(3909),S=n(9809),N=n(7195),I=n(2302);const C=(0,d.op)({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const o=(0,l.YT)(e,"x","avgPool3d","float32");let i=o,d=!1;4===o.rank&&(d=!0,i=(0,I.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),p.vA(5===i.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`)),p.vA("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),p.vA("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),(0,N.s_)("avgPool3d",r,s);const h={x:i},f={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let m=u.T2.runKernel(c.cS,h,f);return m=(0,S.w)(m,i.dtype),d?(0,I.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var E=n(5030),A=n(5703),$=n(9258),F=n(8968),R=n(7986),D=n(7311);const _=(0,d.op)({basicLSTMCell_:function(e,t,n,r,s,a){const o=(0,l.YT)(e,"forgetBias","basicLSTMCell"),u=(0,l.YT)(t,"lstmKernel","basicLSTMCell"),c=(0,l.YT)(n,"lstmBias","basicLSTMCell"),p=(0,l.YT)(r,"data","basicLSTMCell"),d=(0,l.YT)(s,"c","basicLSTMCell"),h=(0,l.YT)(a,"h","basicLSTMCell"),f=(0,E.x)([p,h],1),m=(0,A.N)(f,u),g=(0,i.W)(m,c),y=g.shape[0],b=g.shape[1]/4,x=[y,b],v=(0,R.d)(g,[0,0],x),w=(0,R.d)(g,[0,b],x),k=(0,R.d)(g,[0,2*b],x),T=(0,R.d)(g,[0,3*b],x),S=(0,i.W)((0,$.l)((0,F.r)(v),(0,D.y)(w)),(0,$.l)(d,(0,F.r)((0,i.W)(o,k))));return[S,(0,$.l)((0,D.y)(S),(0,F.r)(T))]}});var O=n(9772),L=n(9160);const M=(0,d.op)({batchNorm2d_:function(e,t,n,r,s,a){const o=(0,l.YT)(e,"x","batchNorm"),i=(0,l.YT)(t,"mean","batchNorm"),u=(0,l.YT)(n,"variance","batchNorm");let c,d;return null!=s&&(c=(0,l.YT)(s,"scale","batchNorm")),null!=r&&(d=(0,l.YT)(r,"offset","batchNorm")),p.vA(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),p.vA(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),p.vA(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&p.vA(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=d&&p.vA(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`)),(0,L.$)(o,i,u,d,c,a)}});const z=(0,d.op)({batchNorm3d_:function(e,t,n,r,s,a){const o=(0,l.YT)(e,"x","batchNorm"),i=(0,l.YT)(t,"mean","batchNorm"),u=(0,l.YT)(n,"variance","batchNorm");let c,d;return null!=s&&(c=(0,l.YT)(s,"scale","batchNorm")),null!=r&&(d=(0,l.YT)(r,"offset","batchNorm")),p.vA(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),p.vA(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),p.vA(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&p.vA(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=d&&p.vA(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`)),(0,L.$)(o,i,u,d,c,a)}});const P=(0,d.op)({batchNorm4d_:function(e,t,n,r,s,a){const o=(0,l.YT)(e,"x","batchNorm"),i=(0,l.YT)(t,"mean","batchNorm"),u=(0,l.YT)(n,"variance","batchNorm");let c,d;return null!=s&&(c=(0,l.YT)(s,"scale","batchNorm")),null!=r&&(d=(0,l.YT)(r,"offset","batchNorm")),p.vA(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),p.vA(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),p.vA(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&p.vA(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=d&&p.vA(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`)),(0,L.$)(o,i,u,d,c,a)}});const B=(0,d.op)({bincount_:function(e,t,n){const r=(0,l.YT)(e,"x","bincount"),s=(0,l.YT)(t,"weights","bincount");p.vA("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),p.vA(n>=0,(()=>`size must be non-negative, but got ${n}.`)),p.vA(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},o={size:n};return u.T2.runKernel(c.N4F,a,o)}});const W=(0,d.op)({bitwiseAnd_:function(e,t){const n=(0,l.YT)(e,"x","bitwiseAnd"),r=(0,l.YT)(t,"y","bitwiseAnd");if(!(0,p.r1)(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return u.T2.runKernel(c.HNs,s)}});const V=(0,d.op)({broadcastArgs_:function(e,t){const n=(0,l.YT)(e,"s0","broadcastArgs","int32"),r=(0,l.YT)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return u.T2.runKernel(c.vj7,s)}});var U=n(3567),G=n(448),Z=n(855),j=n(6928),H=n(125),K=n(7148);const Y=(0,d.op)({concat1d_:function(e){return(0,E.x)(e,0)}});const Q=(0,d.op)({concat2d_:function(e,t){return(0,E.x)(e,t)}});const q=(0,d.op)({concat3d_:function(e,t){return(0,E.x)(e,t)}});const X=(0,d.op)({concat4d_:function(e,t){return(0,E.x)(e,t)}});var J=n(3701),ee=n(8794),te=n(1106);const ne=(0,d.op)({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const o=(0,l.YT)(e,"x","conv3d"),i=(0,l.YT)(t,"filter","conv3d");let d=o,h=!1;4===o.rank&&(h=!0,d=(0,I.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),p.vA(5===d.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${d.rank}.`)),p.vA(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),p.vA(d.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${d.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),p.vA((0,N.G0)(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),p.vA("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),p.vA((0,N.qk)(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),p.vA((0,N.qk)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f={x:d,filter:i},m={strides:n,pad:r,dataFormat:s,dilations:a},g=u.T2.runKernel(c.A1h,f,m);return h?(0,I.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var re=n(1895);const se=(0,d.op)({conv3dTranspose_:function(e,t,n,r,s){const a=(0,l.YT)(e,"x","conv3dTranspose"),o=(0,l.YT)(t,"filter","conv3dTranspose");return(0,re.c)(n,a,o,r,s)}});var ae=n(9907),oe=n(7451),ie=n(302),ue=n(6808);const ce=(0,d.op)({denseBincount_:function(e,t,n,r=!1){const s=(0,l.YT)(e,"x","denseBincount"),a=(0,l.YT)(t,"weights","denseBincount");p.vA("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),p.vA(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),p.vA(n>=0,(()=>`size must be non-negative, but got ${n}.`)),p.vA(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const o={x:s,weights:a},i={size:n,binaryOutput:r};return u.T2.runKernel(c.wNW,o,i)}});var le=n(1216),pe=n(676);const de=(0,d.op)({diag_:function(e){const t={x:(0,l.YT)(e,"x","diag")};return u.T2.runKernel(c.ORI,t)}});var he=n(3002),fe=n(9359),me=n(919),ge=n(9759);const ye=(0,d.op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,l.YT)(e,`tensors${t}`,"einsum"))),r={equation:e};return u.T2.runKernel(c.Qgm,n,r)}});var be=n(3416);const xe=(0,d.op)({ensureShape_:function(e,t){const n=(0,l.YT)(e,"x","ensureShape","string_or_numeric");if(!(0,p.e_)(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});var ve=n(3020),we=n(5207),ke=n(4881),Te=n(8631),Se=n(8710),Ne=n(517),Ie=n(4826);const Ce=(0,d.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=(0,G.r)([e,t],r),a=e<=t?e:t;for(let i=0;i<a;++i)s.set(1,i,i);const o=(0,I.t)(s.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return(0,Ie.V)((0,Se.U)(o,0),[n[0],1,1]);if(2===n.length)return(0,Ie.V)((0,Se.U)((0,Se.U)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Ie.V)((0,Se.U)((0,Se.U)((0,Se.U)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var Ee=n(6111),Ae=n(5606),$e=n(8991),Fe=n(8229),Re=n(2058),De=n(3337),_e=n(5040),Oe=n(8318),Le=n(3454),Me=n(6300),ze=n(6919),Pe=n(1303),Be=n(6508);function We(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return u.T2.runKernel(c.mnI,{},r)}var Ve=n(3531),Ue=n(4010),Ge=n(2015),Ze=n(5645),je=n(7991),He=n(3330),Ke=n(3789),Ye=n(9881),Qe=n(9879),qe=n(9925);const Xe=2147483648;const Je=(0,d.op)({searchSorted_:function(e,t,n="left"){const r=(0,l.YT)(e,"sortedSequence","searchSorted"),s=(0,l.YT)(t,"values","searchSorted"),a=r.shape[r.shape.length-1],o=s.shape[s.shape.length-1],i=(0,I.t)(r,[-1,a]),d=(0,I.t)(s,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==d.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,p.Ze)(d.shape)>=Xe)throw new Error("values tensor size must less than 2147483648");if(i.shape[1]>=Xe)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${i.shape[1]}`);const h={sortedSequence:i,values:d},f={side:n};return u.T2.runKernel(c.uWl,h,f)}});function et(e,t){return Je(e,t,"left")}var tt=n(1938),nt=n(6999);const rt=(0,d.op)({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const o=(0,l.YT)(e,"x","maxPool3d");let i=o,d=!1;4===o.rank&&(d=!0,i=(0,I.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),p.vA(5===i.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`)),p.vA("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),(0,N.s_)("maxPool3d",r,s);const h={x:i},f={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},m=u.T2.runKernel(c.ySp,h,f);return d?(0,I.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const st=(0,d.op)({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:(0,l.YT)(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},i=u.T2.runKernel(c.TL8,a,o);return{result:i[0],indexes:i[1]}}});var at=n(178),ot=n(2611),it=n(1411),ut=n(259);function ct(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,l.YT)(e,"x","meshgrid",e instanceof ut.qY?e.dtype:"float32");if(void 0===t)return[r];let s=(0,l.YT)(t,"y","meshgrid",t instanceof ut.qY?t.dtype:"float32");const a=(0,p.Ze)(r.shape),o=(0,p.Ze)(s.shape);return"xy"===n?(r=(0,I.t)(r,[1,-1]),s=(0,I.t)(s,[-1,1]),[(0,A.N)((0,it.S)([o,1],r.dtype),r),(0,A.N)(s,(0,it.S)([1,a],s.dtype))]):(r=(0,I.t)(r,[-1,1]),s=(0,I.t)(s,[1,-1]),[(0,A.N)(r,(0,it.S)([1,o],r.dtype)),(0,A.N)((0,it.S)([a,1],s.dtype),s)])}var lt=n(7436),pt=n(2644),dt=n(6567),ht=n(152),ft=n(1078),mt=n(5793),gt=n(7126);const yt=(0,d.op)({moments_:function(e,t=null,n=!1){e=(0,l.YT)(e,"x","moments");const r=(0,p.Y6)(t,e.shape),s=(0,ot.i)(e,r,n);let a=s.shape;n||(a=(0,ft.SM)(s.shape,r));const o=(0,mt.E)((0,gt.j)((0,S.w)(e,"float32"),(0,I.t)(s,a)));return{mean:s,variance:(0,ot.i)(o,r,n)}}});const bt=(0,d.op)({multiRNNCell_:function(e,t,n,r){const s=(0,l.YT)(t,"data","multiRNNCell"),a=(0,l.j1)(n,"c","multiRNNCell"),o=(0,l.j1)(r,"h","multiRNNCell");let i=s;const u=[];for(let l=0;l<e.length;l++){const t=e[l](i,a[l],o[l]);u.push(t[0]),u.push(t[1]),i=t[1]}const c=[],p=[];for(let l=0;l<u.length;l+=2)c.push(u[l]),p.push(u[l+1]);return[c,p]}});const xt=(0,d.op)({multinomial_:function(e,t,n,r=!1){const s=(0,l.YT)(e,"logits","multinomial"),a=s.size,o=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i={logits:1===o?(0,I.t)(s,[1,-1]):s},p={numSamples:t,seed:n,normalized:r},d=u.T2.runKernel(c.WT3,i,p);return 1===o?(0,I.t)(d,[d.size]):d}});var vt=n(6522),wt=n(2118),kt=n(1760),Tt=n(9885);const St=(0,d.op)({outerProduct_:function(e,t){const n=(0,l.YT)(e,"v1","outerProduct"),r=(0,l.YT)(t,"v2","outerProduct");p.vA(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=(0,I.t)(n,[-1,1]),a=(0,I.t)(r,[1,-1]);return(0,A.N)(s,a)}});var Nt=n(5661);const It=(0,d.op)({pad1d_:function(e,t,n=0){return(0,p.vA)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,Nt.e)(e,[t],n)}});const Ct=(0,d.op)({pad2d_:function(e,t,n=0){return(0,p.vA)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.e)(e,t,n)}});const Et=(0,d.op)({pad3d_:function(e,t,n=0){return(0,p.vA)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.e)(e,t,n)}});const At=(0,d.op)({pad4d_:function(e,t,n=0){return(0,p.vA)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.e)(e,t,n)}});var $t=n(7872),Ft=n(6609),Rt=n(4394),Dt=n(5295),_t=n(7771);const Ot=(0,d.op)({raggedGather_:function(e,t,n,r){const s={paramsNestedSplits:e.map(((e,t)=>(0,l.YT)(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:(0,l.YT)(t,"paramsDenseValues","raggedGather"),indices:(0,l.YT)(n,"indices","raggedGather","int32")},a={outputRaggedRank:r},o=u.T2.runKernel(c.oJ2,s,a);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const Lt=(0,d.op)({raggedRange_:function(e,t,n){const r=(0,l.YT)(e,"starts","raggedRange"),s={starts:r,limits:(0,l.YT)(t,"limits","raggedRange",r.dtype),deltas:(0,l.YT)(n,"deltas","raggedRange",r.dtype)},a=u.T2.runKernel(c.CQC,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}});const Mt=(0,d.op)({raggedTensorToTensor_:function(e,t,n,r,s){const a=(0,l.YT)(e,"shape","raggedTensorToTensor","int32"),o=(0,l.YT)(t,"values","raggedTensorToTensor"),i={shape:a,values:o,defaultValue:(0,l.YT)(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:r.map(((e,t)=>(0,l.YT)(e,`tensors${t}`,"raggedTensorToTensor","int32")))},p={rowPartitionTypes:s};return u.T2.runKernel(c.mH5,i,p)}});const zt=(0,d.op)({rand_:function(e,t,n){(0,p.SA)(e);const r=(0,p.Ze)(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let a=0;a<r;a++)s[a]=t();return u.T2.makeTensor(s,e,n)}});var Pt=n(7391);class Bt{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Pt.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Wt{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Pt.alea(s.toString()),this.randn=new Bt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Vt{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Pt.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ut=(0,d.op)({randomGamma_:function(e,t,n=1,r="float32",s){if((0,p.SA)(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new Wt(t,n,r,s),o=(0,G.r)(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}});const Gt=(0,d.op)({randomNormal_:function(e,t=0,n=1,r,s){if((0,p.SA)(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Bt(t,n,r,!1,s),o=(0,G.r)(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}});const Zt=(0,d.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Gt(e,0,1,t,n)}});const jt=(0,d.op)({randomUniform_:function(e,t=0,n=1,r="float32",s){(0,p.SA)(e);const a=(0,G.r)(e,r),o=new Vt(t,n,null,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}});const Ht=(0,d.op)({randomUniformInt_:function(e,t,n,r){return jt(e,t,n,"int32",r)}});function Kt(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return u.T2.runKernel(c.Q6t,{},s)}var Yt=n(1902),Qt=n(9870),qt=n(112),Xt=n(3732),Jt=n(3262);const en=(0,d.op)({reverse1d_:function(e){const t=(0,l.YT)(e,"x","reverse");return p.vA(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,Jt.B)(t,0)}});const tn=(0,d.op)({reverse2d_:function(e,t){const n=(0,l.YT)(e,"x","reverse");return p.vA(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,Jt.B)(n,t)}});const nn=(0,d.op)({reverse3d_:function(e,t){const n=(0,l.YT)(e,"x","reverse");return p.vA(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,Jt.B)(n,t)}});const rn=(0,d.op)({reverse4d_:function(e,t){const n=(0,l.YT)(e,"x","reverse");return p.vA(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,Jt.B)(n,t)}});var sn=n(5912),an=n(7820),on=n(5702),un=n(6325),cn=n(9986);const ln=async function(e,t){const n=(0,l.YT)(e,"x","setdiff1d"),r=(0,l.YT)(t,"y","setdiff1d");p.vA(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),p.vA(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),p.vA(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),o=new Set(a);let i=0;for(let l=0;l<s.length;l++)o.has(s[l])||i++;const u=new ut.yl([i],n.dtype),c=new ut.yl([i],"int32");for(let l=0,p=0;l<s.length;l++)o.has(s[l])||(u.values[p]=s[l],c.values[p]=l,p++);return[u.toTensor(),c.toTensor()]};var pn=n(1115),dn=n(3726),hn=n(8276);const fn=(0,d.op)({slice1d_:function(e,t,n){const r=(0,l.YT)(e,"x","slice1d");return p.vA(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,R.d)(r,[t],[n])}});const mn=(0,d.op)({slice2d_:function(e,t,n){const r=(0,l.YT)(e,"x","slice2d");return p.vA(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,R.d)(r,t,n)}});const gn=(0,d.op)({slice3d_:function(e,t,n){const r=(0,l.YT)(e,"x","slice3d");return p.vA(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,R.d)(r,t,n)}});const yn=(0,d.op)({slice4d_:function(e,t,n){const r=(0,l.YT)(e,"x","slice4d");return p.vA(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,R.d)(r,t,n)}});var bn=n(6346),xn=n(6030),vn=n(776),wn=n(1361),kn=n(3108),Tn=n(2292),Sn=n(8775),Nn=n(6512),In=n(9348),Cn=n(3427),En=n(5932),An=n(4268),$n=n(8319),Fn=n(5894),Rn=n(3791),Dn=n(7823),_n=n(4027),On=n(9171);function Ln(e,t){(0,p.HO)(e);const n=(0,l.MZ)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,On.Q)(e,null,n,t)}function Mn(e,t,n){if((0,p.HO)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,l.MZ)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,On.Q)(e,t,r,n)}var zn=n(2768);function Pn(e,t,n){if((0,p.HO)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,l.MZ)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,On.Q)(e,t,r,n)}function Bn(e,t,n){if((0,p.HO)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,l.MZ)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,On.Q)(e,t,r,n)}function Wn(e,t,n){if((0,p.HO)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,l.MZ)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,On.Q)(e,t,r,n)}var Vn=n(6170);const Un=(0,d.op)({tensorScatterUpdate_:function(e,t,n){const r=(0,l.YT)(e,"tensor","tensorScatterupdate"),s=(0,l.YT)(t,"indices","tensorScatterupdate","int32"),a=(0,l.YT)(n,"updates","tensorScatterupdate");if(Vn.TT(a,s,r.shape),r.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${a.dtype}.`);const o={tensor:r,indices:s,updates:a};return u.T2.runKernel(c.X4r,o,{})}});var Gn=n(1190);const Zn=(0,d.op)({truncatedNormal_:function(e,t=0,n=1,r,s){if((0,p.SA)(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Bt(t,n,r,!0,s),o=(0,G.r)(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}});var jn=n(3937),Hn=n(7706),Kn=n(7261);function Yn(e,t){return Je(e,t,"right")}function Qn(e,t=!0,n,r){return u.T2.makeVariable(e,t,n,r)}var qn=n(2151),Xn=n(4411);const Jn=async function(e){const t=(0,l.YT)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,Xn.Y)(t.shape,n);return e!==t&&t.dispose(),r};var er=n(2855),tr=n(5537);const nr=async function(e,t,n){const r=(0,l.YT)(e,"tensor","boolMask"),s=(0,l.YT)(t,"mask","boolMask","bool"),a=null==n?0:n,o=s.rank,i=r.shape;p.vA(o>0,(()=>"mask cannot be scalar")),p.O3(i.slice(a,a+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let l=a;l<a+o;l++)u*=i[l];const c=i.slice(0,a).concat([u],i.slice(a+o)),d=(0,I.t)(r,c),h=(0,I.t)(s,[-1]),f=await Jn(h),m=(0,En.r)(f,[1]),g=(0,Fe.k)(d,m,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),m.dispose(),d.dispose(),h.dispose(),f.dispose(),g};var rr=n(7703),sr=n(2596),ar=n(565);const or=(0,d.op)({movingAverage_:function(e,t,n,r,s=!0){const a=(0,l.YT)(e,"v","movingAverage"),o=(0,l.YT)(t,"x","movingAverage"),u=(0,l.YT)(n,"decay","movingAverage");(0,ar.assertTypesMatch)(a,o),p.vA(p.r1(a.shape,o.shape),(()=>"Shape mismatch in v and x"));const c=(0,on.d)(1),d=(0,gt.j)(c,u);let h=(0,$.l)((0,gt.j)(o,a),d);if(s){p.vA(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,l.YT)(r,"step","movingAverage");h=(0,fe.y)(h,(0,gt.j)(c,(0,Ft.n)(u,e)))}return(0,i.W)(a,h)}});const ir=(0,d.op)({scatterND_:function(e,t,n){(0,p.SA)(n);const r=(0,l.YT)(e,"indices","scatterND","int32"),s=(0,l.YT)(t,"updates","scatterND");Vn.TT(s,r,n);const a={indices:r,updates:s},o={shape:n};return u.T2.runKernel(c.pJc,a,o)}});const ur=(0,d.op)({sparseToDense_:function(e,t,n,r=0){(0,p.SA)(n);const s=(0,l.YT)(e,"sparseIndices","sparseToDense","int32"),a=(0,l.YT)(t,"sparseValues","sparseToDense","string_or_numeric"),o=(0,l.YT)(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,o);const i={sparseIndices:s,sparseValues:a,defaultValue:o},d={outputShape:n};return u.T2.runKernel(c.jgd,i,d)}});const cr=(0,d.op)({gatherND_:function(e,t){const n=(0,l.YT)(t,"indices","gatherND","int32"),r={params:(0,l.YT)(e,"x","gatherND","string_or_numeric"),indices:n};return u.T2.runKernel(c.O4G,r)}});const lr=(0,d.op)({dropout_:function(e,t,n,r){const s=(0,l.YT)(e,"x","dropout");if(p.vA("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),p.vA(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ut.qY?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(p.r1(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),o=1-t,u=(0,fe.y)((0,Ae.R)((0,i.W)(jt(a,0,1,"float32",r),o)),o);return(0,$.l)(s,u)}});function pr(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function dr(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const o=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(o)}return Ln(s,"float32")}const hr=async function(e,t,n=1){const r=(0,l.YT)(e,"predictions","inTopK"),s=(0,l.YT)(t,"targets","inTopK");(0,p.vA)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,p.vA)(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),(0,p.O3)(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];(0,p.vA)(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const o=await r.data(),i=await s.data(),[u,c]=[o.length/a,a],d=(0,p.ce)("bool",u);for(let l=0;l<u;l++){const e=l*c,t=o.subarray(e,e+c),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),d[l]=0;for(let s=0;s<n;s++)if(r[s].index===i[l]){d[l]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),(0,_n.O)(d,s.shape,"bool")};var fr=n(1830),mr=n(2198),gr=n(5248),yr=n(252),br=n(8646);const xr=(0,d.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:d,activation:h="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(h=h||"linear",!1===(0,br.zE)(u.T2.state.gradientDepth,h)){p.vA("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let u=(0,ee.X)(e,t,n,r,s,a,o);return null!=d&&(u=(0,i.W)(u,d)),(0,br.f2)(u,h,f,m)}const g=(0,l.YT)(e,"x","conv2d","float32"),y=(0,l.YT)(t,"filter","conv2d","float32");let b=g,x=!1;3===g.rank&&(x=!0,b=(0,I.t)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),p.vA(4===b.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${b.rank}.`)),p.vA(4===y.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${y.rank}.`)),N.s_("fused conv2d",r,o);const v="NHWC"===s?b.shape[3]:b.shape[1];p.vA(y.shape[2]===v,(()=>`Error in conv2d: depth of input (${v}) must match input depth for filter ${y.shape[2]}.`)),p.vA(N.G0(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const w=N.uf(b.shape,y.shape,n,a,r,o);let k,T;if(null!=d&&(k=(0,l.YT)(d,"bias","fused conv2d"),[k]=(0,ar.makeTypesMatch)(k,g),"NHWC"===s?mr.assertAndGetBroadcastShape(w.outShape,k.shape):(p.vA(k.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${k.shape.length}.`)),p.vA(0===k.shape.length||k.shape[0]===w.outChannels||1===k.shape[0],(()=>`Error in fused conv2d: bias shape (${k.shape}) is not compatible with the number of output channels (${w.outChannels})`)))),null!=f){const e=f.shape;if(p.vA(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)p.vA(1===e[0]||e[0]===w.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${w.outChannels}).`));else if(3===e.length)try{mr.assertAndGetBroadcastShape(e,w.outShape)}catch(A){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${w.outShape}).`;throw Error(t)}T=(0,l.YT)(f,"prelu weights","fused conv2d")}const S=(e,t)=>{p.vA("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[o,i,u,c]=t,l=(0,br.XB)(e,u,h);p.vA(N.Dh(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const d=[(0,yr.v)(i.shape,l,o,n,r),(0,gr.H)(i,l,o.shape,n,r)];if(null!=c){const e=(0,br.Do)(c,l);d.push(e)}return d},C={x:b,filter:y,bias:k,preluActivationWeights:T},E={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:h,leakyreluAlpha:m};if(null==d){const e=(0,fr._X)(((e,t,n)=>{let r=u.T2.runKernel(c.aAr,C,E);return n([t,e,r]),x&&(r=(0,I.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:S}}));return e(b,y)}{const e=(0,fr._X)(((e,t,n,r)=>{let s=u.T2.runKernel(c.aAr,C,E);return r([t,e,s,n]),x&&(s=(0,I.t)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:S}}));return e(b,y,k)}}});var vr=n(1890),wr=n(3134);const kr=(0,d.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:d,activation:h="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(!1===(0,br.zE)(u.T2.state.gradientDepth,h)){let u=(0,pe.G)(e,t,n,r,s,a,o);return null!=d&&(u=(0,i.W)(u,d)),(0,br.f2)(u,h,f,m)}const g=(0,l.YT)(e,"x","depthwiseConv2d","float32"),y=(0,l.YT)(t,"filter","depthwiseConv2d","float32");let b=g,x=!1;3===g.rank&&(x=!0,b=(0,I.t)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),p.vA(4===b.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${b.rank}.`)),p.vA(4===y.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${y.rank}.`)),p.vA(b.shape[3]===y.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${b.shape[3]}) must match the inChannels dimension in filter ${y.shape[2]}.`)),null==a&&(a=[1,1]),p.vA(N.G0(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),N.s_("fused depthwiseConv2d",r,o);const v=N.uf(b.shape,y.shape,n,a,r,o,!0);let w,k;null!=d&&(w=(0,l.YT)(d,"bias","fused conv2d"),[w]=(0,ar.makeTypesMatch)(w,g),mr.assertAndGetBroadcastShape(v.outShape,w.shape)),null!=f&&(k=(0,l.YT)(f,"prelu weights","fused depthwiseConv2d"));const T=(e,t)=>{p.vA(N.Dh(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,i,u,c]=t,l=(0,br.XB)(e,u,h),d=(0,wr.l)(i.shape,l,s,n,r,a,o),f=(0,vr.x)(i,l,s.shape,n,r,a,o);if(null!=c){return[d,f,(0,br.Do)(w,l)]}return[d,f]},S={x:b,filter:y,bias:w,preluActivationWeights:k},C={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:h,leakyreluAlpha:m};if(null==d){const e=(0,fr._X)(((e,t,n)=>{let r=u.T2.runKernel(c.T7M,S,C);return n([t,e,r]),x&&(r=(0,I.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:T}}));return e(b,y)}{const e=(0,fr._X)(((e,t,n,r)=>{let s=u.T2.runKernel(c.T7M,S,C);return r([t,e,s,n]),x&&(s=(0,I.t)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:T}}));return e(b,y,w)}}});const Tr=(0,d.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:d=.2}){if(!1===(0,br.zE)(u.T2.state.gradientDepth,a)){let u=(0,A.N)(e,t,n,r);return null!=s&&(u=(0,i.W)(u,s)),(0,br.f2)(u,a,o,d)}let h=(0,l.YT)(e,"a","fused matMul"),f=(0,l.YT)(t,"b","fused matMul");[h,f]=(0,ar.makeTypesMatch)(h,f);const m=n?h.shape[h.rank-2]:h.shape[h.rank-1],g=r?f.shape[f.rank-1]:f.shape[f.rank-2],y=n?h.shape[h.rank-1]:h.shape[h.rank-2],b=r?f.shape[f.rank-2]:f.shape[f.rank-1],x=h.shape.slice(0,-2),v=f.shape.slice(0,-2),w=p.Ze(x),k=p.Ze(v);p.vA(m===g,(()=>`Error in fused matMul: inner shapes (${m}) and (${g}) of Tensors with shapes ${h.shape} and ${f.shape} and transposeA=${n} and transposeB=${r} must match.`));const T=mr.assertAndGetBroadcastShape(h.shape.slice(0,-2),f.shape.slice(0,-2)).concat([y,b]),S=n?(0,I.t)(h,[w,m,y]):(0,I.t)(h,[w,y,m]),N=r?(0,I.t)(f,[k,b,g]):(0,I.t)(f,[k,g,b]);let C,E;null!=s&&(C=(0,l.YT)(s,"bias","fused matMul"),[C]=(0,ar.makeTypesMatch)(C,h),mr.assertAndGetBroadcastShape(T,C.shape)),null!=o&&(E=(0,l.YT)(o,"prelu weights","fused matMul"));const $=(e,t)=>{const[o,i,u,c]=t,l=(0,br.XB)((0,I.t)(e,u.shape),u,a);let p,d;if(n||r?!n&&r?(p=(0,A.N)(l,i,!1,!1),d=(0,A.N)(l,o,!0,!1)):n&&!r?(p=(0,A.N)(i,l,!1,!0),d=(0,A.N)(o,l,!1,!1)):(p=(0,A.N)(i,l,!0,!0),d=(0,A.N)(l,o,!0,!0)):(p=(0,A.N)(l,i,!1,!0),d=(0,A.N)(o,l,!0,!1)),null!=s){return[p,d,(0,br.Do)(c,l)]}return[p,d]},F={a:S,b:N,bias:C,preluActivationWeights:E},R={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:d};if(null==s){const e=(0,fr._X)(((e,t,n)=>{const r=u.T2.runKernel(c.Dr,F,R);return n([e,t,r]),{value:(0,I.t)(r,T),gradFunc:$}}));return e(S,N)}{const e=(0,fr._X)(((e,t,n,r)=>{const s=u.T2.runKernel(c.Dr,F,R);return r([e,t,s,n]),{value:(0,I.t)(s,T),gradFunc:$}}));return e(S,N,C)}}});const Sr=(0,d.op)({hammingWindow_:function(e){return dr(e,.54,.46)}});const Nr=(0,d.op)({hannWindow_:function(e){return dr(e,.5,.5)}});const Ir=(0,d.op)({frame_:function(e,t,n,r=!1,s=0){let a=0;const o=[];for(;a+t<=e.size;)o.push((0,R.d)(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,i=(0,E.x)([(0,R.d)(e,a,t-r),(0,Ee.G)([r],s)]);o.push(i),a+=n}return 0===o.length?Mn([],[0,t]):(0,I.t)((0,E.x)(o),[o.length,t])}});const Cr=(0,d.op)({stft_:function(e,t,n,r,s=Nr){null==r&&(r=pr(t));const a=Ir(e,t,n),o=(0,$.l)(a,s(t));return(0,Sn.z)(o,r)}});const Er=(0,d.op)({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const o=(0,l.YT)(e,"image","cropAndResize"),i=(0,l.YT)(t,"boxes","cropAndResize","float32"),d=(0,l.YT)(n,"boxInd","cropAndResize","int32"),h=i.shape[0];p.vA(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),p.vA(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${h},4] but had shape ${i.shape}.`)),p.vA(1===d.rank&&d.shape[0]===h,(()=>`Error in cropAndResize: boxInd must be have size [${h}] but had shape ${i.shape}.`)),p.vA(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),p.vA(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),p.vA("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const f={image:o,boxes:i,boxInd:d},m={method:s,extrapolationValue:a,cropSize:r};return u.T2.runKernel(c.MRQ,f,m)}});const Ar=(0,d.op)({flipLeftRight_:function(e){const t=(0,l.YT)(e,"image","flipLeftRight","float32");p.vA(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return u.T2.runKernel(c.BxF,n,{})}});const $r=(0,d.op)({grayscaleToRGB_:function(e){const t=(0,l.YT)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];p.vA(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),p.vA(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,(0,Ie.V)(t,s)}});const Fr=(0,d.op)({rgbToGrayscale_:function(e){const t=(0,l.YT)(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];p.vA(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),p.vA(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const s=t.dtype,a=(0,S.w)(t,"float32"),o=Ln([.2989,.587,.114]);let i;switch(t.rank){case 2:i=ye("ij,j->i",a,o);break;case 3:i=ye("ijk,k->ij",a,o);break;case 4:i=ye("ijkl,l->ijk",a,o);break;case 5:i=ye("ijklm,m->ijkl",a,o);break;case 6:i=ye("ijklmn,n->ijklm",a,o);break;default:throw new Error("Not a valid tensor rank.")}return i=(0,Se.U)(i,-1),(0,S.w)(i,s)}});const Rr=(0,d.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const s=(0,l.YT)(e,"image","rotateWithOffset","float32");p.vA(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},o={radians:t,fillValue:n,center:r};return u.T2.runKernel(c.BK4,a,o)}});function Dr(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=e.shape[0];return n=Math.min(n,o),p.vA(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),p.vA(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),p.vA(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),p.vA(1===t.rank,(()=>"scores must be a 1D tensor")),p.vA(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),p.vA(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const _r=(0,d.op)({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=(0,l.YT)(e,"boxes","nonMaxSuppression","float32"),o=(0,l.YT)(t,"scores","nonMaxSuppression","float32"),i=Dr(a,o,n,r,s),p={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:s=i.scoreThreshold};return u.T2.runKernel(c.SDM,{boxes:a,scores:o},p)}});var Or=n(8360);const Lr=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=(0,l.YT)(e,"boxes","nonMaxSuppressionAsync"),o=(0,l.YT)(t,"scores","nonMaxSuppressionAsync"),i=Dr(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u=await Promise.all([a.data(),o.data()]),c=u[0],p=u[1],{selectedIndices:d}=(0,Or.c7)(c,p,n,r,s);return a!==e&&a.dispose(),o!==t&&o.dispose(),Ln(d,"int32")};const Mr=(0,d.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=(0,l.YT)(e,"boxes","nonMaxSuppression"),i=(0,l.YT)(t,"scores","nonMaxSuppression"),p=Dr(o,i,n,r,s,a),d={boxes:o,scores:i},h={maxOutputSize:n=p.maxOutputSize,iouThreshold:r=p.iouThreshold,scoreThreshold:s=p.scoreThreshold,softNmsSigma:a=p.softNmsSigma},f=u.T2.runKernel(c.e0f,d,h);return{selectedIndices:f[0],selectedScores:f[1]}}});const zr=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=(0,l.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,l.YT)(t,"scores","nonMaxSuppressionAsync"),u=Dr(o,i,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const c=await Promise.all([o.data(),i.data()]),p=c[0],d=c[1],{selectedIndices:h,selectedScores:f}=(0,Or.ut)(p,d,n,r,s,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Ln(h,"int32"),selectedScores:Ln(f)}};const Pr=(0,d.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=(0,l.YT)(e,"boxes","nonMaxSuppression"),i=(0,l.YT)(t,"scores","nonMaxSuppression"),p=Dr(o,i,n,r,s,null),d={boxes:o,scores:i},h={maxOutputSize:p.maxOutputSize,iouThreshold:p.iouThreshold,scoreThreshold:p.scoreThreshold,padToMaxOutputSize:a},f=u.T2.runKernel(c.Zl4,d,h);return{selectedIndices:f[0],validOutputs:f[1]}}});const Br=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=(0,l.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,l.YT)(t,"scores","nonMaxSuppressionAsync"),u=Dr(o,i,n,r,s,null),c=u.maxOutputSize,p=u.iouThreshold,d=u.scoreThreshold,[h,f]=await Promise.all([o.data(),i.data()]),{selectedIndices:m,validOutputs:g}=(0,Or.ZS)(h,f,c,p,d,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Ln(m,"int32"),validOutputs:(0,on.d)(g,"int32")}};var Wr=n(4711),Vr=n(2954);const Ur=(0,d.op)({threshold_:function(e,t="binary",n=!1,r=.5){const s=(0,l.YT)(e,"image","threshold"),a=s.shape[0]*s.shape[1];let o,u,c,d,h=(0,$.l)(Ln([r]),255);if(p.vA(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),p.vA(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),p.vA("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),p.vA("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[o,u,c]=(0,Nn.l)(s,[1,1,1],-1);const e=(0,$.l)(o,.2989),t=(0,$.l)(u,.587),n=(0,$.l)(c,.114);d=(0,i.W)((0,i.W)(e,t),n)}else d=e;if("otsu"===t){h=function(e,t){let n,r,s,a,o,u,c=Ln([-1]),l=Ln([0]),p=Ln([0]);for(let d=0;d<e.size-1;d++){n=(0,R.d)(e,0,d+1),r=(0,R.d)(e,d+1),o=(0,fe.y)((0,Rn.c)(n),t),u=(0,fe.y)((0,Rn.c)(r),t);const h=(0,Rn.c)((0,$.l)(n,Kt(0,n.size)));s=(0,fe.y)(h,(0,Rn.c)(n));const f=(0,Ee.G)(r.shape,n.size),m=(0,i.W)(Kt(0,r.size),f),g=(0,$.l)(r,m);a=(0,fe.y)((0,Rn.c)(g),(0,Rn.c)(r));const y=(0,gt.j)(s,a),b=(0,gt.j)(s,a),x=(0,$.l)(o,u);p=(0,$.l)((0,$.l)(x,y),b);const v=(0,Re.r)(p,l);l=(0,qn._)(v,p,l),c=(0,qn._)(v,Ln([d]),c)}return c}(B((0,S.w)((0,sn.L)(d),"int32"),(0,_n.O)([]),256),a)}const f=n?(0,Be.I)(d,h):(0,Re.r)(d,h);return(0,S.w)((0,$.l)(f,255),"int32")}});const Gr=(0,d.op)({transform_:function(e,t,n="nearest",r="constant",s=0,a){const o=(0,l.YT)(e,"image","transform","float32"),i=(0,l.YT)(t,"transforms","transform","float32");p.vA(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),p.vA(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),p.vA(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const d={image:o,transforms:i},h={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return u.T2.runKernel(c.dLy,d,h)}});const Zr=(0,d.op)({bandPart_:function(e,t,n){const r=(0,l.YT)(e,"a","bandPart");(0,p.vA)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,o]=r.shape.slice(-2);let i,u;"number"==typeof t?((0,p.vA)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,p.vA)(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),i=(0,l.YT)(t<0?a:t,"numLower","bandPart")):((0,p.vA)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=(0,qn._)((0,Pe.M)(t,0),a,(0,pt.B)(t,a))),"number"==typeof n?((0,p.vA)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),(0,p.vA)(n<=o,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`)),u=(0,l.YT)(n<0?o:n,"numUpper","bandPart")):((0,p.vA)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=(0,qn._)((0,Pe.M)(n,0),o,(0,pt.B)(n,o)));const c=(0,I.t)(Kt(0,a,1,"int32"),[-1,1]),d=Kt(0,o,1,"int32"),h=(0,gt.j)(c,d),f=(0,Ke.n)((0,Be.I)(h,i),(0,De.D)(h,(0,vt.H)(u))),m=(0,er.U)([a,o],r.dtype);return(0,I.t)((0,An.t)((0,Kn.K)((0,I.t)(r,[-1,a,o])).map((e=>(0,qn._)(f,e,m)))),s)}});const jr=(0,d.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,p.vA)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,p.vA)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,Nn.l)(e,e.shape[0],0).map((e=>(0,En.r)(e,[0])));(0,p.vA)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(u.T2.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=(0,$.l)((0,Rn.c)((0,$.l)(n[t],e)),n[t]);e=(0,gt.j)(e,r)}return(0,fe.y)(e,(0,sr.x)(e,"euclidean"))})));return t?(0,An.t)(n,0):n}});var Hr=n(7668);function Kr(e,t=!1){return u.T2.tidy((()=>{(0,p.vA)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Ce(n),a=(0,H.o)(e);const o=Mn([[1]],[1,1]);let i=(0,H.o)(o);const c=n>=r?r:n;for(let e=0;e<c;++e){const t=a,c=i,l=s;[i,a,s]=u.T2.tidy((()=>{const t=(0,R.d)(a,[e,e],[n-e,1]),u=(0,sr.x)(t),c=(0,R.d)(a,[e,e],[1,1]),l=(0,qn._)((0,Re.r)(c,0),Mn([[-1]]),Mn([[1]])),p=(0,gt.j)(c,(0,$.l)(l,u)),d=(0,fe.y)(t,p);i=1===d.shape[0]?(0,H.o)(o):(0,E.x)([o,(0,R.d)(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const h=(0,vt.H)((0,fe.y)((0,A.N)(l,p),u)),f=(0,R.d)(a,[e,0],[n-e,r]),m=(0,$.l)(h,i),g=(0,rr.m)(i);if(0===e)a=(0,gt.j)(f,(0,A.N)(m,(0,A.N)(g,f)));else{const t=(0,gt.j)(f,(0,A.N)(m,(0,A.N)(g,f)));a=(0,E.x)([(0,R.d)(a,[0,0],[e,r]),t],0)}const y=(0,rr.m)(m),b=(0,R.d)(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=(0,gt.j)(b,(0,A.N)((0,A.N)(b,i),y));else{const t=(0,gt.j)(b,(0,A.N)((0,A.N)(b,i),y));s=(0,E.x)([(0,R.d)(s,[0,0],[n,e]),t],1)}return[i,a,s]})),(0,Hr.AS)([t,c,l])}return!t&&n>r&&(s=(0,R.d)(s,[0,0],[n,r]),a=(0,R.d)(a,[0,0],[r,r])),[s,a]}))}const Yr=(0,d.op)({qr_:function(e,t=!1){if((0,p.vA)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Kr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,Kn.K)((0,I.t)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach((e=>{const[n,r]=Kr(e,t);s.push(n),a.push(r)}));return[(0,I.t)((0,An.t)(s,0),e.shape),(0,I.t)((0,An.t)(a,0),e.shape)]}}});var Qr;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Qr||(Qr={}));const qr=(0,d.op)({computeWeightedLoss_:function(e,t,n=Qr.SUM_BY_NONZERO_WEIGHTS){const r=(0,l.YT)(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=(0,l.YT)(t,"weights","computeWeightedLoss"));const a=null==s?r:(0,$.l)(r,s);if(n===Qr.NONE)return a;if(n===Qr.SUM)return(0,Rn.c)(a);if(n===Qr.MEAN){if(null==s)return(0,ot.i)(a);{const e=r.size/s.size,t=(0,fe.y)((0,Rn.c)(a),(0,Rn.c)(s));return e>1?(0,fe.y)(t,(0,on.d)(e)):t}}if(n===Qr.SUM_BY_NONZERO_WEIGHTS){if(null==s)return(0,fe.y)((0,Rn.c)(a),(0,on.d)(r.size));{const e=(0,$.l)(s,(0,it.S)(r.shape)),t=(0,S.w)((0,Rn.c)((0,wt.E)(e,(0,on.d)(0))),"float32");return(0,fe.y)((0,Rn.c)(a),t)}}throw Error(`Unknown reduction: ${n}`)}});const Xr=(0,d.op)({absoluteDifference_:function(e,t,n,r=Qr.SUM_BY_NONZERO_WEIGHTS){const a=(0,l.YT)(e,"labels","absoluteDifference"),o=(0,l.YT)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,l.YT)(n,"weights","absoluteDifference")),(0,p.O3)(a.shape,o.shape,"Error in absoluteDifference: ");const u=(0,s.t)((0,gt.j)(a,o));return qr(u,i,r)}});const Jr=(0,d.op)({cosineDistance_:function(e,t,n,r,s=Qr.SUM_BY_NONZERO_WEIGHTS){const a=(0,l.YT)(e,"labels","cosineDistance"),o=(0,l.YT)(t,"predictions","cosineDistance");let i=null;null!=r&&(i=(0,l.YT)(r,"weights","cosineDistance")),(0,p.O3)(a.shape,o.shape,"Error in cosineDistance: ");const u=(0,on.d)(1),c=(0,gt.j)(u,(0,Rn.c)((0,$.l)(a,o),n,!0));return qr(c,i,s)}});const es=(0,d.op)({hingeLoss_:function(e,t,n,r=Qr.SUM_BY_NONZERO_WEIGHTS){let s=(0,l.YT)(e,"labels","hingeLoss");const a=(0,l.YT)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,l.YT)(n,"weights","hingeLoss")),(0,p.O3)(s.shape,a.shape,"Error in hingeLoss: ");const i=(0,on.d)(1);s=(0,gt.j)((0,$.l)((0,on.d)(2),s),i);const u=(0,qt.V)((0,gt.j)(i,(0,$.l)(s,a)));return qr(u,o,r)}});const ts=(0,d.op)({huberLoss_:function(e,t,n,r=1,a=Qr.SUM_BY_NONZERO_WEIGHTS){const o=(0,l.YT)(e,"labels","huberLoss"),u=(0,l.YT)(t,"predictions","huberLoss");let c=null;null!=n&&(c=(0,l.YT)(n,"weights","huberLoss")),(0,p.O3)(o.shape,u.shape,"Error in huberLoss: ");const d=(0,on.d)(r),h=(0,s.t)((0,gt.j)(u,o)),f=(0,pt.B)(h,d),m=(0,gt.j)(h,f),g=(0,i.W)((0,$.l)((0,on.d)(.5),(0,mt.E)(f)),(0,$.l)(d,m));return qr(g,c,a)}});const ns=(0,d.op)({logLoss_:function(e,t,n,r=1e-7,s=Qr.SUM_BY_NONZERO_WEIGHTS){const a=(0,l.YT)(e,"labels","logLoss"),o=(0,l.YT)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,l.YT)(n,"weights","logLoss")),(0,p.O3)(a.shape,o.shape,"Error in logLoss: ");const c=(0,on.d)(1),d=(0,on.d)(r),h=(0,vt.H)((0,$.l)(a,(0,Ue.R)((0,i.W)(o,d)))),f=(0,$.l)((0,gt.j)(c,a),(0,Ue.R)((0,i.W)((0,gt.j)(c,o),d))),m=(0,gt.j)(h,f);return qr(m,u,s)}});const rs=(0,d.op)({meanSquaredError_:function(e,t,n,r=Qr.SUM_BY_NONZERO_WEIGHTS){const s=(0,l.YT)(e,"labels","meanSquaredError"),a=(0,l.YT)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,l.YT)(n,"weights","meanSquaredError")),(0,p.O3)(s.shape,a.shape,"Error in meanSquaredError: ");const i=(0,Cn.P)(s,a);return qr(i,o,r)}});const ss=(0,d.op)({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Qr.SUM_BY_NONZERO_WEIGHTS){let o=(0,l.YT)(e,"multiClassLabels","sigmoidCrossEntropy");const u=(0,l.YT)(t,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=(0,l.YT)(n,"weights","sigmoidCrossEntropy")),(0,p.O3)(o.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=(0,on.d)(r),t=(0,on.d)(1),n=(0,on.d)(.5);o=(0,i.W)((0,$.l)(o,(0,gt.j)(t,e)),(0,$.l)(n,e))}const d=function(e,t){const n=(0,l.YT)(e,"labels","sigmoidCrossEntropyWithLogits"),r=(0,l.YT)(t,"logits","sigmoidCrossEntropyWithLogits");(0,p.O3)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=(0,qt.V)(r),o=(0,$.l)(r,n),u=(0,Ge.K)((0,Te.o)((0,vt.H)((0,s.t)(r))));return(0,i.W)((0,gt.j)(a,o),u)}(o,u);return qr(d,c,a)}});const as=(0,d.op)({softmaxCrossEntropy_:function(e,t,n,r=0,s=Qr.SUM_BY_NONZERO_WEIGHTS){let a=(0,l.YT)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,l.YT)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,l.YT)(n,"weights","softmaxCrossEntropy")),(0,p.O3)(a.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,on.d)(r),t=(0,on.d)(1),n=(0,on.d)(a.shape[1]);a=(0,i.W)((0,$.l)(a,(0,gt.j)(t,e)),(0,fe.y)(e,n))}const c=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(0,fr._X)(((e,t,r)=>{const s=(0,He.V)(t,[n],!0),a=(0,gt.j)((0,S.w)(t,"float32"),s);r([e,a]);const o=(0,vt.H)((0,$.l)(a,e));return{value:(0,Rn.c)(o,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=(0,ft.SM)(e.shape,[n]);return[(0,$.l)((0,I.t)(e,a),(0,gt.j)((0,S.w)(r,"float32"),(0,Te.o)(s))),(0,$.l)((0,I.t)(e,a),(0,gt.j)((0,Te.o)(s),(0,S.w)(r,"float32")))]}}}));return r(e,t)}(a,o);return qr(c,u,s)}});const os=(0,d.op)({sparseFillEmptyRows_:function(e,t,n,r){const s=(0,l.YT)(e,"indices","sparseFillEmptyRows","int32"),a=(0,l.YT)(t,"values","sparseFillEmptyRows"),o=(0,l.YT)(n,"denseShape","sparseFillEmptyRows","int32"),i=(0,l.YT)(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const p={indices:s,values:a,denseShape:o,defaultValue:i},d=u.T2.runKernel(c.C8s,p);return{outputIndices:d[0],outputValues:d[1],emptyRowIndicator:d[2],reverseIndexMap:d[3]}}});const is=(0,d.op)({sparseReshape_:function(e,t,n){const r=(0,l.YT)(e,"inputIndices","sparseReshape","int32"),s=(0,l.YT)(t,"inputShape","sparseReshape","int32"),a=(0,l.YT)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const o={inputIndices:r,inputShape:s,newShape:a},i=u.T2.runKernel(c.BoJ,o);return{outputIndices:i[0],outputShape:i[1]}}});const us=(0,d.op)({sparseSegmentMean_:function(e,t,n){const r=(0,l.YT)(e,"data","sparseSegmentMean"),s=(0,l.YT)(t,"indices","sparseSegmentMean","int32"),a=(0,l.YT)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const o={data:r,indices:s,segmentIds:a};return u.T2.runKernel(c.L6G,o)}});const cs=(0,d.op)({sparseSegmentSum_:function(e,t,n){const r=(0,l.YT)(e,"data","sparseSegmentSum"),s=(0,l.YT)(t,"indices","sparseSegmentSum","int32"),a=(0,l.YT)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const o={data:r,indices:s,segmentIds:a};return u.T2.runKernel(c.DvZ,o)}});const ls=(0,d.op)({stringNGrams_:function(e,t,n,r,s,a,o,i){const p=(0,l.YT)(e,"data","stringNGrams","string");if("string"!==p.dtype)throw new Error("Data must be of datatype string");if(1!==p.shape.length)throw new Error(`Data must be a vector, saw: ${p.shape}`);const d=(0,l.YT)(t,"dataSplits","stringNGrams");if("int32"!==d.dtype)throw new Error("Data splits must be of datatype int32");const h={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:o,preserveShortSequences:i},f={data:p,dataSplits:d},m=u.T2.runKernel(c.YAb,f,h);return{nGrams:m[0],nGramsSplits:m[1]}}});const ps=(0,d.op)({stringSplit_:function(e,t,n=!0){const r=(0,l.YT)(e,"input","stringSplit","string"),s=(0,l.YT)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},o={input:r,delimiter:s},i=u.T2.runKernel(c.iW0,o,a);return{indices:i[0],values:i[1],shape:i[2]}}});const ds=(0,d.op)({stringToHashBucketFast_:function(e,t){const n=(0,l.YT)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return u.T2.runKernel(c.$jE,s,r)}});const hs=(0,d.op)({staticRegexReplace_:function(e,t,n,r=!0){const s=(0,l.YT)(e,"input","staticRegexReplace","string"),a={pattern:t,rewrite:n,replaceGlobal:r};return u.T2.runKernel(c.GZp,{x:s},a)}}),fs={fft:wn.h,ifft:kn.K,rfft:Sn.z,irfft:Tn.g},ms={hammingWindow:Sr,hannWindow:Nr,frame:Ir,stft:Cr},gs={flipLeftRight:Ar,grayscaleToRGB:$r,resizeNearestNeighbor:Vr.b,resizeBilinear:Wr.v,rgbToGrayscale:Fr,rotateWithOffset:Rr,cropAndResize:Er,nonMaxSuppression:_r,nonMaxSuppressionAsync:Lr,nonMaxSuppressionWithScore:Mr,nonMaxSuppressionWithScoreAsync:zr,nonMaxSuppressionPadded:Pr,nonMaxSuppressionPaddedAsync:Br,threshold:Ur,transform:Gr},ys={bandPart:Zr,gramSchmidt:jr,qr:Yr},bs={absoluteDifference:Xr,computeWeightedLoss:qr,cosineDistance:Jr,hingeLoss:es,huberLoss:ts,logLoss:ns,meanSquaredError:rs,sigmoidCrossEntropy:ss,softmaxCrossEntropy:as},xs={sparseFillEmptyRows:os,sparseReshape:is,sparseSegmentMean:us,sparseSegmentSum:cs},vs={stringNGrams:ls,stringSplit:ps,stringToHashBucketFast:ds,staticRegexReplace:hs}},5661:function(e,t,n){"use strict";n.d(t,{e:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({pad_:function(e,t,n=0){const o=(0,a.YT)(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},u={x:o};return r.T2.runKernel(s.ODT,u,i)}})},7872:function(e,t,n){"use strict";n.d(t,{d:function(){return d}});var r=n(8189),s=n(5119),a=n(3909),o=n(9772),i=n(7195),u=n(6999),c=n(929),l=n(2302),p=n(776);const d=(0,c.op)({pool_:function(e,t,n,c,d,h,f){null==d&&(d=[1,1]),null==h&&(h=1),0===c&&(c="valid");const m=(0,r.YT)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,l.t)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),s.vA(i.G0(h,d),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${h} and dilations '${d}'`));const b=i.E6(g.shape,t,h,d,c),x=[b.dilationHeight,b.dilationWidth];let v;v="same"===c?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),s=r.map((e=>Math.floor(e/2))),a=r.map(((e,t)=>e-s[t]));return r.map(((e,t)=>[s[t],a[t]]))}([b.filterHeight,b.filterWidth],x):[[0,0],[0,0]];const w=1===x[0]&&1===x[1],[k,T]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),o=t.map(((e,t)=>(e-a[t]%e)%e)),i=s.map(((e,t)=>e+o[t])),u=t.map(((e,t)=>[r[t],i[t]])),c=t.map(((e,t)=>[0,o[t]]));return[u,c]}([b.inHeight,b.inWidth],x,v),S=w?c:"valid",N=w?g:(0,p.e)(g,x,k),I=("avg"===n?()=>(0,a.$)(N,t,h,S,f):()=>(0,u.j)(N,t,h,S,f))(),C=w?I:(0,o.G)(I,x,T);return y?(0,l.t)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},6609:function(e,t,n){"use strict";n.d(t,{n:function(){return i}});var r=n(1585),s=n(7822),a=n(565),o=n(8189);const i=(0,n(929).op)({pow_:function(e,t){let n=(0,o.YT)(e,"base","pow"),i=(0,o.YT)(t,"exp","pow");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.T2.runKernel(s.pyJ,u)}})},4394:function(e,t,n){"use strict";n.d(t,{N:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({prelu_:function(e,t){const n={x:(0,a.YT)(e,"x","prelu"),alpha:(0,a.YT)(t,"alpha","prelu")};return r.T2.runKernel(s.Ncv,n)}})},5295:function(e,t,n){"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,{y:function(){return r}})},7771:function(e,t,n){"use strict";n.d(t,{_:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(9809);const i=(0,n(929).op)({prod_:function(e,t=null,n=!1){let i=(0,a.YT)(e,"x","prod");"bool"===i.dtype&&(i=(0,o.w)(i,"int32"));const u={x:i},c={axis:t,keepDims:n};return r.T2.runKernel(s.kdj,u,c)}})},1902:function(e,t,n){"use strict";n.d(t,{x:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({real_:function(e){const t={input:(0,a.YT)(e,"input","real")};return r.T2.runKernel(s.LRy,t)}})},9870:function(e,t,n){"use strict";n.d(t,{V:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({reciprocal_:function(e){const t={x:(0,a.YT)(e,"x","reciprocal")};return r.T2.runKernel(s.huO,t)}})},112:function(e,t,n){"use strict";n.d(t,{V:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({relu_:function(e){const t={x:(0,a.YT)(e,"x","relu")};return r.T2.runKernel(s.fUj,t)}})},3732:function(e,t,n){"use strict";n.d(t,{j:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({relu6_:function(e){const t={x:(0,a.YT)(e,"x","relu6")};return r.T2.runKernel(s.P_L,t)}})},2302:function(e,t,n){"use strict";n.d(t,{t:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({reshape_:function(e,t){const n={x:(0,a.YT)(e,"x","reshape","string_or_numeric")},o={shape:t};return r.T2.runKernel(s.R23,n,o)}})},3262:function(e,t,n){"use strict";n.d(t,{B:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({reverse_:function(e,t){const n={x:(0,a.YT)(e,"x","reverse")},o={dims:t};return r.T2.runKernel(s.D7i,n,o)}})},5912:function(e,t,n){"use strict";n.d(t,{L:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({round_:function(e){const t={x:(0,a.YT)(e,"x","round")};return r.T2.runKernel(s.hVg,t)}})},7820:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({rsqrt_:function(e){const t={x:(0,a.YT)(e,"x","rsqrt","float32")};return r.T2.runKernel(s.TOR,t)}})},5702:function(e,t,n){"use strict";n.d(t,{d:function(){return a}});var r=n(3879),s=n(9171);function a(e,t){if(((0,r.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.Q)(e,[],[],t)}},6170:function(e,t,n){"use strict";n.d(t,{Ly:function(){return s},TT:function(){return a},l8:function(){return o}});var r=n(5119);function s(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let o=0;o<s;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-s;++o)if(n.shape[o+s]!==e[o+r])throw new Error(a+` updates.shape[${o+s}] (${n.shape[o+s]}) != shape[${o+s}] (${e[o+s]})`)}function a(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}s(n,t,e)}function o(e,t,n){const s=t.shape.length,a=s>1?t.shape[s-1]:1,o=n.length;let i=1;for(let r=a;r<o;++r)i*=n[r];const u=a<1?1:a;return{sliceRank:a,numUpdates:(0,r.Ze)(t.shape)/u,sliceSize:i,strides:[...(0,r.Ur)(n.slice(0,a)),1],outputSize:(0,r.Ze)(n)}}},6325:function(e,t,n){"use strict";n.d(t,{W:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({selu_:function(e){const t={x:(0,a.YT)(e,"x","selu")};return r.T2.runKernel(s.u$b,t)}})},8576:function(e,t,n){"use strict";n.d(t,{X:function(){return s},j:function(){return r}});const r=1.7580993408473768,s=1.0507009873554805},9986:function(e,t,n){"use strict";n.d(t,{w:function(){return c}});var r=n(8189),s=n(5119),a=n(8794),o=n(676),i=n(929),u=n(2302);const c=(0,i.op)({separableConv2d_:function(e,t,n,i,c,l=[1,1],p="NHWC"){const d=(0,r.YT)(e,"x","separableConv2d"),h=(0,r.YT)(t,"depthwiseFilter","separableConv2d"),f=(0,r.YT)(n,"pointwiseFilter","separableConv2d");let m=d,g=!1;if(3===d.rank&&(g=!0,m=(0,u.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),"NCHW"===p)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s.vA(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),s.vA(4===h.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${h.rank}.`)),s.vA(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${h.rank}.`)),s.vA(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),s.vA(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=h.shape[2],b=h.shape[3];s.vA(f.shape[2]===y*b,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`));const x=(0,o.G)(m,h,i,c,p,l),v=(0,a.X)(x,f,1,"valid",p);return g?(0,u.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},8968:function(e,t,n){"use strict";n.d(t,{r:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({sigmoid_:function(e){const t={x:(0,a.YT)(e,"x","sigmoid","float32")};return r.T2.runKernel(s.vI1,t)}})},1115:function(e,t,n){"use strict";n.d(t,{_:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({sign_:function(e){const t={x:(0,a.YT)(e,"x","sign")};return r.T2.runKernel(s.YVe,t)}})},3726:function(e,t,n){"use strict";n.d(t,{F:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({sin_:function(e){const t={x:(0,a.YT)(e,"x","sin","float32")};return r.T2.runKernel(s.hql,t)}})},8276:function(e,t,n){"use strict";n.d(t,{L:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({sinh_:function(e){const t={x:(0,a.YT)(e,"x","sinh")};return r.T2.runKernel(s.J3C,t)}})},7986:function(e,t,n){"use strict";n.d(t,{d:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({slice_:function(e,t,n){const o=(0,a.YT)(e,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},u={begin:t,size:n};return r.T2.runKernel(s.JiE,i,u)}})},4969:function(e,t,n){"use strict";n.r(t),n.d(t,{assertParamsValid:function(){return o},computeFlatOffset:function(){return x},computeOutShape:function(){return u},getNormalizedAxes:function(){return d},isSliceContinous:function(){return b},maskToAxes:function(){return i},parseSliceParams:function(){return v},sliceInfo:function(){return w},startForAxis:function(){return g},startIndicesWithElidedDims:function(){return h},stopForAxis:function(){return y},stopIndicesWithElidedDims:function(){return f},stridesForAxis:function(){return m},stridesWithElidedDims:function(){return c}});var r=n(5119);const s=-2,a=-1;function o(e,t,n){const s=e.shape.length;r.vA(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),r.vA(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let a=0;a<s;++a)r.vA(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function i(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function u(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function c(e,t,n,r){const s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function l(e,t,n){return n<=e?n:n-(t-1)}function p(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function d(e,t,n,r,s,a,o,i,u){const l=e.length;let p=new Array(l),d=new Array(l),b=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;p=h(o,u,l,r,e),d=f(i,u,l,s,e),b=c(a,u,l,e)}else for(let c=0;c<l;c++)p[c]=g(o,r,a,e,c,u),d[c]=y(i,s,a,e,c,u),b[c]=m(a,c,u);return{begin:p,end:d,strides:b}}function h(e,t,n,r,s){const a=[...s],o=p(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{const s=l(t,n,i);let o=r[s];e&1<<s&&(o=0),a[i]=o}return a}function f(e,t,n,s,a){const o=[...a],i=p(n,t);for(let r=0;r<o.length;r++)if(i.indexOf(r)>-1)o[r]=Number.MAX_SAFE_INTEGER;else{const a=l(t,n,r);let i=s[a];e&1<<a&&(i=Number.MAX_SAFE_INTEGER),o[r]=i}for(let u=0;u<o.length;u++){const e=a[u];o[u]<0&&(o[u]+=e),o[u]=r.qE(0,o[u],a[u])}return o}function m(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function g(e,t,n,s,a,o){let i=t[a];const u=n[a]||1;(e&1<<a||o&1<<a||null==i)&&(i=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=s[a];return i<0&&(i+=c),i=r.qE(0,i,c-1),i}function y(e,t,n,s,a,o){let i=t[a];const u=n[a]||1;(e&1<<a||o&1<<a||null==i)&&(i=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=s[a];return i<0&&(i+=c),i=u>0?r.qE(0,i,c):r.qE(-1,i,c-1),i}function b(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function x(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function v(e,t,n){let s;const a=e.shape.length;let o;return s="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),s.forEach((e=>{r.vA(-1!==e,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,o=o.map(((t,n)=>t>=0?t:(r.vA(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,o]}function w(e,t,n,r,o,i,u,c,l){let p;if(null==r?(p=new Array(t.length),p.fill(1)):p=r,null!=u&&u&u-1)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const h={dims:p.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:p.slice(),beginMask:o,endMask:i,ellipsisMask:u,newAxisMask:c,shrinkAxisMask:l};for(let s=0;s<h.dims;s++)d&&1<<s&c&&h.numAddAxisAfterEllipsis++,1<<s&u&&(d=!0);d||(h.ellipsisMask|=1<<h.dims,h.dims++);const f={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(s),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,f);let m=!0,g=!0,y=!0;const b=[],x=[];for(let s=0;s<e.length;++s){if(0===f.strides[s])throw Error(`strides[${s}] must be non-zero`);const t=!!(f.shrinkAxisMask&1<<s),n=e[s];if(-1===n){b.push(t?1:-1);continue}const r=[f.beginMask&1<<s,f.endMask&1<<s],a=[f.strides[s]>0?0:-1,f.strides[s]>0?n:n-1];if(t&&f.strides[s]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&1===f.strides[s];const o=!!(f.beginMask&1<<s&&f.endMask&1<<s);if(f.beginValid&&f.endValid){if(t){const e=f.begin[s]<0?n+f.begin[s]:f.begin[s];if(f.begin[s]=e,f.end[s]=f.begin[s]+1,e<0||e>=n)throw Error(`slice index ${f.begin[s]} of dimension ${s} out of bounds.`)}else f.begin[s]=k(f.begin[s],0,f.strides[s],n,r,a),f.end[s]=k(f.end[s],1,f.strides[s],n,r,a);const e=1===f.strides[s]&&0===f.begin[s]&&f.end[s]===n;m=m&&e,g=g&&(0===s&&1===f.strides[s]||e)}else m=m&&1===f.strides[s]&&o,g=g&&(0===s&&1===f.strides[s]||o);let i,u=!1;if(f.beginValid&&f.endValid?(i=f.end[s]-f.begin[s],u=!0):t?(i=1,u=!0):o&&n>=0&&(i=f.strides[s]<0?-n:n,u=!0),u){let e;e=0===i||i<0!=f.strides[s]<0?0:Math.trunc(i/f.strides[s])+(i%f.strides[s]!=0?1:0),b.push(e)}else b.push(-1)}for(let a=0;a<f.finalShapeGatherIndices.length;++a){const e=f.finalShapeGatherIndices[a];e>=0?x.push(b[e]):e===s&&x.push(1)}return{finalShapeSparse:x.filter(((e,t)=>f.finalShapeGatherIndices[t]!==s)),finalShape:x,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:f.begin,end:f.end,strides:f.strides}}function k(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}},6346:function(e,t,n){"use strict";n.d(t,{V:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({softmax_:function(e,t=-1){const n=(0,a.YT)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const o={logits:n},i={dim:t};return r.T2.runKernel(s.rFG,o,i)}})},6030:function(e,t,n){"use strict";n.d(t,{l:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({softplus_:function(e){const t={x:(0,a.YT)(e,"x","softplus")};return r.T2.runKernel(s.Fin,t)}})},776:function(e,t,n){"use strict";n.d(t,{e:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119);const i=(0,n(929).op)({spaceToBatchND_:function(e,t,n){const i=(0,a.YT)(e,"x","spaceToBatchND");o.vA(i.rank>=1+t.length,(()=>`input rank ${i.rank} should be > than [blockShape] ${t.length}`)),o.vA(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),o.vA(i.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${i.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const u={x:i},c={blockShape:t,paddings:n};return r.T2.runKernel(s.A8B,u,c)}})},1361:function(e,t,n){"use strict";n.d(t,{h:function(){return o}});var r=n(1585),s=n(7822),a=n(5119);const o=(0,n(929).op)({fft_:function(e){(0,a.vA)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.T2.runKernel(s.rGP,t)}})},3108:function(e,t,n){"use strict";n.d(t,{K:function(){return o}});var r=n(1585),s=n(7822),a=n(5119);const o=(0,n(929).op)({ifft_:function(e){(0,a.vA)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.T2.runKernel(s.OAQ,t)}})},2292:function(e,t,n){"use strict";n.d(t,{g:function(){return f}});var r=n(7148),s=n(5030),a=n(5040),o=n(9258),i=n(929),u=n(1902),c=n(2302),l=n(3262),p=n(5702),d=n(7986),h=n(3108);const f=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const r=(0,c.t)(e,[n,t]);i=(0,h.K)(r)}else{const f=[n,2*(t-1)],m=(0,c.t)((0,u.x)(e),[n,t]),g=(0,c.t)((0,a.n)(e),[n,t]),y=(0,l.B)((0,d.d)(m,[0,1],[n,t-2]),1),b=(0,o.l)((0,l.B)((0,d.d)(g,[0,1],[n,t-2]),1),(0,p.d)(-1)),x=(0,s.x)([m,y],1),v=(0,s.x)([g,b],1),w=(0,c.t)((0,r.f)(x,v),[f[0],f[1]]);i=(0,h.K)(w)}if(i=(0,u.x)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=(0,c.t)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},8775:function(e,t,n){"use strict";n.d(t,{z:function(){return m}});var r=n(5119),s=n(7148),a=n(5030),o=n(5040),i=n(929),u=n(1902),c=n(2302),l=n(7986),p=n(6512),d=n(2855),h=n(5537),f=n(1361);const m=(0,i.op)({rfft_:function(e,t){(0,r.vA)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,m=(0,l.d)(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,a.x)([e,(0,d.U)(r)],e.shape.length-1),n=t}else m=e;const g=(0,h.P)(m),y=(0,c.t)((0,s.f)(m,g),[i,n]),b=(0,f.h)(y),x=Math.floor(n/2)+1,v=(0,u.x)(b),w=(0,o.n)(b),k=(0,p.l)(v,[x,n-x],v.shape.length-1),T=(0,p.l)(w,[x,n-x],w.shape.length-1),S=m.shape.slice();return S[m.shape.length-1]=x,(0,c.t)((0,s.f)(k[0],T[0]),S)}})},6512:function(e,t,n){"use strict";n.d(t,{l:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({split_:function(e,t,n=0){const o={x:(0,a.YT)(e,"x","split")},i={numOrSizeSplits:t,axis:n};return r.T2.runKernel(s.Blb,o,i)}})},9348:function(e,t,n){"use strict";n.d(t,{R:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({sqrt_:function(e){const t={x:(0,a.YT)(e,"x","sqrt","float32")};return r.T2.runKernel(s.dFH,t)}})},5793:function(e,t,n){"use strict";n.d(t,{E:function(){return a}});var r=n(1585),s=n(8189);const a=(0,n(929).op)({square_:function(e){const t=(0,s.YT)(e,"x","square");return r.T2.runKernel("Square",{x:t},{})}})},3427:function(e,t,n){"use strict";n.d(t,{P:function(){return u}});var r=n(1585),s=n(7822),a=n(565),o=n(8189),i=n(2198);const u=(0,n(929).op)({squaredDifference_:function(e,t){let n=(0,o.YT)(e,"a","squaredDifference"),u=(0,o.YT)(t,"b","squaredDifference");[n,u]=(0,a.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(s.Ddj,c,{})}})},5932:function(e,t,n){"use strict";n.d(t,{r:function(){return i}});var r=n(8189),s=n(5119),a=n(929),o=n(2302);const i=(0,a.op)({squeeze_:function(e,t){const n=(0,r.YT)(e,"x","squeeze","string_or_numeric");return(0,o.t)(n,(0,s.gx)(n.shape,t).newShape)}})},4268:function(e,t,n){"use strict";n.d(t,{t:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119);const i=(0,n(929).op)({stack_:function(e,t=0){const n=(0,a.j1)(e,"tensors","stack","string_or_numeric");o.vA(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o.vA(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,u={axis:t};return r.T2.runKernel(s.mM$,i,u)}})},8319:function(e,t,n){"use strict";n.d(t,{P:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({step_:function(e,t=0){const n={x:(0,a.YT)(e,"x","step")},o={alpha:t};return r.T2.runKernel(s.pnw,n,o)}})},5894:function(e,t,n){"use strict";n.d(t,{Y:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({stridedSlice_:function(e,t,n,o,i=0,u=0,c=0,l=0,p=0){const d={x:(0,a.YT)(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:o,beginMask:i,endMask:u,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:p};return r.T2.runKernel(s.UcO,d,h)}})},7126:function(e,t,n){"use strict";n.d(t,{j:function(){return i}});var r=n(1585),s=n(7822),a=n(565),o=n(8189);const i=(0,n(929).op)({sub_:function(e,t){let n=(0,o.YT)(e,"a","sub"),i=(0,o.YT)(t,"b","sub");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.T2.runKernel(s.PbM,u)}})},3791:function(e,t,n){"use strict";n.d(t,{c:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(9809);const i=(0,n(929).op)({sum_:function(e,t=null,n=!1){let i=(0,a.YT)(e,"x","sum");"bool"===i.dtype&&(i=(0,o.w)(i,"int32"));const u={x:i},c={axis:t,keepDims:n};return r.T2.runKernel(s.WuN,u,c)}})},7823:function(e,t,n){"use strict";n.d(t,{M:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({tan_:function(e){const t={x:(0,a.YT)(e,"x","tan","float32")};return r.T2.runKernel(s.oFs,t)}})},7311:function(e,t,n){"use strict";n.d(t,{y:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({tanh_:function(e){const t={x:(0,a.YT)(e,"x","tanh","float32")};return r.T2.runKernel(s.iuW,t)}})},4027:function(e,t,n){"use strict";n.d(t,{O:function(){return a}});var r=n(8189),s=n(9171);function a(e,t,n){const a=(0,r.MZ)(e,n);return(0,s.Q)(e,t,a,n)}},2768:function(e,t,n){"use strict";n.d(t,{$:function(){return o}});var r=n(8189),s=n(5119),a=n(9171);function o(e,t,n){if((0,s.HO)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const o=(0,r.MZ)(e,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,a.Q)(e,t,o,n)}},9171:function(e,t,n){"use strict";n.d(t,{Q:function(){return i}});var r=n(1585),s=n(2046),a=n(5119),o=n(3879);function i(e,t,n,i){if(null==i)i=(0,a.X$)(e);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,s.Nw)(e)||(0,s.Oj)(e)){if("float32"!==i&&"int32"!==i)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${i}.`);return r.T2.backend.createTensorFromGPUData(e,t||n,i)}if(!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.SA)(t);const e=(0,a.Ze)(t),r=(0,a.Ze)(n);(0,a.vA)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==(0,a.Ze)(t.slice(s));(0,a.vA)(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0),r.T2.makeTensor(e,t,i)}},4826:function(e,t,n){"use strict";n.d(t,{V:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119);const i=(0,n(929).op)({tile_:function(e,t){const n=(0,a.YT)(e,"x","tile","string_or_numeric");o.vA(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const i={x:n},u={reps:t};return r.T2.runKernel(s.FAs,i,u)}})},1190:function(e,t,n){"use strict";n.d(t,{r:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({topk_:function(e,t=1,n=!0){const o=(0,a.YT)(e,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const u={x:o},c={k:t,sorted:n},[l,p]=r.T2.runKernel(s.TBb,u,c);return{values:l,indices:p}}})},7703:function(e,t,n){"use strict";n.d(t,{m:function(){return h}});var r=n(1585),s=n(7668),a=n(7822),o=n(8189),i=n(5119),u=n(7148),c=n(5040),l=n(6522),p=n(929),d=n(1902);const h=(0,p.op)({transpose_:function(e,t,n){const p=(0,o.YT)(e,"x","transpose");if(null==t&&(t=p.shape.map(((e,t)=>t)).reverse()),i.vA(p.rank===t.length,(()=>`Error in transpose: rank of input ${p.rank} must match length of perm ${t}.`)),t.forEach((e=>{i.vA(e>=0&&e<p.rank,(()=>"All entries in 'perm' must be between 0 and "+(p.rank-1)+` but got ${t}`))})),p.rank<=1)return p.clone();const h={x:p},f={perm:t};return"complex64"===p.dtype?(0,s.DZ)((()=>{let e=(0,d.x)(p),t=(0,c.n)(p);return e=r.T2.runKernel(a.wx0,{x:e},f),t=r.T2.runKernel(a.wx0,{x:t},f),n&&(t=(0,l.H)(t)),(0,u.f)(e,t)})):r.T2.runKernel(a.wx0,h,f)}})},3937:function(e,t,n){"use strict";n.d(t,{A:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119);const i=(0,n(929).op)({unique_:function(e,t=0){const n=(0,a.YT)(e,"x","unique","string_or_numeric");(0,o.vA)(n.rank>0,(()=>"The input tensor must be at least 1D"));const i={x:n},u={axis:t},[c,l]=r.T2.runKernel(s.EwU,i,u);return{values:c,indices:l}}})},7706:function(e,t,n){"use strict";n.d(t,{z:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119);const i=(0,n(929).op)({unsortedSegmentSum_:function(e,t,n){const i=(0,a.YT)(e,"x","unsortedSegmentSum"),u=(0,a.YT)(t,"segmentIds","unsortedSegmentSum","int32");(0,o.vA)((0,o.E6)(n),(()=>"numSegments must be of dtype int"));const c={x:i,segmentIds:u},l={numSegments:n};return r.T2.runKernel(s.pPe,c,l)}})},7261:function(e,t,n){"use strict";n.d(t,{K:function(){return i}});var r=n(1585),s=n(7822),a=n(8189),o=n(5119);const i=(0,n(929).op)({unstack_:function(e,t=0){const n=(0,a.YT)(e,"x","unstack","string_or_numeric");o.vA(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const i={value:n},u={axis:t};return r.T2.runKernel(s.dXR,i,u)}})},2151:function(e,t,n){"use strict";n.d(t,{_:function(){return u}});var r=n(1585),s=n(7822),a=n(8189),o=n(3567),i=n(2198);const u=(0,n(929).op)({where_:function(e,t,n){const u=(0,a.YT)(t,"a","where"),c=(0,a.YT)(n,"b","where"),l=(0,a.YT)(e,"condition","where","bool"),p=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(l.shape,u.shape),c.shape),d={condition:(0,o.h)(l,p),t:(0,o.h)(u,p),e:(0,o.h)(c,p)};return r.T2.runKernel(s.l6P,d)}})},2855:function(e,t,n){"use strict";n.d(t,{U:function(){return o}});var r=n(1585),s=n(5119),a=n(7148);function o(e,t="float32"){if((0,s.SA)(e),"complex64"===t){const t=o(e,"float32"),n=o(e,"float32");return(0,a.f)(t,n)}const n=(0,s.Ty)((0,s.Ze)(e),t);return r.T2.makeTensor(n,e,t)}},5537:function(e,t,n){"use strict";n.d(t,{P:function(){return o}});var r=n(1585),s=n(7822),a=n(8189);const o=(0,n(929).op)({zerosLike_:function(e){const t={x:(0,a.YT)(e,"x","zerosLike")};return r.T2.runKernel(s.xJ3,t)}})},6448:function(e,t,n){"use strict";function r(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{Y:function(){return r}})},259:function(e,t,n){"use strict";n.d(t,{qY:function(){return w},yl:function(){return f},rT:function(){return T},tp:function(){return k},B4:function(){return v},Q5:function(){return x},qP:function(){return b}});var r=n(1743),s=n(5119);const a=20,o=3,i=7;function u(e,t,n,r){const a=(0,s.Ur)(t),o=function(e,t,n,r){const a=(0,s.Ze)(t),o=r[r.length-1],i=new Array(o).fill(0),u=t.length,l="complex64"===n?d(e):e;if(u>1)for(let s=0;s<a/o;s++){const e=s*o;for(let t=0;t<o;t++)i[t]=Math.max(i[t],c(l[e+t],0,n).length)}return i}(e,t,n,a),i=t.length,u=p(e,t,n,a,o),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(u.map((e=>"    "+e)).join("\n")),l.join("\n")}function c(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(i))} + ${parseFloat(e[1].toFixed(i))}j`:(0,s.Kg)(e)?`'${e}'`:"bool"===n?l(e):parseFloat(e.toFixed(i)).toString(),(0,s.av)(r,t)}function l(e){return 0===e?"false":"true"}function p(e,t,n,r,s,i=!0){const u="complex64"===n?2:1,h=t[0],f=t.length;if(0===f){if("complex64"===n){return[c(d(e)[0],0,n)]}return"bool"===n?[l(e[0])]:[e[0].toString()]}if(1===f){if(h>a){const t=o*u;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((h-o)*u,h*u));return"complex64"===n&&(r=d(r),a=d(a)),["["+r.map(((e,t)=>c(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>c(e,s[h-o+t],n))).join(", ")+"]"]}return["["+("complex64"===n?d(e):Array.from(e)).map(((e,t)=>c(e,s[t],n))).join(", ")+"]"]}const m=t.slice(1),g=r.slice(1),y=r[0]*u,b=[];if(h>a){for(let t=0;t<o;t++){const r=t*y,a=r+y;b.push(...p(e.slice(r,a),m,n,g,s,!1))}b.push("...");for(let t=h-o;t<h;t++){const r=t*y,a=r+y;b.push(...p(e.slice(r,a),m,n,g,s,t===h-1))}}else for(let a=0;a<h;a++){const t=a*y,r=t+y;b.push(...p(e.slice(t,r),m,n,g,s,a===h-1))}const x=2===f?",":"";b[0]="["+(h>0?b[0]+x:"");for(let a=1;a<b.length-1;a++)b[a]=" "+b[a]+x;let v=",\n";for(let a=2;a<f;a++)v+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(i?"":v),b}function d(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var h=n(3879);class f{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=s.Ze(e),null!=n){const e=n.length;s.vA(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||s.Ab(t,this.size),this.strides=(0,s.Ur)(e)}set(e,...t){0===t.length&&(t=[0]),s.vA(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return m().makeTensor(this.values,this.shape,this.dtype)}}let m=null,g=null,y=null;function b(e){m=e}function x(e){g=e}function v(e){y=e}class w{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=s.Ze(e),this.strides=(0,s.Ur)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return g.buffer(this.shape,this.dtype,e)}bufferSync(){return g.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,s.yw)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,s.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=m().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>h.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),m().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=m().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>h.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await m().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),m().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return g.print(this,e)}clone(){return this.throwIfDisposed(),g.clone(this)}toString(e=!1){return u(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),g.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),m().makeVariable(this,e,t,n)}}function k(){return(0,r.m)("Tensor",(()=>w))}Object.defineProperty(w,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),k();class T extends w{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!s.r1(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);m().disposeTensor(this),this.dataId=e.dataId,m().incRef(this,null)}dispose(){m().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(T,Symbol.hasInstance,{value:e=>e instanceof w&&null!=e.assign&&e.assign instanceof Function})},565:function(e,t,n){"use strict";n.r(t),n.d(t,{assertTypesMatch:function(){return i},getTensorsInContainer:function(){return c},isTensorInList:function(){return u},makeTypesMatch:function(){return o}});var r=n(259),s=n(2046),a=n(5119);function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,s.Tu)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,a.vA)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function c(e){const t=[];return l(e,t,new Set),t}function l(e,t,n){if(null==e)return;if(e instanceof r.qY)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const a=e;for(const r in a){const e=a[r];n.has(e)||(n.add(e),l(e,t,n))}}},8189:function(e,t,n){"use strict";n.d(t,{MZ:function(){return c},YT:function(){return d},j1:function(){return h}});var r=n(1585),s=n(6574),a=n(259),o=n(2046),i=n(3879),u=n(5119);function c(e,t){let n=e;if((0,i.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,o.Oj)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,o.Nw)(e))return[e.buffer.size/(null==t?4:(0,u.jv)(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,i.isTypedArray)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,s._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,r,[]),r}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.isTypedArray)(e))return void(0,u.vA)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,u.vA)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,u.vA)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let s=0;s<e.length;++s)l(e[s],r,n.concat(s))}function p(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,s="numeric"){if(e instanceof(0,a.tp)())return p(s,e.dtype,t,n),e;let o=(0,u.X$)(e);if("string"!==o&&["bool","int32","float32"].indexOf(s)>=0&&(o=s),p(s,o,t,n),null==e||!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const l=c(e,o);(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const d="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0);return r.T2.makeTensor(d,l,o)}function h(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>d(e,`${t}[${s}]`,n,r)))}},2046:function(e,t,n){"use strict";var r,s,a,o,i;n.d(t,{Nw:function(){return d},Oj:function(){return p},Tu:function(){return c},ch:function(){return l}}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const u={float32:o,int32:s,bool:a,complex64:i};function c(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function l(e){return c(e,"int32")}function p(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function d(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},3879:function(e,t,n){"use strict";n.r(t),n.d(t,{arraysEqual:function(){return a.r1},arraysEqualWithNull:function(){return a.e_},assert:function(){return a.vA},assertNonNegativeIntegerDimensions:function(){return a.SA},assertNonNull:function(){return a.HO},assertShapesMatch:function(){return a.O3},bytesFromStringArray:function(){return a.SL},bytesPerElement:function(){return a.jv},checkConversionForErrors:function(){return a.nd},clamp:function(){return a.qE},computeStrides:function(){return a.Ur},convertBackendValuesAndArrayBuffer:function(){return a.o2},createScalarValue:function(){return v},createShuffledIndices:function(){return a.P8},decodeString:function(){return N},distSquared:function(){return a.oO},encodeString:function(){return S},fetch:function(){return T},fingerPrint64:function(){return x},flatten:function(){return C},getArrayFromDType:function(){return a.Ab},getTypedArrayFromDType:function(){return a.ce},hasEncodingLoss:function(){return a.BE},hexToLong:function(){return u},indexToLoc:function(){return a._k},inferDtype:function(){return a.X$},inferFromImplicitShape:function(){return a.XT},isBoolean:function(){return a.Lm},isFunction:function(){return a.Tn},isInt:function(){return a.E6},isNumber:function(){return a.Et},isPromise:function(){return a.yL},isScalarShape:function(){return a.Sf},isString:function(){return a.Kg},isTypedArray:function(){return I},isValidDtype:function(){return a.xn},locToIndex:function(){return a.sX},makeOnesTypedArray:function(){return a.FZ},makeZerosNestedTypedArray:function(){return a.c7},makeZerosTypedArray:function(){return a.Ty},nearestDivisor:function(){return a.lK},nearestLargerEven:function(){return a.eV},now:function(){return k},parseAxisParam:function(){return a.Y6},randUniform:function(){return a.so},repeatedTry:function(){return a._q},rightPad:function(){return a.av},shuffle:function(){return a.k4},shuffleCombo:function(){return a.a0},sizeFromShape:function(){return a.Ze},sizeToSquarishShape:function(){return a.gS},squeezeShape:function(){return a.gx},sum:function(){return a.cz},swap:function(){return a.wg},tanh:function(){return a.ym},toNestedArray:function(){return a.yw},toTypedArray:function(){return w}});var r=n(6574),s=n(6448),a=n(5119),o=n(8570);const i=n.n(o)()||o;function u(e){return i.fromString(e,!0,16)}const c=u("c3a5c85c97cb3127"),l=u("b492b66fbe98f273"),p=u("9ae16a3b2f90404f");function d(e){return e.xor(e.shru(47))}function h(e,t,n){const r=e.slice(t,t+n);return i.fromBytes(Array.from(r),!0,!0)}function f(e,t){return h(e,t,8)}function m(e,t){return h(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function y(e,t,n=u("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function b(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=g(a.add(s).add(r),21);const o=s;return s=(s=s.add(t)).add(n),a=a.add(g(s,44)),[s.add(r),a.add(o)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,r)}function x(e,t=e.length){const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=p.add(2*t),r=f(e,0).add(p),s=f(e,t-8);return y(g(s,37).mul(n).add(r),g(r,25).add(s).mul(n),n)}if(t>=4){const n=p.add(2*t);return y(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return d(p.mul(n).xor(c.mul(r))).mul(p)}return p}(e,t):function(e,t=e.length){const n=p.add(2*t),r=f(e,0).mul(l),s=f(e,8),a=f(e,t-8).mul(n),o=f(e,t-16).mul(p);return y(g(r.add(s),43).add(g(a,30)).add(o),r.add(g(s.add(p),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=p.add(2*t),r=f(e,0).mul(p),s=f(e,8),a=f(e,t-8).mul(n),o=f(e,t-16).mul(p),i=g(r.add(s),43).add(g(a,30)).add(o),u=y(i,r.add(g(s.add(p),18)).add(a),n),c=f(e,16).mul(n),l=f(e,24),d=i.add(f(e,t-32)).mul(n),h=u.add(f(e,t-24)).mul(n);return y(g(c.add(l),43).add(g(d,30)).add(h),c.add(g(l.add(r),18)).add(d),n)}(e,t);let r=n,s=n.mul(l).add(113),a=d(s.mul(p).add(113)).mul(p),o=[i.UZERO,i.UZERO],u=[i.UZERO,i.UZERO];r=r.mul(p).add(f(e,0));let h=0;const x=64*(t-1>>6),v=x+(t-1&63)-63;do{r=g(r.add(s).add(o[0]).add(f(e,h+8)),37).mul(l),s=g(s.add(o[1]).add(f(e,h+48)),42).mul(l),r=r.xor(u[1]),s=s.add(o[0]).add(f(e,h+40)),a=g(a.add(u[0]),33).mul(l),o=b(e,h,o[1].mul(l),r.add(u[0])),u=b(e,h+32,a.add(u[1]),s.add(f(e,h+16))),[a,r]=[r,a],h+=64}while(h!==x);const w=l.add(a.and(255).shl(1));return h=v,u[0]=u[0].add(t-1&63),o[0]=o[0].add(u[0]),u[0]=u[0].add(o[0]),r=g(r.add(s).add(o[0]).add(f(e,h+8)),37).mul(w),s=g(s.add(o[1]).add(f(e,h+48)),42).mul(w),r=r.xor(u[1].mul(9)),s=s.add(o[0].mul(9).add(f(e,h+40))),a=g(a.add(u[0]),33).mul(w),o=b(e,h,o[1].mul(w),r.add(u[0])),u=b(e,h+32,a.add(u[1]),s.add(f(e,h+16))),[a,r]=[r,a],y(y(o[0],u[0],w).add(d(s).mul(c)).add(a),y(o[1],u[1],w).add(r),w)}function v(e,t){return"string"===t?S(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=C(e)),(0,r._K)().getBool("DEBUG")&&a.nd(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function k(){return(0,r._K)().platform.now()}function T(e,t){return(0,r._K)().platform.fetch(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,r._K)().platform.encode(e,t)}function N(e,t="utf-8"){return t=t||"utf-8",(0,r._K)().platform.decode(e,t)}function I(e){return null!=(0,r._K)().platform.isTypedArray?(0,r._K)().platform.isTypedArray(e):(0,s.Y)(e)}function C(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||a.yL(e)||null==e||I(e)&&n)t.push(e);else if(Array.isArray(e)||I(e))for(let r=0;r<e.length;++r)C(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)C(e[s],t,n)}return t}},5119:function(e,t,n){"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function s(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,i(e,n,r),i(t,n,r)}function a(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2==0?e:e+1}function i(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function c(e,t){const n=Math.random();return t*n+(1-n)*e}function l(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function p(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function d(e,t,n=""){p(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function h(e){p(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function T(e,t=e=>0,n,r){return new Promise(((s,a)=>{let o=0;const i=()=>{if(e())return void s();o++;const u=t(o);null!=n&&o>=n?a():null!=r?r(i,u):setTimeout(i,u)};i()}))}function S(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function N(e,t){const n=t.length;return p((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),p(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function I(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:N(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=a){if(a[o]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==a[o]||a[o]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),a[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function C(e,t){return E(e,t)}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function A(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function $(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function F(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function _(e){return"string"==typeof e||e instanceof String}function O(e){return"boolean"==typeof e}function L(e){return"number"==typeof e}function M(e){return Array.isArray(e)?M(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":L(e)?"float32":_(e)?"string":O(e)?"bool":"float32"}function z(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function B(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function W(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=W(e+t*i,o,n,r)}return s}function V(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function U(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function G(e,t){const n=Z(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Z(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function j(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return V(e,new Float32Array(n));if("int32"===t)return V(e,new Int32Array(n));if("bool"===t)return V(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function H(e){e.forEach((t=>{p(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function Y(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function Q(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{Ab:function(){return E},BE:function(){return F},E6:function(){return b},Et:function(){return L},FZ:function(){return G},HO:function(){return h},Kg:function(){return _},Lm:function(){return O},O3:function(){return d},P8:function(){return w},SA:function(){return H},SL:function(){return D},Sf:function(){return m},Tn:function(){return z},Ty:function(){return Z},Ur:function(){return B},X$:function(){return M},XT:function(){return S},Y6:function(){return N},Ze:function(){return f},_k:function(){return Y},_q:function(){return T},a0:function(){return s},av:function(){return k},c7:function(){return j},ce:function(){return C},cz:function(){return u},eV:function(){return o},e_:function(){return g},gS:function(){return v},gx:function(){return I},jv:function(){return R},k4:function(){return r},lK:function(){return P},nd:function(){return A},o2:function(){return U},oO:function(){return l},qE:function(){return a},r1:function(){return y},sX:function(){return K},so:function(){return c},vA:function(){return p},wg:function(){return i},xn:function(){return $},yL:function(){return Q},ym:function(){return x},yw:function(){return V}})},2266:function(e,t,n){"use strict";n.d(t,{Bu:function(){return T},b_:function(){return N},rF:function(){return y}});var r=n(5840),s=n(7661),a=n(4813);class o extends r.JFn.Serializable{getConfig(){return{}}}class i extends o{apply(e,t=1){return s.Pq(e,t)}}i.className="elu",r.JFn.registerClass(i);class u extends o{apply(e){return r.WfX(e)}}u.className="selu",r.JFn.registerClass(u);class c extends o{apply(e){return r.VVh(e)}}c.className="relu",r.JFn.registerClass(c);class l extends o{apply(e){return(0,r.DZQ)((()=>r.BpO(6,r.VVh(e))))}}l.className="relu6",r.JFn.registerClass(l);class p extends o{apply(e){return e}}p.className="linear",r.JFn.registerClass(p);class d extends o{apply(e){return r.ry7(e)}}d.className="sigmoid",r.JFn.registerClass(d);class h extends o{apply(e){return s.KK(e)}}h.className="hardSigmoid",r.JFn.registerClass(h);class f extends o{apply(e){return r.lw0(e)}}f.className="softplus",r.JFn.registerClass(f);class m extends o{apply(e){return s.aY(e)}}m.className="softsign",r.JFn.registerClass(m);class g extends o{apply(e){return r.ymU(e)}}g.className="tanh",r.JFn.registerClass(g);class y extends o{apply(e,t=-1){return r.Vs9(e,t)}}y.className="softmax",r.JFn.registerClass(y);class b extends o{apply(e,t=-1){return r.HPB(e,t)}}b.className="logSoftmax",r.JFn.registerClass(b);class x extends o{apply(e){return(0,r.DZQ)((()=>r.DZQ((()=>{const t=Math.sqrt(2),n=r.lKK(.5,r.WQq(1,r.Y12(r.y4m(e,t))));return r.lKK(e,n)}))))}}x.className="gelu",r.JFn.registerClass(x);class v extends o{apply(e){return(0,r.DZQ)((()=>r.lKK(.5,r.lKK(e,r.WQq(1,r.ymU(r.lKK(r.RZD(r.y4m(2,Math.PI)),r.WQq(e,r.lKK(.044715,r.n7C(e,3))))))))))}}v.className="gelu_new",r.JFn.registerClass(v);class w extends o{apply(e){return(0,r.DZQ)((()=>r.lKK(e,r.ymU(r.lw0(e)))))}}w.className="mish",r.JFn.registerClass(w);class k extends o{apply(e,t=1){return(0,r.DZQ)((()=>r.lKK(r.ry7(r.lKK(e,t)),e)))}}function T(e){return e.getClassName()}function S(e,t={}){return(0,a.Xv)(e,r.JFn.SerializationMap.getMap().classNameMap,t,"activation")}function N(e){if(null==e){const e={className:"linear",config:{}};return S(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},S(t)}return e instanceof o?e:S(e)}k.className="swish",r.JFn.registerClass(k)},6090:function(e,t,n){"use strict";n.d(t,{Ni:function(){return a},VI:function(){return o}});var r=n(5840);let s;function a(){return null==s&&(s=(0,r.Hs)().epsilon()),s}function o(){return"channelsLast"}},1686:function(e,t,n){"use strict";n.d(t,{j:function(){return s},v:function(){return o}});let r=0;function s(){return r++}const a={};function o(e=""){return e in a||(a[e]=0),a[e]+=1,e+a[e].toString()}},7661:function(e,t,n){"use strict";n.d(t,{Bq:function(){return p},Dh:function(){return h},EZ:function(){return C},Ew:function(){return k},FE:function(){return x},KK:function(){return E},Ls:function(){return A},Om:function(){return v},PS:function(){return d},Pq:function(){return N},UG:function(){return c},Vs:function(){return b},aY:function(){return I},kg:function(){return w},ly:function(){return y},ni:function(){return S},r0:function(){return m},u1:function(){return g},ux:function(){return l},wg:function(){return u}});var r=n(5840),s=n(9459),a=n(5841),o=n(3072),i=n(6090);function u(e,t){return r.wgE(e,t)}function c(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),r.tQQ(e,n)}function l(e,t){return(0,r.DZQ)((()=>{if(2!==e.shape.length)throw new a.Qp(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return b(c(e,1),[1,t,1])}))}function p(e){const t=[o.no(e.shape)];return r.tQQ(e,t)}function d(e){if(e.rank<=1)throw new a.Qp(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],o.no(e.shape,1)];return r.tQQ(e,t)}function h(e,t,n){return(0,r.DZQ)((()=>{switch(e.rank){case 1:return r.Q$M(e,t,n);case 2:return r.zAd(e,[t,0],[n,e.shape[1]]);case 3:return r.wck(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return r.R0O(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return r.dik(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return r.dik(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new a.Qp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function f(e,t,n){return(0,r.DZQ)((()=>{switch(e.rank){case 1:return r.Q$M(e,t,n);case 2:return r.zAd(e,[0,t],[e.shape[0],n]);case 3:return r.wck(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return r.R0O(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new a.Qp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function m(e,t,n,s){return(0,r.DZQ)((()=>{switch(e.rank){case 1:return r.Q$M(e,t,n);case 2:switch(s){case 1:return h(e,t,n);case 2:return f(e,t,n);default:throw new a.Qp(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return h(e,t,n);case 2:return r.wck(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return f(e,t,n);default:throw new a.Qp(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return h(e,t,n);case 2:return r.R0O(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return r.R0O(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return f(e,t,n);default:throw new a.Qp(`The axis is not within the rank of the tensor ${s}`)}default:throw new a.Qp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function g(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),r.xWs(e,t)}function y(e,t){switch(e.rank){case 1:return r.I1m([e,t]);case 2:return r.RPU([e,t],0);case 3:return r.O5O([e,t],0);case 4:return r.P1l([e,t],0);default:throw new a.Qp(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function b(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new a.Qp(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return r.Vsq(e,t)}function x(e,t=0,n=1,s,a){return r.FE$(e,t,n,s,a)}function v(e,t,n,s){if(e.rank<2||t.rank<2)throw new a.EH(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new a.EH(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const a=!1,o=!1;return r.cZk.matMul({a:e,b:t,transposeA:a,transposeB:o,bias:s?T(e.rank,s,(0,i.VI)()):null,activation:n})}{const a=e.shape.slice(),o=a.pop();e=r.tQQ(e,[-1,o]);const u=t.shape.slice(),c=u.pop(),l=u.pop(),p=[...u,c],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=r.tQQ(r.mgz(t,d),[l,-1]);const h=[...a,...p],f=!1,m=!1;return r.tQQ(r.cZk.matMul({a:e,b:t,transposeA:f,transposeB:m,bias:s?T(e.rank,s,(0,i.VI)()):null,activation:n}),h)}}function w(e,t,n){return(0,r.DZQ)((()=>(t=Array.isArray(t)?(0,r.tGX)(t,"int32"):r.wgE(t,"int32"),r.kgh(e,t,n))))}function k(e){return r.lKK(e,e)}function T(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new a.Qp(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?r.tQQ(t,[1,s[0],1,1,1]):r.tQQ(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?r.tQQ(t,[1,1,1,1,s[0]]):r.tQQ(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?r.tQQ(t,[1,s[0],1,1]):r.tQQ(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?r.tQQ(t,[1,1,1,s[0]]):r.tQQ(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?r.tQQ(t,[1,s[0],1]):r.tQQ(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?r.tQQ(t,[1,1,s[0]]):r.tQQ(t,[1].concat(s))}else if(e<3)return t;throw new a.Qp(`Unsupported input rank by biasAdd: ${t.rank}`)}function S(e,t,n){return(0,r.DZQ)((()=>(null==n&&(n=(0,i.VI)()),(0,s.uM)(n),r.WQq(e,T(e.rank,t,n)))))}function N(e,t=1){if(1!==t)throw new a.EH(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return r.Pqc(e)}function I(e){return(0,r.DZQ)((()=>r.y4m(e,r.WQq(r.tnl(e),1))))}function C(e,t,n,s){return(0,r.DZQ)((()=>r.EZY(e,t,n,s)))}function E(e){return(0,r.DZQ)((()=>{const t=r.WQq(.5,r.lKK(.2,e));return r.zQh(t,0,1)}))}function A(e,t,n=!1){return n?e():t()}},5244:function(e,t,n){"use strict";n.d(t,{Eq:function(){return h},J5:function(){return u},dY:function(){return m}});var r,s=n(5840),a=n(5841),o=n(6681),i=n(4813);!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(r||(r={}));class u{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class c{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class l extends u{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"==typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const a=(0,s.DZQ)((()=>(0,s.WQq)(this.totals[r],(0,s.lKK)(e,n))));this.totals[r]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:(0,s.DZQ)((()=>{const e=(0,s.lKK)((0,s.y4m)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),(0,s.aCs)(t[n])})))}}class p extends u{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const o=r[a];e.push(o.data()),t.push(s),n.push(a)}}const r=await Promise.all(e);for(let s=0;s<r.length;++s){this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}}}class d extends u{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||s.dA1,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");s.ZSL.isNumber(this.yieldEvery)&&(this.maybeWait=i.sg(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await(0,o.I)(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await(0,o.I)(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await(0,o.I)(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await(0,o.I)(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await(0,o.I)(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):s.ZSL.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await(0,o.I)(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await(0,o.I)(e),await this.trainEnd(e))}}function h(e,t){if(null==e&&(e={}),e instanceof u)return[e];if(Array.isArray(e)&&e[0]instanceof u)return e;return i.st(e).map((e=>new d(e,t)))}class f{constructor(){}static registerCallbackConstructor(e,t){s.ZSL.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),f.checkForDuplicate(t),null==f.constructors[e]&&(f.constructors[e]=[]),f.constructors[e].push(t)}static checkForDuplicate(e){for(const t in f.constructors){f.constructors[+t].forEach((t=>{if(t===e)throw new a.Qp("Duplicate callback constructor.")}))}}static clear(){f.constructors={}}static createCallbacks(e){const t=[];for(const n in f.constructors){const r=+n;e>=r&&t.push(...f.constructors[r])}return t.map((e=>new e))}}function m(e,t,n,r,s,a,o,i,u){const d=new p,h=[new l,...f.createCallbacks(t)];null!=e&&h.push(...e),h.push(d);const m=new c(h);return m.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:u}),{callbackList:m,history:d}}f.constructors={}},9459:function(e,t,n){"use strict";n.d(t,{BC:function(){return h},IU:function(){return d},Kx:function(){return c},Uc:function(){return f},tB:function(){return u},uM:function(){return o},uU:function(){return i}});var r=n(4604),s=n(4813);const a=new Map;function o(e){(0,s.E6)(r.To,"DataFormat",e)}function i(e){(0,s.E6)(r.ft,"InterpolationFormat",e)}function u(e){(0,s.E6)(r.EY,"PaddingMode",e)}function c(e){(0,s.E6)(r.bb,"PoolMode",e)}const l=[],p="/";function d(e,t){l.push(e);try{const e=t();return l.pop(),e}catch(n){throw l.pop(),n}}function h(e){if(!g(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===l.length?"":l.join(p)+p)+e}function f(e){if(!g(e))throw new Error("Not a valid tensor name: '"+e+"'");a.has(e)||a.set(e,0);const t=a.get(e);if(a.set(e,a.get(e)+1),t>0){const n=`${e}_${t}`;return a.set(n,1),n}return e}const m=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function g(e){return!!e.match(m)}},7504:function(e,t,n){"use strict";n.d(t,{YZ:function(){return m},uH:function(){return h}});var r=n(5840),s=n(6090),a=n(4813);function o(e,t){return(0,r.DZQ)((()=>r.RZD(r.czq(r.lKK(e,e),t,!0))))}class i extends r.JFn.Serializable{getConfig(){return{}}}class u extends i{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.DZQ)((()=>{const t=o(e,this.axis),n=r.zQh(t,0,this.maxValue);return r.lKK(e,r.y4m(n,r.WQq((0,s.Ni)(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}u.className="MaxNorm",r.JFn.registerClass(u);class c extends i{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.DZQ)((()=>r.y4m(e,r.WQq((0,s.Ni)(),o(e,this.axis)))))}getConfig(){return{axis:this.axis}}}c.className="UnitNorm",r.JFn.registerClass(c);class l extends i{apply(e){return r.VVh(e)}}l.className="NonNeg",r.JFn.registerClass(l);class p extends i{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.DZQ)((()=>{const t=o(e,this.axis),n=r.WQq(r.lKK(this.rate,r.zQh(t,this.minValue,this.maxValue)),r.lKK(1-this.rate,t));return r.lKK(e,r.y4m(n,r.WQq((0,s.Ni)(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}p.className="MinMaxNorm",r.JFn.registerClass(p);const d={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function h(e){return(0,a.k4)(e)}function f(e,t={}){return(0,a.Xv)(e,r.JFn.SerializationMap.getMap().classNameMap,t,"constraint")}function m(e){if(null==e)return null;if("string"==typeof e){return f({className:e in d?d[e]:e,config:{}})}return e instanceof i?e:f(e)}},1499:function(e,t,n){"use strict";n.d(t,{RW:function(){return c},g7:function(){return h},oR:function(){return d}});var r=n(5840),s=n(5841);class a{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}var o=n(4813),i=n(8825),u=n(9730);class c{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof c)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new s.Qp(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,r.wgE)(t,e.dtype)}catch(n){throw new s.Qp(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof u.Ar){if(null==this.id2Value[e.id])throw new s.Qp(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new s.Qp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof u.Ar){if(null==this.id2Value[e.id])throw new s.Qp(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new s.Qp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,r.ASo)(this.id2Mask)}}const l=new a,p=new a;function d(e){null!=l&&l.setMaxEntries(e),null!=p&&p.setMaxEntries(e)}function h(e,t,n,s){const a=null!=n&&n.training,u=Array.isArray(e),d=u?e:[e],h=d.map((e=>e.name)),y=[],b=t.names();for(const r of h)-1!==b.indexOf(r)?y.push(t.getValue(r)):y.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const x=h.join(",")+"|"+t.names().sort().join(",");let v,w=l.get(x);if(null==w){const e=function(e,t){r.ZSL.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=m(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:o}=m(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in o)null==s[t]&&(s[t]=new Set),o[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:f(s)}}(d,t);w=e.sorted,v=e.recipientCounts,l.put(x,w),p.put(x,v)}v={},a||Object.assign(v,p.get(x));const k=new c(t);for(let c=0;c<w.length;++c){if(null!=s){const e=(0,r.m1Z)().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const e=w[c],u=e.sourceLayer;if(u instanceof i.m)continue;const l=[],p=[],d=[];let f=!1;for(const n of e.inputs){const e=k.getValue(n),r=k.getMask(n);l.push(e),p.push(r),null!=r&&(f=!0),a||(v[n.name]--,0!==v[n.name]||t.hasKey(n)||-1!==h.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||d.push(e))}f&&((n=n||{}).mask=p[0]);const m=(0,o.st)(u.apply(l,n));let b=null;u.supportsMasking&&(b=u.computeMask(l,p));const x=g(e),T=Array.isArray(x)?x:[x];for(let t=0;t<T.length;++t){k.hasKey(T[t])||k.add(T[t],m[t],Array.isArray(b)?b[0]:b);const e=h.indexOf(T[t].name);-1!==e&&(y[e]=m[t])}a||(0,r.ASo)(d)}return k.disposeMasks(),u?y:y[0]}function f(e){const t={};for(const n in e)t[n]=e[n].size;return t}function m(e,t){const n=new Set,r=[],s={};for(const i of t.names())n.add(i);const a=[],o=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=o[o.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&o.pop();else{o.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function g(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}},8825:function(e,t,n){"use strict";n.d(t,{m:function(){return i},p:function(){return u}});var r=n(5840),s=n(1686),a=n(5841),o=n(9730);class i extends o.Wd{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:(0,s.v)("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new a.Qp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new a.Qp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new a.Qp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new o.Ar(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new o.bP({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new a.Qp(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function u(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new a.Qp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new i({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}i.className="InputLayer",r.JFn.registerClass(i)},9730:function(e,t,n){"use strict";n.d(t,{Ar:function(){return h},Wd:function(){return y},X6:function(){return b},bP:function(){return m},eO:function(){return d}});var r=n(5840),s=n(1686),a=n(9459),o=n(5841),i=n(3684),u=n(4813),c=n(3057),l=n(4390),p=n(1765);class d{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class h{constructor(e,t,n,r,o,i,u){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=o,this.outputTensorIndex=u,this.id=(0,s.j)(),null!=i&&(this.originalName=(0,a.BC)(i),this.name=(0,a.Uc)(this.originalName)),this.rank=t.length}}let f=0;class m{constructor(e,t){this.callArgs=t,this.id=f++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let g=0;class y extends r.JFn.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=g++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=u.uc(e)+"_"+(0,s.v)(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new o.bu(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new o.Qp(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return u.wL(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return u.wL(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new o.l7(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new o.l7(`Layer ${this.name} is not connected, no input to return.`);return u.wL(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new o.l7(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new o.l7(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return u.wL(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=u.st(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=u.st(this.inputSpec);if(t.length!==n.length)throw new o.Qp(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const e=t[r],s=n[r];if(null==s)continue;const a=e.rank;if(null!=s.ndim&&a!==s.ndim)throw new o.Qp(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new o.Qp(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new o.Qp(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&e.dtype!==s.dtype)throw new o.Qp(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${e.dtype}.`);if(s.axes){const t=e.shape;for(const e in s.axes){const n=Number(e),a=s.axes[e],i=n>=0?t[n]:t[t.length+n];if(null!=a&&-1===[a,null].indexOf(i))throw new o.Qp(`Input ${r} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],a=e.shape[t];if(null!=n&&null!=a&&n!==a)throw new o.Qp(`Input ${r} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${e.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=u.st(e),r=function(e){let t=!0;for(const n of u.st(e))if(!(n instanceof h)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of u.st(e))if(n instanceof h){t=!1;break}return t}(e);if(r===s)throw new o.Qp("Arguments to apply() must be all SymbolicTensors or all Tensors");return(0,a.IU)(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of u.st(e))t.push(n.shape);this.build(u.wL(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=u.st(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=u.wL(a),null!=this.activityRegularizer)throw new o.EH("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=u.st(e);const t=[];for(const n of e)t.push(n.shape);return u.wL(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new h(a,n,this,u.st(e),t,this.name,r))):new h(a,r,this,u.st(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new o.EH("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new o.l7(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new o.l7(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new o.bu(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return l.Y(this.weights)}build(e){this.built=!0}getWeights(e=!1){return(0,p.ex)(e?this.trainableWeights:this.weights)}setWeights(e){(0,r.DZQ)((()=>{const t=this.weights;if(t.length!==e.length)throw new o.Qp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=(0,p.ex)(t);for(let a=0;a<s.length;++a){const i=s[a],u=t[a],c=e[a];if(!r.ZSL.arraysEqual(i.shape,c.shape))throw new o.Qp(`Layer weight shape ${i.shape} not compatible with provided weight shape ${c.shape}`);n.push([u,c])}(0,p.UM)(n)}))}addWeight(e,t,n,r,s,a,u,c){if(-1!==this._addedWeightNames.indexOf(e))throw new o.Qp(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=c?c():(0,i.Fe)("zeros"));const l=r.apply(t,n),d=new p.eR(l,n,e,a,u);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(d.read()))),null==a&&(a=!0),a?this._trainableWeights.push(d):this._nonTrainableWeights.push(d),d}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=u.st(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=u.st(t),a=u.st(r);if(s.length!==a.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let o=0;o<s.length;o++)s[o].kerasMask=a[o]}addInboundNode(e,t,n,r,s,a,o=null){const i=u.st(e);t=u.st(t),n=u.st(n),r=u.st(r),s=c.FS(s),a=c.FS(a);const l=[],p=[],d=[];for(const u of i)l.push(u.sourceLayer),p.push(u.nodeIndex),d.push(u.tensorIndex);new m({outboundLayer:this,inboundLayers:l,nodeIndices:p,tensorIndices:d,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},o);for(let u=0;u<t.length;u++)t[u].sourceLayer=this,t[u].nodeIndex=this.inboundNodes.length-1,t[u].tensorIndex=u}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function b(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=b(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}},8414:function(e,t,n){"use strict";n.d(t,{O:function(){return d},c:function(){return f}});var r=n(5840),s=n(5244),a=n(5841),o=n(6681),i=n(4813),u=n(959);const c=32;function l(e,t){let n,s;const a=t;n=a.xs,s=a.ys,r.ZSL.assert(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const o=p("input",e.inputNames,n),i=p("output",e.outputNames,s),u=o[0].shape[0];r.ZSL.assert(o.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),r.ZSL.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let c=0;c<o.length;c++)r.ZSL.assert(o[c].shape[0]===u,(()=>`Batch size mismatch: input ${e.inputNames[c]} has ${o[c].shape[0]}; expected  ${u} based on input ${e.inputNames[0]}.`));for(let c=0;c<i.length;c++)r.ZSL.assert(i[c].shape[0]===u,(()=>`Batch size mismatch: output ${e.outputNames[c]} has ${i[c].shape[0]}; expected  ${u} based on input ${e.inputNames[0]}.`));return{xs:o,ys:i}}function p(e,t,n){if(n instanceof r.qYS)return[n];if(Array.isArray(n))return r.ZSL.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new a.Qp(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}async function d(e,t,n){const p=null!=n.batchesPerEpoch;if(r.ZSL.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),r.ZSL.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),r.ZSL.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),r.ZSL.assert(!p||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),r.ZSL.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const d=null!=n.validationData;let f,m;if(d)if(h(n.validationData))r.ZSL.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new a.EH("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);f=e.xs,m=e.ys}const g=e.makeTrainFunction(),y=e.getDedupedMetricsNames();let b;b=d?y.slice().concat(y.map((e=>"val_"+e))):y.slice();const x=(0,s.Eq)(n.callbacks,n.yieldEvery),v=null==n.verbose?1:n.verbose,{callbackList:w,history:k}=(0,s.dY)(x,v,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,d,b);w.setModel(e),e.history=k,await w.onTrainBegin(),e.stopTraining_=!1;let T=null==n.initialEpoch?0:n.initialEpoch,S=await t.iterator();for(;T<n.epochs;){const s={};await w.onEpochBegin(T);let a=0,b=0;for(p||(S=await t.iterator());!p||a<n.batchesPerEpoch;){const t=await S.next();if(p&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${a} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:i}=l(e,t.value),c={};c.batch=b,c.size=s[0].shape[0],await w.onBatchBegin(b,c);const p=[];if(null!=n.classWeight){const t=(0,u.zO)(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)p.push(await(0,u.tP)(i[e],null,t[e]))}const d=s.concat(i).concat(p),h=g(d);r.ASo(d);for(let e=0;e<y.length;++e){const t=y[e],n=h[e];c[t]=n,r.aCs(n)}await w.onBatchEnd(b,c),(0,o.i)(c),b++,a++}if(p?a>=n.batchesPerEpoch:t.done){if(d){let t;t=h(n.validationData)?(0,i.st)(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):(0,i.st)(e.evaluate(f,m,{batchSize:null==n.validationBatchSize?c:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)s[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await w.onEpochEnd(T,s),T++,e.stopTraining_)break}return await w.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function h(e){return"function"==typeof e.iterator}async function f(e,t,n){const s=null!=(n=n||{}).batches,o=e.testFunction;let u=[];if(n.verbose>0)throw new a.EH("Verbose mode is not implemented yet.");r.ZSL.assert(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const c="function"==typeof t.next?t:await t.iterator();let p=0,d=0;for(;!s||d<n.batches;){const t=await c.next();if(u=r.DZQ((()=>{if(t.value){const{xs:n,ys:s}=l(e,t.value),a=n.concat(s),i=r.DZQ((()=>o(a)));if(r.ASo(a),0===d)for(let e=0;e<i.length;++e)u.push((0,r.d_2)(0));const c=a[0].shape[0];for(let e=0;e<i.length;++e){const t=i[e],n=u[e];u[e]=r.DZQ((()=>r.WQq(u[e],r.lKK(c,t)))),d>0&&r.ASo(n)}r.ASo(i),p+=c,++d}return u})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let a=0;a<u.length;++a){const e=u[a];u[a]=r.y4m(u[a],p),r.ASo(e)}return(0,i.wL)(u)}},1372:function(e,t,n){"use strict";n.d(t,{DE:function(){return i},Ec:function(){return l},Pe:function(){return o},XX:function(){return u},n4:function(){return c},yy:function(){return a}});var r=n(5840),s=n(7661);function a(e){r.ZSL.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function o(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>(0,s.Dh)(e,t,n-t))):(0,s.Dh)(e,t,n-t)}function i(e,t){return r.DZQ((()=>null==e?null:Array.isArray(e)?e.map((e=>i(e,t))):(0,s.kg)(e,"int32"===t.dtype?t:r.wgE(t,"int32"))))}function u(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function c(e){const t=[];e instanceof r.qYS&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push((0,s.UG)(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function l(e,t){if(null==e)return;const n=[];if(t instanceof r.qYS)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const s=[];if(e instanceof r.qYS)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&s.push(t)}s.forEach((e=>{e.isDisposed||e.dispose()}))}},959:function(e,t,n){"use strict";n.d(t,{M5:function(){return i},tP:function(){return o},zO:function(){return a}});var r=n(5840);function s(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function a(e,t){return s(e,t,"classWeight")}async function o(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,r.DZQ)((()=>{if(1===e.shape.length)return(0,r.o8B)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,r.FLi)(e,t)}if(1===e.shape[1])return(0,r.tQQ)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());(0,r.ASo)(t);const a=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),(0,r.tGX)(a,"float32")}return null}function i(e,t){return(0,r.lKK)(e,t)}},5841:function(e,t,n){"use strict";n.d(t,{EH:function(){return o},Qp:function(){return a},bu:function(){return s},l7:function(){return r},pf:function(){return i}});class r extends Error{constructor(e){super(e),Object.setPrototypeOf(this,r.prototype)}}class s extends Error{constructor(e){super(e),Object.setPrototypeOf(this,s.prototype)}}class a extends Error{constructor(e){super(e),Object.setPrototypeOf(this,a.prototype)}}class o extends Error{constructor(e){super(e),Object.setPrototypeOf(this,o.prototype)}}class i extends Error{constructor(e){super(e),Object.setPrototypeOf(this,i.prototype)}}Error},159:function(e,t,n){"use strict";n(5244),n(8825),n(9013),n(3976)},3684:function(e,t,n){"use strict";n.d(t,{H4:function(){return p},sN:function(){return h},Fe:function(){return $},zo:function(){return A}});var r=n(5840),s=n(7661),a=n(9459),o=n(5841);const i=["fanIn","fanOut","fanAvg"],u=["normal","uniform","truncatedNormal"];var c=n(4813),l=n(3072);class p extends r.JFn.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class d extends p{apply(e,t){return(0,r.Ul9)(e,t)}}d.className="Zeros",r.JFn.registerClass(d);class h extends p{apply(e,t){return(0,r.SaS)(e,t)}}h.className="Ones",r.JFn.registerClass(h);class f extends p{constructor(e){if(super(),"object"!=typeof e)throw new o.Qp(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new o.Qp(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,r.DZQ)((()=>(0,r.lKK)((0,r.d_2)(this.value),(0,r.SaS)(e,t))))}getConfig(){return{value:this.value}}}f.className="Constant",r.JFn.registerClass(f);class m extends p{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,r.YeY)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}m.className="RandomUniform",r.JFn.registerClass(m);class g extends p{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new o.EH(`randomNormal does not support dType ${t}.`);return s.FE(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}g.className="RandomNormal",r.JFn.registerClass(g);class y extends p{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new o.EH(`truncatedNormal does not support dType ${t}.`);return(0,r.efE)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}y.className="TruncatedNormal",r.JFn.registerClass(y);class b extends p{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,r.DZQ)((()=>{if(2!==e.length||e[0]!==e[1])throw new o.Qp("Identity matrix initializer can only be used for 2D square matrices.");return(0,r.lKK)(this.gain,(0,r.y5U)(e[0]))}))}getConfig(){return{gain:this.gain}}}b.className="Identity",r.JFn.registerClass(b);class x extends p{constructor(e){if(super(),e.scale<0)throw new o.Qp(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,(0,c.E6)(i,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){(0,c.E6)(u,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if((0,a.uM)(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=(0,l.no)(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=(0,l.no)(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=(0,l.no)(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),s=n[0],i=n[1];let u=this.scale;if("fanIn"===this.mode?u/=Math.max(1,s):"fanOut"===this.mode?u/=Math.max(1,i):u/=Math.max(1,(s+i)/2),"normal"===this.distribution){const n=Math.sqrt(u);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new o.EH(`${this.getClassName()} does not support dType ${t}.`);return(0,r.efE)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*u);return(0,r.YeY)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}x.className="VarianceScaling",r.JFn.registerClass(x);class v extends x{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return x.className}}v.className="GlorotUniform",r.JFn.registerClass(v);class w extends x{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return x.className}}w.className="GlorotNormal",r.JFn.registerClass(w);class k extends x{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return x.className}}k.className="HeNormal",r.JFn.registerClass(k);class T extends x{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return x.className}}T.className="HeUniform",r.JFn.registerClass(T);class S extends x{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return x.className}}S.className="LeCunNormal",r.JFn.registerClass(S);class N extends x{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return x.className}}N.className="LeCunUniform",r.JFn.registerClass(N);class I extends p{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,r.DZQ)((()=>{if(e.length<2)throw new o.EH("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=r.ZSL.sizeFromShape(e.slice(0,-1)),a=e[e.length-1],i=n*a;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);const u=[Math.max(a,n),Math.min(a,n)],c=s.FE(u,0,1,t,this.seed),l=r.mPL.qr(c,!1);let p=l[0];const d=l[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return p=(0,r.lKK)(p,d.sign()),n<a&&(p=p.transpose()),(0,r.lKK)((0,r.d_2)(this.gain),p.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}I.className="Orthogonal",r.JFn.registerClass(I);const C={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function E(e,t={}){return(0,c.Xv)(e,r.JFn.SerializationMap.getMap().classNameMap,t,"initializer")}function A(e){return(0,c.k4)(e)}function $(e){if("string"==typeof e){const t=e in C?C[e]:e;if("GlorotNormal"===t)return new w;if("GlorotUniform"===t)return new v;if("HeNormal"===t)return new k;if("HeUniform"===t)return new T;if("LeCunNormal"===t)return new S;if("LeCunUniform"===t)return new N;{const e={};return e.className=t,e.config={},E(e)}}return e instanceof p?e:E(e)}},4604:function(e,t,n){"use strict";n.d(t,{EY:function(){return a},To:function(){return r},bb:function(){return o},ft:function(){return s},r$:function(){return i}});const r=["channelsFirst","channelsLast"],s=["nearest","bilinear"],a=["valid","same","causal"],o=["max","avg"],i=["sum","mul","concat","ave"]},8955:function(e,t,n){"use strict";var r=n(5840),s=n(2266),a=n(7504),o=n(9730),i=n(5841),u=n(3684),c=n(4379),l=n(3057);class p extends o.Wd{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=(0,l.un)(e);let n=(0,r.VVh)(e);return null!=this.maxValue&&(n=(0,r.zQh)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}p.className="ReLU",r.JFn.registerClass(p);class d extends o.Wd{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=(0,l.un)(e);return(0,r.H8d)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}d.className="LeakyReLU",r.JFn.registerClass(d);class h extends o.Wd{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=(0,u.Fe)(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=(0,c.Bm)(e.alphaRegularizer),this.alphaConstraint=(0,a.YZ)(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new i.Qp(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=(0,l.U$)(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new o.eO({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=(0,l.un)(e),(0,r.NsG)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:(0,u.zo)(this.alphaInitializer),alphaRegularizer:(0,c.R9)(this.alphaRegularizer),alphaConstraint:(0,a.uH)(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}h.className="PReLU",r.JFn.registerClass(h);class f extends o.Wd{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new i.EH(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=(0,l.un)(e);return(0,r.Pqc)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}f.className="ELU",r.JFn.registerClass(f);class m extends o.Wd{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=(0,l.un)(e);return(0,r.lKK)(n,(0,r.wgE)((0,r.rhj)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}m.className="ThresholdedReLU",r.JFn.registerClass(m);class g extends o.Wd{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new s.rF).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return(0,r.DZQ)((()=>{let n=(0,l.un)(e);const s=t.mask;if(null!=s){const e=(0,r.lKK)((0,r.jbE)((0,r.SaS)(n.shape),(0,r.wgE)(s,n.dtype)),(0,r.d_2)(-1e9));n=(0,r.WQq)(n,e)}return this.axis instanceof Array?this.axis.length>1?(0,r.oNF)((0,r.jbE)(n,(0,r.VZ)(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}g.className="Softmax",r.JFn.registerClass(g)},2638:function(e,t,n){"use strict";var r=n(5840),s=n(6090),a=n(7661),o=n(9459),i=n(7504),u=n(5841),c=n(3684),l=n(4379),p=n(9184),d=n(3057),h=n(9548);class f extends h.kO{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=(0,c.Fe)(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=(0,i.YZ)(e.depthwiseConstraint),this.depthwiseRegularizer=(0,l.Bm)(e.depthwiseRegularizer)}build(e){if((e=(0,d.U$)(e)).length<4)throw new u.Qp(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new u.Qp(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,r.DZQ)((()=>{let t=function(e,t,n=[1,1],a="valid",i,c){return(0,r.DZQ)((()=>{null==i&&(i=(0,s.VI)()),(0,o.uM)(i);let l=(0,h.RK)(e,i);if(4!==e.rank)throw new u.Qp(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new u.Qp(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return l=r.Gl3(l,t,n,"same"===a?"same":"valid","NHWC",c),"channelsFirst"===i&&(l=r.mgz(l,[0,3,1,2])),l}))}(e=(0,d.un)(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=a.ni(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=(0,d.U$)(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=(0,p.Ol)(t,this.kernelSize[0],this.padding,this.strides[0]),a=(0,p.Ol)(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=(0,c.zo)(this.depthwiseInitializer),e.depthwiseRegularizer=(0,l.R9)(this.depthwiseRegularizer),e.depthwiseConstraint=(0,i.uH)(this.depthwiseRegularizer),e}}f.className="DepthwiseConv2D",r.JFn.registerClass(f)},9297:function(e,t,n){"use strict";var r=n(5840),s=n(7661),a=n(9459),o=n(9730),i=n(5841),u=n(3684),c=n(9184),l=n(4813),p=n(3057),d=n(6481),h=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class f extends d.VS{constructor(e){if(e.unroll)throw new i.EH("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new i.EH("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new o.eO({ndim:5})]}call(e,t){return r.DZQ((()=>{if(null!=this.cell.dropoutMask&&(r.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new i.Qp("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return r.DZQ((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)],o=r.Ul9(a);return Array.isArray(t)?Array(t.length).fill(o):[o]}))}resetStates(e,t=!1){r.DZQ((()=>{if(!this.stateful)throw new i.l7("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)];if(null==n[0])throw new i.Qp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>r.Ul9(a))):this.states_=[r.Ul9(a)];else if(null==e)r.ASo(this.states_),null!=this.keptStates&&(r.ASo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>r.Ul9(a))):this.states_[0]=r.Ul9(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new i.Qp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):r.ASo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=a;if(!r.ZSL.arraysEqual(n.shape,s))throw new i.Qp(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>r.aCs(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:o}=this.cell,i="channelsFirst"===t,u=e[i?3:2],l=e[i?4:3],p=(0,c.Ol)(u,r[0],s,a[0],o[0]),d=(0,c.Ol)(l,r[1],s,a[1],o[1]);return[...e.slice(0,2),...i?[n,p,d]:[p,d,n]]}}f.className="ConvRNN2D";class m extends d.Tu{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:o,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,(0,l.oo)(this.filters,"filters"),this.kernelSize=(0,c.J)(n,2,"kernelSize"),this.kernelSize.forEach((e=>(0,l.oo)(e,"kernelSize"))),this.strides=(0,c.J)(r||1,2,"strides"),this.strides.forEach((e=>(0,l.oo)(e,"strides"))),this.padding=s||"valid",(0,a.tB)(this.padding),this.dataFormat=o||"channelsLast",(0,a.uM)(this.dataFormat),this.dilationRate=(0,c.J)(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>(0,l.oo)(e,"dilationRate")))}build(e){var t;e=(0,p.U$)(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new i.Qp(`The channel dimension of the input should be defined. Found ${e[n]}`);const a=e[n],o=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const c=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",c,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends u.H4{apply(e,t){const o=n.apply([a]),i=r.SaS([a]),u=n.apply([2*a]);return s.u1([o,i,u])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return r.DZQ((()=>{if(3!==e.length)throw new i.Qp(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],a=e[1],o=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=(0,d.FW)({ones:()=>r.P61(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,c=(e,t,n)=>t&&t[n]?r.lKK(t[n],e):e;let l=c(s,u,0),p=c(s,u,1),h=c(s,u,2),f=c(s,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=(0,d.FW)({ones:()=>r.P61(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const m=this.recurrentDropoutMask;let g=c(a,m,0),y=c(a,m,1),b=c(a,m,2),x=c(a,m,3);const[v,w,k,T]=r.lDo(this.kernel.read(),4,3),[S,N,I,C]=this.useBias?r.lDo(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,v,S,this.padding),p=this.inputConv(p,w,N,this.padding),h=this.inputConv(h,k,I,this.padding),f=this.inputConv(f,T,C,this.padding);const[E,A,$,F]=r.lDo(this.recurrentKernel.read(),4,3);g=this.recurrentConv(g,E),y=this.recurrentConv(y,A),b=this.recurrentConv(b,$),x=this.recurrentConv(x,F);const R=this.recurrentActivation.apply(r.WQq(l,g)),D=this.recurrentActivation.apply(r.WQq(p,y)),_=r.WQq(r.lKK(D,o),r.lKK(R,this.activation.apply(r.WQq(h,b)))),O=r.lKK(this.recurrentActivation.apply(r.WQq(f,x)),this.activation.apply(_));return[O,O,_]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=h(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,a){const o=r.Xtf(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?s.ni(o,n,this.dataFormat):o}recurrentConv(e,t){return r.Xtf(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}m.className="ConvLSTM2DCell",r.JFn.registerClass(m);class g extends f{constructor(e){const t=new m(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}g.className="ConvLSTM2D",r.JFn.registerClass(g)},7580:function(e,t,n){"use strict";var r=n(5840),s=n(2266),a=n(7661),o=n(7504),i=n(9730),u=n(5841),c=n(3684),l=n(4379),p=n(4813),d=n(3072),h=n(3057);class f extends i.Wd{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return(0,r.DZQ)((()=>{this.invokeCallHook(e,t);const n=(0,h.un)(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return a.Ls((()=>a.EZ(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}f.className="Dropout",r.JFn.registerClass(f);class m extends f{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}m.className="SpatialDropout1D",r.JFn.registerClass(m);class g extends i.Wd{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,(0,p.oo)(this.units,"units"),this.activation=(0,s.b_)(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=(0,c.Fe)(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=(0,c.Fe)(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=(0,o.YZ)(e.kernelConstraint),this.biasConstraint=(0,o.YZ)(e.biasConstraint),this.kernelRegularizer=(0,l.Bm)(e.kernelRegularizer),this.biasRegularizer=(0,l.Bm)(e.biasRegularizer),this.activityRegularizer=(0,l.Bm)(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=(0,h.U$)(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=(0,h.U$)(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,r.DZQ)((()=>{this.invokeCallHook(e,t);const n=(0,h.un)(e),r=(0,p.Cd)(this.activation.getClassName());let s;return null!=r?s=a.Om(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=a.Om(n,this.kernel.read()),null!=this.bias&&(s=a.ni(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:(0,s.Bu)(this.activation),useBias:this.useBias,kernelInitializer:(0,c.zo)(this.kernelInitializer),biasInitializer:(0,c.zo)(this.biasInitializer),kernelRegularizer:(0,l.R9)(this.kernelRegularizer),biasRegularizer:(0,l.R9)(this.biasRegularizer),activityRegularizer:(0,l.R9)(this.activityRegularizer),kernelConstraint:(0,o.uH)(this.kernelConstraint),biasConstraint:(0,o.uH)(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}g.className="Dense",r.JFn.registerClass(g);class y extends i.Wd{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=(0,h.U$)(e);for(const t of e.slice(1))if(null==t)throw new u.Qp(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],(0,d.no)(e,1)]}call(e,t){return(0,r.DZQ)((()=>{this.invokeCallHook(e,t);let n=(0,h.un)(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,r.mgz)(n,e)}return a.PS(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}y.className="Flatten",r.JFn.registerClass(y);class b extends i.Wd{constructor(e){super(e),this.supportsMasking=!0,this.activation=(0,s.b_)(e.activation)}call(e,t){return(0,r.DZQ)((()=>{this.invokeCallHook(e,t);const n=(0,h.un)(e);return this.activation.apply(n)}))}getConfig(){const e={activation:(0,s.Bu)(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}b.className="Activation",r.JFn.registerClass(b);class x extends i.Wd{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,r.DZQ)((()=>(e=(0,h.un)(e),a.ux(e,this.n))))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}x.className="RepeatVector",r.JFn.registerClass(x);class v extends i.Wd{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let i=0;i<r.length;++i){const e=r[i];if(this.isUnknown(e)){if(null!==a)throw new u.Qp("Can only specifiy one unknown dimension.");a=i}else s*=e}const o=(0,d.no)(e);if(null!==a){if(0===s||o%s!=0)throw new u.Qp(n);r[a]=o/s}else if(o!==s)throw new u.Qp(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,r.DZQ)((()=>{this.invokeCallHook(e,t);const n=(0,h.un)(e),s=n.shape,a=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return(0,r.tQQ)(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}v.className="Reshape",r.JFn.registerClass(v);class w extends i.Wd{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=(0,d.y1)(1,e.dims.length+1);if(!r.ZSL.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new i.eO({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=(0,h.U$)(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return(0,r.mgz)((0,h.un)(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}w.className="Permute",r.JFn.registerClass(w);class k extends i.Wd{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=(0,h.un)(e);return(0,r.bzn)((0,r.Ec)(n,this.maskValue),-1)}call(e,t){return(0,r.DZQ)((()=>{this.invokeCallHook(e,t);const n=(0,h.un)(e),s=(0,r.bzn)((0,r.Ec)(n,this.maskValue),-1,!0);return(0,r.lKK)(n,(0,r.wgE)(s,n.dtype))}))}}k.className="Masking",r.JFn.registerClass(k)},2629:function(e,t,n){"use strict";var r=n(5840),s=n(7661),a=n(7504),o=n(9730),i=n(5841),u=n(3684),c=n(4379),l=n(4813),p=n(3057);class d extends o.Wd{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(l.st(e.inputLength))}this.inputDim=e.inputDim,l.oo(this.inputDim,"inputDim"),this.outputDim=e.outputDim,l.oo(this.outputDim,"outputDim"),this.embeddingsInitializer=(0,u.Fe)(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=(0,c.Bm)(e.embeddingsRegularizer),this.activityRegularizer=(0,c.Bm)(e.activityRegularizer),this.embeddingsConstraint=(0,a.YZ)(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,r.DZQ)((()=>this.maskZero?(e=(0,p.un)(e),(0,r.Ec)(e,(0,r.POl)(e))):null))}computeOutputShape(e){if(e=(0,p.U$)(e),null==this.inputLength)return[...e,this.outputDim];const t=l.st(this.inputLength);if(t.length!==e.length-1)throw new i.Qp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new i.Qp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,r.DZQ)((()=>{this.invokeCallHook(e,t);let n=(0,p.un)(e);"int32"!==n.dtype&&(n=s.wg(n,"int32"));const a=s.kg(this.embeddings.read(),(0,r.tQQ)(n,[n.size]));return(0,r.tQQ)(a,(0,p.U$)(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:(0,u.zo)(this.embeddingsInitializer),embeddingsRegularizer:(0,c.R9)(this.embeddingsRegularizer),activityRegularizer:(0,c.R9)(this.activityRegularizer),embeddingsConstraint:(0,a.uH)(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}d.className="Embedding",r.JFn.registerClass(d)},7483:function(e,t,n){"use strict";var r=n(5840),s=n(7661),a=n(9730),o=n(5841),i=n(8981),u=n(4813),c=n(3072),l=n(3057);class p extends a.Wd{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new o.EH}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new o.Qp("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[(0,l.U$)(e)]),e.length<2)throw new o.Qp(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=u.Am(t),t.length>1)throw new o.Qp(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===u.Am(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,r.DZQ)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=c.T9(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=s.UG(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const o of e){const e=o.rank;if(null==e){const e=o.shape,s=e[0],a=e.slice(1).concat([s]);let i=r.tQQ(o,[s].concat(c.no(e.slice(1))));i=r.mgz(i,[1,0]),i=r.tQQ(i,a),t.push(i),n=!0}else if(e>1){const s=c.y1(1,e).concat([0]);t.push(r.mgz(o,s)),n=!0}else t.push(o)}let s=this.mergeFunction(t);const a=s.rank;if(n)if(null==a){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=r.tQQ(r.mgz(r.tQQ(s,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(c.y1(0,a-1));s=r.mgz(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=u.Am(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return r.DZQ((()=>{if(null==t)return null;if(!Array.isArray(t))throw new o.Qp("`mask` should be an Array");if(!Array.isArray(e))throw new o.Qp("`inputs` should be an Array");if(t.length!==e.length)throw new o.Qp(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:r.UG6(e,0))))[0];for(let e=1;e<t.length-1;++e)n=r.n76(n,t[e]);return n}))}}class d extends p{constructor(e){super(e)}mergeFunction(e){return(0,r.DZQ)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.WQq(t,e[n]);return t}))}}d.className="Add",r.JFn.registerClass(d);class h extends p{constructor(e){super(e)}mergeFunction(e){return(0,r.DZQ)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.lKK(t,e[n]);return t}))}}h.className="Multiply",r.JFn.registerClass(h);class f extends p{constructor(e){super(e)}mergeFunction(e){return(0,r.DZQ)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.WQq(t,e[n]);return r.lKK(1/e.length,t)}))}}f.className="Average",r.JFn.registerClass(f);class m extends p{constructor(e){super(e)}mergeFunction(e){return(0,r.DZQ)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=r.PhQ(t,e[n]);return t}))}}m.className="Maximum",r.JFn.registerClass(m);class g extends p{constructor(e){super(e)}mergeFunction(e){return(0,r.DZQ)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=r.BpO(t,e[n]);return t}))}}g.className="Minimum",r.JFn.registerClass(g);class y extends p{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new o.Qp("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let s=0;s<e.length;++s){const t=e[s].slice();t.splice(this.axis,1);let a=!1;for(const e of n)if(r.ZSL.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new o.Qp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,r.DZQ)((()=>s.u1(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new o.Qp("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new o.Qp("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new o.Qp("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new o.Qp(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return r.DZQ((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let o=0;o<e.length;++o)null==t[o]?s.push(r.wgE(r.P61(e[o]),"bool")):t[o].rank<e[o].rank?s.push(r.UG6(t[o],-1)):s.push(t[o]);const a=r.xWs(s,this.axis);return r.Q7R(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function b(e,t){for(;e<0;)e+=t;return e}y.className="Concatenate",r.JFn.registerClass(y);class x extends p{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){r.ZSL.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new o.EH("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new o.Qp(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new o.Qp(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>b(t,e[n].shape.length))):[b(this.axes,n.shape.length),b(this.axes,s.shape.length)],this.normalize&&(n=(0,i.Yq)(n,t[0]),s=(0,i.Yq)(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new o.EH("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.ZSL.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),r.ZSL.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new o.EH("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,a=t.shape.length;null==n&&(n=[s-1,a-2]);const i=n;return r.DZQ((()=>{let n,o;if(s>a){n=s-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=r.tQQ(t,t.shape.concat(e))}else if(a>s){n=a-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=r.tQQ(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=i[0]===i[1]?r.czq(r.lKK(e,t),i[0]):r.czq(r.lKK(r.mgz(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,s=i[1]===t.shape.length-1;o=r.NoW(e,t,n,s)}if(n>0){let e;e=s>a?s+a-3:s-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);o=r.r2V(o,t)}return 1===o.shape.length&&(o=r.UG6(o,1)),o}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[b(this.axes,e.length),b(this.axes,t.length)],n}computeOutputShape(e){r.ZSL.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new o.EH("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}x.className="Dot",r.JFn.registerClass(x)},6165:function(e,t,n){"use strict";var r=n(5840),s=n(7661),a=n(9730),o=n(3057);class i extends a.Wd{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,r.DZQ)((()=>{this.invokeCallHook(e,t);const n=(0,o.un)(e);return s.Ls((()=>(0,r.WQq)(s.FE(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}i.className="GaussianNoise",r.JFn.registerClass(i);class u extends a.Wd{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,r.DZQ)((()=>{this.invokeCallHook(e,t);const n=(0,o.un)(e);if(this.rate>0&&this.rate<1){const e=()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,r.lKK)(n,s.FE(n.shape,1,e))};return s.Ls(e,(()=>n),t.training||!1)}return n}))}}u.className="GaussianDropout",r.JFn.registerClass(u);class c extends a.Wd{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||(0,o.un)(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,r.DZQ)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=(0,o.un)(e),a=-1.7580993408473766;let i=(0,r.DQN)((0,r.YeY)(n),this.rate);i=s.wg(i,"float32");const u=((1-this.rate)*(1+this.rate*a**2))**-.5,c=-u*a*this.rate,l=(0,r.WQq)((0,r.lKK)(t,i),(0,r.lKK)((0,r.WQq)(i,-1),a));return(0,r.WQq)((0,r.lKK)(l,u),c)};return s.Ls(a,(()=>(0,o.un)(e)),t.training||!1)}return e}))}}c.className="AlphaDropout",r.JFn.registerClass(c)},8098:function(e,t,n){"use strict";var r=n(5840),s=n(7504),a=n(9730),o=n(5841),i=n(3684),u=n(4379),c=n(4813),l=n(3072),p=n(3057);function d(e,t,n,s,a,i=.001){let u;if(2===e.rank)u=r.BFc(e,t,n,s,a,i);else if(3===e.rank)u=r.kSi(e,t,n,s,a,i);else{if(4!==e.rank)throw new o.EH(`batchNormalization is not implemented for array of rank ${e.rank} yet`);u=r.T5N(e,t,n,s,a,i)}return u}function h(e,t,n,s,a=.001){return r.ZSL.arraysEqual(s.slice().sort(),l.y1(0,e.rank-1))?function(e,t,n,s,a=.001){return(0,r.DZQ)((()=>{const o=r.Clk(e,s),i=o.mean,u=o.variance;return[d(e,i,u,n,t,a),i,u]}))}(e,t,n,s,a):function(e,t,n,s,a=.001){return(0,r.DZQ)((()=>{const o=r.Clk(e,s),i=o.mean,u=o.variance,c=[];for(const t of l.y1(0,e.rank))-1!==s.indexOf(t)?c.push(1):c.push(e.shape[t]);const p=(0,r.tQQ)(i,c),h=(0,r.tQQ)(u,c),f=null==t?null:(0,r.tQQ)(t,c),m=null==n?null:(0,r.tQQ)(n,c);return[d(e,p,h,m,f,a),i,u]}))}(e,t,n,s,a)}class f extends a.Wd{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=(0,i.Fe)(e.betaInitializer||"zeros"),this.gammaInitializer=(0,i.Fe)(e.gammaInitializer||"ones"),this.movingMeanInitializer=(0,i.Fe)(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=(0,i.Fe)(e.movingVarianceInitializer||"ones"),this.betaConstraint=(0,s.YZ)(e.betaConstraint),this.gammaConstraint=(0,s.YZ)(e.gammaConstraint),this.betaRegularizer=(0,u.Bm)(e.betaRegularizer),this.gammaRegularizer=(0,u.Bm)(e.gammaRegularizer)}build(e){e=(0,p.U$)(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new o.Qp(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new a.eO({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,r.DZQ)((()=>{const n=null!=t.training&&t.training,s=(0,p.un)(e),a=s.shape,o=a.length,i=l.y1(0,o),u=this.axis>=0?this.axis:this.axis+o;i.splice(u,1);const f=c.fD(1,o);f[u]=a[u];const m=i.slice();m.sort();const g=!r.ZSL.arraysEqual(m,l.y1(0,o).slice(0,o-1));if(!n)return(()=>{if(g){const e=(0,r.tQQ)(this.movingMean.read(),f),t=(0,r.tQQ)(this.movingVariance.read(),f),n=this.center?(0,r.tQQ)(this.beta.read(),f):null,a=this.scale?(0,r.tQQ)(this.gamma.read(),f):null;return d(s,e,t,n,a,this.epsilon)}return d(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[y,b,x]=h(s,this.gamma.read(),this.beta.read(),i,this.epsilon),v=(e,t,n)=>{r.DZQ((()=>{const s=1-n,a=e.read(),o=r.lKK(r.jbE(a,t),s);e.write(r.jbE(a,o))}))};return(()=>{v(this.movingMean,b,this.momentum),v(this.movingVariance,x,this.momentum)})(),y}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,i.zo)(this.betaInitializer),gammaInitializer:(0,i.zo)(this.gammaInitializer),movingMeanInitializer:(0,i.zo)(this.movingMeanInitializer),movingVarianceInitializer:(0,i.zo)(this.movingVarianceInitializer),betaRegularizer:(0,u.R9)(this.betaRegularizer),gammaRegularizer:(0,u.R9)(this.gammaRegularizer),betaConstraint:(0,s.uH)(this.betaConstraint),gammaConstraint:(0,s.uH)(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}f.className="BatchNormalization",r.JFn.registerClass(f);class m extends a.Wd{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=(0,i.Fe)(e.betaInitializer||"zeros"),this.gammaInitializer=(0,i.Fe)(e.gammaInitializer||"ones"),this.betaRegularizer=(0,u.Bm)(e.betaRegularizer),this.gammaRegularizer=(0,u.Bm)(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=(0,p.U$)(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(const s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==c.Am(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=(0,p.un)(e),s=n.shape,a=s.length;return(0,r.DZQ)((()=>{let{mean:e,variance:t}=(0,r.Clk)(n,this.axis,!0);const o=c.fD(1,a);for(const n of this.axis)o[n]=s[n];const i=e=>null!=e&&e.shape.length!==a?r.tQQ(e,o):e;let u=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const p=[],h=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(p.push(s[n]),h.push(1)):(p.push(1),h.push(s[n]));return e=r.Vsq(e,p),t=r.Vsq(t,p),null!=u&&(u=r.Vsq(u,h)),null!=l&&(l=r.Vsq(l,h)),d(n,e,t,l,u,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,i.zo)(this.betaInitializer),gammaInitializer:(0,i.zo)(this.gammaInitializer),betaRegularizer:(0,u.R9)(this.betaRegularizer),gammaRegularizer:(0,u.R9)(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}m.className="LayerNormalization",r.JFn.registerClass(m)},9710:function(e,t,n){"use strict";var r=n(5840),s=n(6090),a=n(9730),o=n(5841),i=n(3057);class u extends a.Wd{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?(0,s.VI)():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new o.Qp(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new o.Qp(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new o.Qp(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new a.eO({ndim:4})]}computeOutputShape(e){let t,n;return e=(0,i.U$)(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,r.DZQ)((()=>{return t=(0,i.un)(e),n=this.padding,a=this.dataFormat,(0,r.DZQ)((()=>{if(4!==t.rank)throw new o.Qp(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new o.Qp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a=(0,s.VI)()),"channelsLast"!==a&&"channelsFirst"!==a)throw new o.Qp(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],r.eVF(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}u.className="ZeroPadding2D",r.JFn.registerClass(u)},7477:function(e,t,n){"use strict";var r=n(5840),s=n(6090),a=n(7661),o=n(9459),i=n(9730),u=n(5841),c=n(9184),l=n(4813),p=n(3057),d=n(9548);function h(e,t,n,a,i,u){return(0,r.DZQ)((()=>{let c;(0,o.uM)(i),(0,o.Kx)(u),(0,o.tB)(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==i&&(i=(0,s.VI)()),null==u&&(u="max"),e=(0,d.RK)(e,i);const l="same"===a?"same":"valid";return c="max"===u?r.jgi(e,t,n,l):r.$jT(e,t,n,l),"channelsFirst"===i&&(c=r.mgz(c,[0,3,1,2])),c}))}function f(e,t,n,a,i,u){return(0,r.DZQ)((()=>{let c;(0,o.uM)(i),(0,o.Kx)(u),(0,o.tB)(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==i&&(i=(0,s.VI)()),null==u&&(u="max"),e=(0,d.al)(e,i);const l="same"===a?"same":"valid";return c="max"===u?r.NYV(e,t,n,l):r.sub(e,t,n,l),"channelsFirst"===i&&(c=r.mgz(c,[0,4,1,2,3])),c}))}class m extends i.Wd{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new u.Qp(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if((0,l.oo)(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new u.Qp(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}(0,l.oo)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,(0,o.tB)(this.padding),this.inputSpec=[new i.eO({ndim:3})]}computeOutputShape(e){e=(0,p.U$)(e);const t=(0,c.Ol)(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,r.DZQ)((()=>{this.invokeCallHook(e,t),e=a.UG((0,p.un)(e),2);const n=this.poolingFunction((0,p.un)(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return r.r2V(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class g extends m{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,o.uM)(s),(0,o.tB)(r),h(e,t,n,r,s,"max")}}g.className="MaxPooling1D",r.JFn.registerClass(g);class y extends m{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,o.uM)(s),(0,o.tB)(r),h(e,t,n,r,s,"avg")}}y.className="AveragePooling1D",r.JFn.registerClass(y);class b extends i.Wd{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new u.Qp(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];(0,l.oo)(this.poolSize,"poolSize"),(0,l.oo)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,o.uM)(this.dataFormat),(0,o.tB)(this.padding),this.inputSpec=[new i.eO({ndim:4})]}computeOutputShape(e){e=(0,p.U$)(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=(0,c.Ol)(t,this.poolSize[0],this.padding,this.strides[0]),n=(0,c.Ol)(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,r.DZQ)((()=>(this.invokeCallHook(e,t),this.poolingFunction((0,p.un)(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class x extends b{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,o.uM)(s),(0,o.tB)(r),h(e,t,n,r,s,"max")}}x.className="MaxPooling2D",r.JFn.registerClass(x);class v extends b{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,o.uM)(s),(0,o.tB)(r),h(e,t,n,r,s,"avg")}}v.className="AveragePooling2D",r.JFn.registerClass(v);class w extends i.Wd{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new u.Qp(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];(0,l.oo)(this.poolSize,"poolSize"),(0,l.oo)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,o.uM)(this.dataFormat),(0,o.tB)(this.padding),this.inputSpec=[new i.eO({ndim:5})]}computeOutputShape(e){e=(0,p.U$)(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=(0,c.Ol)(t,this.poolSize[0],this.padding,this.strides[0]),n=(0,c.Ol)(n,this.poolSize[1],this.padding,this.strides[1]),r=(0,c.Ol)(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return(0,r.DZQ)((()=>(this.invokeCallHook(e,t),this.poolingFunction((0,p.un)(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class k extends w{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,o.uM)(s),(0,o.tB)(r),f(e,t,n,r,s,"max")}}k.className="MaxPooling3D",r.JFn.registerClass(k);class T extends w{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,o.uM)(s),(0,o.tB)(r),f(e,t,n,r,s,"avg")}}T.className="AveragePooling3D",r.JFn.registerClass(T);class S extends i.Wd{constructor(e){super(e),this.inputSpec=[new i.eO({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new u.EH}}class N extends S{constructor(e){super(e||{})}call(e,t){return(0,r.DZQ)((()=>{const t=(0,p.un)(e);return r.i2o(t,1)}))}}N.className="GlobalAveragePooling1D",r.JFn.registerClass(N);class I extends S{constructor(e){super(e||{})}call(e,t){return(0,r.DZQ)((()=>{const t=(0,p.un)(e);return r.T9B(t,1)}))}}I.className="GlobalMaxPooling1D",r.JFn.registerClass(I);class C extends i.Wd{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,o.uM)(this.dataFormat),this.inputSpec=[new i.eO({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new u.EH}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class E extends C{call(e,t){return(0,r.DZQ)((()=>{const t=(0,p.un)(e);return"channelsLast"===this.dataFormat?r.i2o(t,[1,2]):r.i2o(t,[2,3])}))}}E.className="GlobalAveragePooling2D",r.JFn.registerClass(E);class A extends C{call(e,t){return(0,r.DZQ)((()=>{const t=(0,p.un)(e);return"channelsLast"===this.dataFormat?r.T9B(t,[1,2]):r.T9B(t,[2,3])}))}}A.className="GlobalMaxPooling2D",r.JFn.registerClass(A)},7622:function(e,t,n){"use strict";var r=n(9730),s=n(5840),a=n(3057),o=n(5841),i=n(7661);class u extends r.Wd{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=(0,a.U$)(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,s.DZQ)((()=>{let n;if("int32"!==(e=(0,a.un)(e)).dtype&&(e=i.wg(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new o.Qp(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=(0,a.un)(t.countWeights)}const r=(0,s.T9B)(e),u=(0,s.jkA)(e),c=(0,s.rhj)(this.numTokens,r).bufferSync().get(0),l=(0,s.DQN)(u,0).bufferSync().get(0);if(!c||!l)throw new o.Qp(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let u=(0,a.un)(e);if("int32"!==u.dtype&&(u=i.wg(u,"int32")),"int"===t)return u;const c=u.shape;if(0===u.rank&&(u=(0,s.UG6)(u,-1)),"oneHot"===t&&1!==u.shape[u.shape.length-1]&&(u=(0,s.UG6)(u,-1)),u.rank>2)throw new o.Qp(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${c} which would result in output rank ${u.rank}.`);const l=["multiHot","oneHot"].includes(t),p=u;let d;if(d=void 0!==r&&"count"===t?(0,s.aOp)(p,r,n,l):(0,s.aOp)(p,[],n,l),"tfIdf"!==t)return d;if(r)return(0,s.lKK)(d,r);throw new o.Qp("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}u.className="CategoryEncoding",s.JFn.registerClass(u)},2822:function(e,t,n){"use strict";var r=n(5840),s=n(3057),a=n(9730),o=n(7661);const{resizeBilinear:i,cropAndResize:u}=r.Slp;class c extends a.Wd{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,i,c,l,p){return(0,r.DZQ)((()=>{let d,h=!1;const f=[t/c,n/l,(a+t)/c,(i+n)/l],m=[];3===e.rank?(h=!0,d=(0,r.t$z)([e])):d=e;for(let e=0;e<d.shape[0];e++)m.push(f);const g=(0,r.OEK)(m,[m.length,4]),y=(0,r.y17)(0,m.length,1,"int32"),b=u(d,g,y,[a,i],"nearest");return h?o.wg((0,s.un)((0,r.K$i)(b)),p):o.wg(b,p)}))}upsize(e,t,n,s){return(0,r.DZQ)((()=>{const r=i(e,[t,n]);return o.wg(r,s)}))}call(e,t){return(0,r.DZQ)((()=>{const t=(0,s.un)(e),n=t.dtype,r=t.shape,a=r[r.length-3],o=r[r.length-2];let i=0;a!==this.height&&(i=Math.floor((a-this.height)/2));let u=0;return o!==this.width&&(u=Math.floor((o-this.width)/2),0===u&&(u=1)),i>=0&&u>=0?this.centerCrop(t,i,u,this.height,this.width,a,o,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=(0,s.U$)(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}c.className="CenterCrop",r.JFn.registerClass(c)},9298:function(e,t,n){"use strict";var r=n(9730),s=n(5840),a=n(3057),o=n(7661);class i extends r.Wd{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,s.DZQ)((()=>("float32"!==(e=(0,a.un)(e)).dtype&&(e=o.wg(e,"float32")),(0,s.WQq)((0,s.lKK)(e,this.scale),this.offset))))}}i.className="Rescaling",s.JFn.registerClass(i)},4777:function(e,t,n){"use strict";var r=n(5840),s=n(9730),a=n(5841),o=n(3057);const i=new Set(["bilinear","nearest"]);class u extends s.Wd{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!i.has(e.interpolation))throw new a.Qp(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=(0,o.U$)(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,r.DZQ)((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return r.Slp.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return r.Slp.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...i]} are supported`)}))}}u.className="Resizing",r.JFn.registerClass(u)},3588:function(e,t,n){"use strict";var r=n(5840),s=n(3057),a=n(5841),o=n(9730);class i{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}i.className="RandomSeed";class u extends o.Wd{constructor(e){super(e),this.randomGenerator=new i(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}u.className="BaseRandomLayer";const c=new Set(["bilinear","nearest"]);class l extends u{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new a.Qp(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new a.Qp(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new a.Qp(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!c.has(n))throw new a.Qp(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=(0,s.U$)(e))[2];return[this.imgHeight,-1,t]}call(e,t){return(0,r.DZQ)((()=>{const t=(0,s.un)(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=(0,r.YeY)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const o=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return r.Slp.resizeBilinear(e,o);case"nearest":return r.Slp.resizeNearestNeighbor(e,o);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...c]} are supported`)}}))}}l.className="RandomWidth",r.JFn.registerClass(l)},5795:function(e,t,n){"use strict";n.d(t,{i:function(){return a}});var r=n(5840),s=n(4813);function a(e,t={},n=!1){return(0,s.Xv)(e,r.JFn.SerializationMap.getMap().classNameMap,t,"layer",n)}},2695:function(e,t,n){"use strict";var r=n(5840),s=n(7661),a=n(9459),o=n(9730),i=n(5841),u=n(4604),c=n(4813),l=n(3057),p=n(6481),d=n(5795);class h extends o.Wd{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=t.layer,s=(0,d.i)(r,n);delete t.layer;const a={layer:s};return Object.assign(a,t),new e(a)}}class f extends h{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=(0,l.U$)(e)).length<3)throw new i.Qp(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=(0,l.U$)(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return(0,r.DZQ)((()=>{e=(0,l.un)(e);return(0,p.L7)(((e,n)=>[(0,l.un)(this.layer.call(e,t)),[]]),e,[],!1,null,null,!1,!0)[1]}))}}f.className="TimeDistributed",r.JFn.registerClass(f);class m extends h{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=(0,d.i)(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=(0,d.i)(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,c.E6(u.r$,"BidirectionalMergeMode",s),e.weights)throw new i.EH("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):c.wL(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=(0,p.tL)(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],u=[];if(null!=n){const e=n.length;if(e%2>0)throw new i.Qp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new o.eO({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),u.push(...r)}if(null!=r)throw new i.EH("Support for constants in Bidirectional layers is not implemented yet.");const c=a[0]instanceof o.Ar;for(const l of a)if(l instanceof o.Ar!==c)throw new i.Qp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(c){const n=[e].concat(a),r=this.inputSpec.concat(u),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return(0,r.DZQ)((()=>{const n=t.initialState;let a,o,i,u;if(null==n)a=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const r=n.slice(0,n.length/2),s=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:r})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(a)&&(i=a.slice(1).concat(o.slice(1))),a=a[0],o=o[0]),this.returnSequences&&(o=r.BEg(o,1)),"concat"===this.mergeMode?u=s.u1([a,o]):"sum"===this.mergeMode?u=r.WQq(a,o):"ave"===this.mergeMode?u=r.lKK(.5,r.WQq(a,o)):"mul"===this.mergeMode?u=r.lKK(a,o):null==this.mergeMode&&(u=[a,o]),this.returnState?null==this.mergeMode?u.concat(i):[u].concat(i):u}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){(0,a.IU)(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),(0,a.IU)(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=(0,d.i)(t.layer);if(delete t.layer,null!=t.numConstants)throw new i.EH("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}m.className="Bidirectional",r.JFn.registerClass(m)},6681:function(e,t,n){"use strict";n.d(t,{I:function(){return s},i:function(){return a}});var r=n(5840);async function s(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];(0,r.ASo)(s)}}function a(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}},8981:function(e,t,n){"use strict";n.d(t,{Jc:function(){return f},Jt:function(){return b},Ol:function(){return d},Pg:function(){return g},SO:function(){return y},VW:function(){return l},Xv:function(){return c},Yq:function(){return i},bt:function(){return u},qp:function(){return h}});var r=n(5840),s=n(6090),a=n(7661),o=n(5841);function i(e,t){return(0,r.DZQ)((()=>{"float32"!==e.dtype&&(e=r.wgE(e,"float32"));const n=r.czq(a.Ew(e),t,!0),o=r.GSj(n.shape,(0,s.Ni)()),i=r.RZD(r.PhQ(n,o));return r.y4m(e,i)}))}function u(e,t){return(0,r.DZQ)((()=>r.i2o(a.Ew(r.jbE(t,e)),-1)))}function c(e,t){return(0,r.DZQ)((()=>r.i2o(r.tnl(r.jbE(t,e)),-1)))}function l(e,t){return(0,r.DZQ)((()=>{const n=r.jbE(e,t),a=r.zQh(r.tnl(e),(0,s.Ni)(),Number.MAX_VALUE),o=r.tnl(r.y4m(n,a));return r.lKK(100,r.i2o(o,-1))}))}function p(e,t){return(0,r.DZQ)((()=>{const n=r.zQh(t,(0,s.Ni)(),Number.MAX_VALUE),o=r.Rm2(r.WQq(1,n)),i=r.zQh(e,(0,s.Ni)(),Number.MAX_VALUE),u=r.Rm2(r.WQq(1,i));return r.i2o(a.Ew(r.jbE(o,u)),-1)}))}function d(e,t,n=!1){return(0,r.DZQ)((()=>{if(n)t=r.Vs9(t);else{const e=r.czq(t,t.shape.length-1,!0);t=r.y4m(t,e)}return t=r.zQh(t,(0,s.Ni)(),1-(0,s.Ni)()),r.HZy(r.czq(r.lKK(r.wgE(e,"float32"),r.Rm2(t)),t.shape.length-1))}))}function h(e,t,n=!1){return(0,r.DZQ)((()=>{const o=r.wgE(r.RIf(a.Bq(e)),"int32"),i=(t=r.zQh(t,(0,s.Ni)(),1-(0,s.Ni)())).shape;return d(r.tQQ(r.Mw0(o,i[i.length-1]),i),t,n)}))}function f(e,t){return(0,r.DZQ)((()=>{let n;return n=r.zQh(t,(0,s.Ni)(),1-(0,s.Ni)()),n=r.Rm2(r.y4m(n,r.jbE(1,n))),r.i2o(function(e,t){if(!r.ZSL.arraysEqual(e.shape,t.shape))throw new o.Qp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,r.DZQ)((()=>{const n=r.VVh(t),s=r.HZy(r.tnl(t));return r.WQq(r.jbE(n,r.lKK(t,e)),r.Kko(r.oNF(s)))}))}(e,n),-1)}))}function m(e,t){return(0,r.DZQ)((()=>{const n=r.zQh(e,(0,s.Ni)(),1),a=r.zQh(t,(0,s.Ni)(),1);return r.czq(r.lKK(e,r.Rm2(r.y4m(n,a))),-1)}))}function g(e,t){return(0,r.DZQ)((()=>{const n=i(e,-1),s=i(t,-1),a=r.lKK(n,s);return r.HZy(r.czq(a,-1))}))}const y={meanSquaredError:u,meanAbsoluteError:c,meanAbsolutePercentageError:l,meanSquaredLogarithmicError:p,squaredHinge:function(e,t){return(0,r.DZQ)((()=>{const n=r.PhQ(0,r.jbE(1,r.lKK(e,t)));return r.i2o(a.Ew(n),-1)}))},hinge:function(e,t){return(0,r.DZQ)((()=>{const n=r.PhQ(0,r.jbE(1,r.lKK(e,t)));return r.i2o(n,-1)}))},categoricalHinge:function(e,t){return(0,r.DZQ)((()=>{const n=r.czq(r.lKK(e,t),-1),s=r.T9B(r.lKK(r.jbE(1,e),t),-1);return r.PhQ(0,r.WQq(1,r.jbE(s,n)))}))},logcosh:function(e,t){return(0,r.DZQ)((()=>{const n=Math.log(2),s=r.jbE(t,e),a=r.jbE(r.WQq(s,r.lw0(r.lKK(-2,s))),n);return r.i2o(a,-1)}))},categoricalCrossentropy:d,sparseCategoricalCrossentropy:h,binaryCrossentropy:f,kullbackLeiblerDivergence:m,poisson:function(e,t){return(0,r.DZQ)((()=>{const n=r.Rm2(r.WQq((0,s.Ni)(),t));return r.i2o(r.jbE(t,r.lKK(e,n)),-1)}))},cosineProximity:g};function b(e){if("string"==typeof e){if(e in y)return y[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new o.Qp(t)}return e}},7937:function(e,t,n){"use strict";n.d(t,{GT:function(){return S},Jc:function(){return p},Jt:function(){return T},Ol:function(){return x},qp:function(){return w},qv:function(){return d},xM:function(){return u},yP:function(){return c}});var r=n(5840),s=n(7661),a=n(5841),o=n(8981),i=n(4813);function u(e,t){return(0,r.DZQ)((()=>{const n=r.lKK(.5,r.P61(t)),a=s.wg(r.rhj(t,n),e.dtype);return r.i2o(r.LCg(e,a),-1)}))}function c(e,t){return(0,r.DZQ)((()=>s.wg(r.LCg(r.FLi(e,-1),r.FLi(t,-1)),"float32")))}function l(e,t){return(0,r.DZQ)((()=>r.wgE(r.czq(r.n76(r.LCg(e,1),r.LCg(t,1))),"float32")))}function p(e,t){return(0,o.Jc)(e,t)}function d(e,t){return e.rank===t.rank&&(e=r.r2V(e,[e.rank-1])),(t=r.FLi(t,-1)).dtype!==e.dtype&&(t=r.wgE(t,e.dtype)),r.wgE(r.LCg(e,t),"float32")}const h=o.bt,f=o.bt,m=o.Xv,g=o.Xv,y=o.VW,b=o.VW,x=o.Ol,v=o.Pg,w=o.qp,k={binaryAccuracy:u,categoricalAccuracy:c,precision:function(e,t){return(0,r.DZQ)((()=>{const n=l(e,t),s=function(e,t){return(0,r.DZQ)((()=>r.wgE(r.czq(r.n76(r.LCg(e,0),r.LCg(t,1))),"float32")))}(e,t),a=r.WQq(n,s);return r.wgE(r._M9(r.rhj(a,0),r.y4m(n,a),0),"float32")}))},categoricalCrossentropy:x,sparseCategoricalCrossentropy:w,mse:h,MSE:f,mae:m,MAE:g,mape:y,MAPE:b,cosine:v};function T(e){if("string"==typeof e&&e in k)return k[e];if("string"!=typeof e&&null!=e)return e;throw new a.Qp(`Unknown metric ${e}`)}function S(e){if(i.vA(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(o.SO))if(o.SO[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(k))if(k[n]===e){t=n;break}return void 0!==t?t:e.name}}},3976:function(e,t,n){"use strict";var r=n(5840),s=n(1686),a=n(8825),o=n(9730),i=n(9013),u=n(5841),c=n(5795),l=n(4813),p=(n(1928),n(3057));class d extends i.Gw{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:(0,s.v)("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new u.Qp(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof d||e instanceof i.Gw;let n;if(t){if(n=e,1!==n.outputs.length)throw new u.Qp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new u.Qp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new u.Qp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=(0,a.p)({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new u.Qp(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new u.Qp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=(0,o.X6)(this.outputs[0])}this.inboundNodes=[],new o.bP({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:l.fD(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if((0,p.U$)(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new i.Gw({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new u.bu("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new u.bu("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new u.bu("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new u.bu("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let a,o={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new u.Qp("Legacy serialization format not supported yet.");a=t}else r.ZSL.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,o=t;const i=new e(o);if(!(i instanceof d))throw new u.EH(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const r of a){const e=void 0,t=(0,c.i)(r,e,s);s&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new u.Qp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new u.Qp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}d.className="Sequential",r.JFn.registerClass(d)},7430:function(e,t,n){"use strict";n.d(t,{K:function(){return o}});var r=n(5840),s=n(6090),a=n(5841);function o(e){const t={Adagrad:()=>r.BaG.adagrad(.01),Adadelta:()=>r.BaG.adadelta(1,.95,(0,s.Ni)()),Adam:()=>r.BaG.adam(.001,.9,.999,(0,s.Ni)()),Adamax:()=>r.BaG.adamax(.002,.9,.999,(0,s.Ni)(),0),RMSProp:()=>r.BaG.rmsprop(.001,.9,0,(0,s.Ni)()),SGD:()=>r.BaG.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new a.Qp(`Unknown Optimizer ${e}`)}},4379:function(e,t,n){"use strict";n.d(t,{Bm:function(){return d},R9:function(){return l}});var r=n(5840),s=n(7661),a=n(4813);function o(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}class i extends r.JFn.Serializable{}class u extends i{constructor(e){super(),o(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,r.DZQ)((()=>{let t=(0,r.Ul9)([1]);return this.hasL1&&(t=(0,r.WQq)(t,(0,r.czq)(r.lKK(this.l1,(0,r.tnl)(e))))),this.hasL2&&(t=(0,r.WQq)(t,(0,r.czq)(r.lKK(this.l2,s.Ew(e))))),r.tQQ(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}u.className="L1L2",r.JFn.registerClass(u);const c={l1l2:"L1L2"};function l(e){return(0,a.k4)(e)}function p(e,t={}){return(0,a.Xv)(e,r.JFn.SerializationMap.getMap().classNameMap,t,"regularizer")}function d(e){if(null==e)return null;if("string"==typeof e){return p({className:e in c?c[e]:e,config:{}})}return e instanceof i?e:p(e)}},4551:function(e,t,n){"use strict";n.d(t,{Yl:function(){return s}});const r=1048576;function s(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!a(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>r&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${r}.`)}}function a(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!a(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!a(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}},9184:function(e,t,n){"use strict";n.d(t,{J:function(){return o},Ol:function(){return i},mW:function(){return u}});var r=n(5841),s=n(4813),a=n(3072);function o(e,t,n){if("number"==typeof e)return(0,s.fD)(e,t);if(e.length!==t)throw new r.Qp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const o=e[s];if(!(0,a.Fq)(o))throw new r.Qp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${o}`)}return e}function i(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function u(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+(0,a.T9)([n-t,0]);else{if("same"!==s)throw new r.Qp(`Unsupport padding mode: ${s}.`);e*=t}return e}},4813:function(e,t,n){"use strict";n.d(t,{Am:function(){return y},Cb:function(){return p},Cd:function(){return S},E6:function(){return x},HP:function(){return v},U9:function(){return i},Xv:function(){return m},ZF:function(){return b},fD:function(){return a},k4:function(){return h},oo:function(){return w},sg:function(){return T},st:function(){return c},th:function(){return g},uc:function(){return l},vA:function(){return o},wL:function(){return u}});var r=n(5840),s=n(5841);function a(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function o(e,t){if(!e)throw new s.pf(t)}function i(e,t){let n=0;for(const r of e)r===t&&n++;return n}function u(e){return 1===e.length?e[0]:e}function c(e){return Array.isArray(e)?e:[e]}function l(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function p(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let d={};function h(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function f(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>f(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?f(t):e[n]=t.value)}}}function m(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let o;if(a in n)o=n[a];else if(a in d)o=d[a];else if(o=t[a],null==o)throw new s.Qp(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}{const o=e;if(null==o.className||null==o.config)throw new s.Qp(`${r}: Improper config format: ${JSON.stringify(o)}.\n'className' and 'config' must set.`);const i=o.className;let u,c;if(i in n?[u,c]=n[i]:i in d?[u,c]=d.className:i in t&&([u,c]=t[i]),null==u)throw new s.Qp(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=c){const e={};for(const n of Object.keys(d))e[n]=d[n];for(const s of Object.keys(n))e[s]=n[s];o.config.customObjects=e;const t=Object.assign({},d);for(const s of Object.keys(n))d[s]=n[s];f(o.config);const r=c(u,o.config,n,a);return d=Object.assign({},t),r}{const e=Object.assign({},d);for(const r of Object.keys(n))d[r]=n[r];const t=new u(o.config);return d=Object.assign({},e),t}}}function g(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function y(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function b(e){if(null==e)throw new s.Qp(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function x(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new s.Qp(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function v(e,t,n=0,r=1/0){return o(n>=0),o(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function w(e,t){Array.isArray(e)?(r.ZSL.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>w(e,`element ${n+1} of ${t}`)))):r.ZSL.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${k(e)}.`))}function k(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>k(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function T(e,t,n){let s,a=null!=n?n():r.ZSL.now();return(...o)=>{const i=null!=n?n():r.ZSL.now();return i-a<t||(a=i,s=e(...o)),s}}function S(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}},9917:function(e,t,n){"use strict";n.d(t,{o:function(){return s}});var r=n(4390);function s(e,t,n,s=console.log){const u=function(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),c=["Layer (type)","Input Shape","Output shape","Param #"];let l;if(u?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!u){c.push("Receives inputs"),l=[];for(const t in e.nodesByDepth)l.push(...e.nodesByDepth[t])}s("_".repeat(t)),a(c,n,s),s("=".repeat(t));const p=e.layers;for(let r=0;r<p.length;++r)u?o(p[r],n,s):i(p[r],n,l,s),s((r===p.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const d=function(e){let t;t=null!=e.collectedTrainableWeights?(0,r.Y)(e.collectedTrainableWeights):(0,r.Y)(e.trainableWeights);return t}(e),h=(0,r.Y)(e.nonTrainableWeights);s(`Total params: ${d+h}`),s(`Trainable params: ${d}`),s(`Non-trainable params: ${h}`),s("_".repeat(t))}function a(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function o(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(o){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(o){r="multiple"}a([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function i(e,t,n,r){let s,o;try{o=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(p){o="multiple"}try{s=JSON.stringify(e.outputShape)}catch(p){s="multiple"}const i=[];for(const a of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(a)))for(let e=0;e<a.inboundLayers.length;++e){const t=a.inboundLayers[e].name,n=a.nodeIndices[e],r=a.tensorIndices[e];i.push(`${t}[${n}][${r}]`)}const u=e.name,c=e.getClassName(),l=0===i.length?"":i[0];a([`${u} (${c})`,o,s,e.countParams().toString(),l],t,r);for(let d=1;d<i.length;++d)a(["","","","",i[d]],t,r)}},3072:function(e,t,n){"use strict";n.d(t,{Fq:function(){return s},T9:function(){return i},jk:function(){return o},no:function(){return a},y1:function(){return u}});var r=n(5841);function s(e){return e===parseInt(e.toString(),10)}function a(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function o(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function i(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function u(e,t){if(t<e)throw new r.Qp(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}},1928:function(e,t,n){"use strict";n.d(t,{M:function(){return o},w:function(){return a}});var r=n(4813);function s(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function a(e,t){if(null===e)return null;if("string"==typeof e)return r.Cb(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let o=0;o<r;++o){const r=e[o];s(t,o,r)?n.push(r):n.push(a(r,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=r.Cb(n);t[e]=a(s,e)}}return t}}function o(e,t){if(null==e)return null;if("string"==typeof e)return r.uc(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];s(t,a,r)?n.push(r):n.push(o(r,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n],a=r.uc(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof s?o(s,n):s}return t}}},3057:function(e,t,n){"use strict";n.d(t,{FS:function(){return a},TT:function(){return s},U$:function(){return i},un:function(){return o}});var r=n(5841);function s(e){return Array.isArray(e)&&Array.isArray(e[0])}function a(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function o(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new r.Qp(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function i(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new r.Qp(`Expected exactly 1 Shape; got ${e.length}`)}return e}},4390:function(e,t,n){"use strict";function r(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}n.d(t,{Y:function(){return r}})},1765:function(e,t,n){"use strict";n.d(t,{UM:function(){return c},eR:function(){return i},ex:function(){return u}});var r=n(5840),s=n(1686),a=n(9459);n(5841);const o="Variable";class i{constructor(e,t="float32",n=o,i=!0,u=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=(0,s.j)(),n=null==n?o:n,this.originalName=(0,a.BC)(n),this.name=(0,a.Uc)(this.originalName),this.trainable_=i,this.constraint=u,this.val=r.bvq(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function u(e){return e.map((e=>e.read()))}function c(e){e.forEach((e=>{e[0].write(e[1])}))}},2700:function(e,t,n){"use strict";n.d(t,{r:function(){return r}});const r="4.20.0"},8944:function(e,t,n){"use strict";n.d(t,{P:function(){return x}});var r=n(6540),s=n(5615),a=n(6942),o=n.n(a),i=n(6519),u=n(4848);const c=r.forwardRef((({bsPrefix:e,variant:t,animation:n="border",size:r,as:s="div",className:a,...c},l)=>{const p=`${e=(0,i.oU)(e,"spinner")}-${n}`;return(0,u.jsx)(s,{ref:l,...c,className:o()(a,p,r&&`${p}-${r}`,t&&`text-${t}`)})}));c.displayName="Spinner";var l=c,p=n(5556),d=n.n(p),h=["color","size","title","className"];function f(){return f=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},f.apply(this,arguments)}function m(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var g=(0,r.forwardRef)((function(e,t){var n=e.color,s=e.size,a=e.title,o=e.className,i=m(e,h);return r.createElement("svg",f({ref:t,xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",width:s,height:s,fill:n,className:["bi","bi-download",o].filter(Boolean).join(" ")},i),a?r.createElement("title",null,a):null,r.createElement("path",{d:"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5"}),r.createElement("path",{d:"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z"}))}));g.propTypes={color:d().string,size:d().oneOfType([d().string,d().number]),title:d().string,className:d().string},g.defaultProps={color:"currentColor",size:"1em",title:null,className:""};var y=g;const b=e=>{let{loading:t,error:n,children:a}=e;return t?r.createElement(s.A,{disabled:!0},r.createElement(l,{animation:"border",role:"status","aria-hidden":"true",size:"sm",as:"span",className:"me-2"}),"Loading..."):n?r.createElement(s.A,{disabled:!0},n):a},x=e=>{var t,n;let{text:a="Download stable",projectData:o,loading:i,error:u}=e;return r.createElement(b,{loading:i,error:u},r.createElement(s.A,{href:null==o||null===(t=o.releases)||void 0===t?void 0:t.stable.assets[0].browser_download_url},r.createElement("span",null,r.createElement(y,{className:"me-2"}),a," [",null==o||null===(n=o.releases)||void 0===n?void 0:n.stable.tag_name,"]")))}},6831:function(e,t,n){"use strict";n.r(t),n.d(t,{Head:function(){return bv},default:function(){return xv}});var r={};n.r(r),n.d(r,{json:function(){return so}});var s={};n.r(s),n.d(s,{json:function(){return ao}});var a={};n.r(a),n.d(a,{json:function(){return oo}});var o={};n.r(o),n.d(o,{json:function(){return io}});var i={};n.r(i),n.d(i,{json:function(){return uo}});var u={};n.r(u),n.d(u,{json:function(){return co}});var c={};n.r(c),n.d(c,{json:function(){return lo}});var l={};n.r(l),n.d(l,{json:function(){return po}});var p={};n.r(p),n.d(p,{json:function(){return ho}});var d={};n.r(d),n.d(d,{json:function(){return fo}});var h={};n.r(h),n.d(h,{json:function(){return mo}});var f={};n.r(f),n.d(f,{json:function(){return go}});var m={};n.r(m),n.d(m,{json:function(){return yo}});var g={};n.r(g),n.d(g,{json:function(){return bo}});var y={};n.r(y),n.d(y,{json:function(){return xo}});var b={};n.r(b),n.d(b,{json:function(){return vo}});var x={};n.r(x),n.d(x,{json:function(){return wo}});var v={};n.r(v),n.d(v,{json:function(){return ko}});var w={};n.r(w),n.d(w,{json:function(){return To}});var k={};n.r(k),n.d(k,{OP_SCOPE_SUFFIX:function(){return Bo.BTT},abs:function(){return Bo.tnl},acos:function(){return Bo.HQu},acosh:function(){return Bo.FqL},add:function(){return Bo.WQq},addN:function(){return Bo.QiD},all:function(){return Bo.Q7R},any:function(){return Bo.bzn},argMax:function(){return Bo.FLi},argMin:function(){return Bo.XRg},asin:function(){return Bo.qRo},asinh:function(){return Bo.yHs},atan:function(){return Bo.rYl},atan2:function(){return Bo.FPz},atanh:function(){return Bo.rfv},avgPool:function(){return Bo.$jT},avgPool3d:function(){return Bo.sub},basicLSTMCell:function(){return Bo.lZX},batchNorm:function(){return Bo.$v7},batchNorm2d:function(){return Bo.BFc},batchNorm3d:function(){return Bo.kSi},batchNorm4d:function(){return Bo.T5N},batchToSpaceND:function(){return Bo.GTe},bincount:function(){return Bo.HbZ},bitwiseAnd:function(){return Bo.vjT},booleanMaskAsync:function(){return Bo.ftb},broadcastArgs:function(){return Bo.ROE},broadcastTo:function(){return Bo.hOW},buffer:function(){return Bo.ra8},cast:function(){return Bo.wgE},ceil:function(){return Bo.mkO},clipByValue:function(){return Bo.zQh},clone:function(){return Bo.o8B},complex:function(){return Bo.faB},concat:function(){return Bo.xWs},concat1d:function(){return Bo.I1m},concat2d:function(){return Bo.RPU},concat3d:function(){return Bo.O5O},concat4d:function(){return Bo.P1l},conv1d:function(){return Bo.kA9},conv2d:function(){return Bo.Xtf},conv2dTranspose:function(){return Bo.wX9},conv3d:function(){return Bo.IPL},conv3dTranspose:function(){return Bo.jIJ},cos:function(){return Bo.gnS},cosh:function(){return Bo.yIG},cosineWindow:function(){return Bo._jP},cumprod:function(){return Bo.Lp0},cumsum:function(){return Bo.rCv},denseBincount:function(){return Bo.aOp},depthToSpace:function(){return Bo.Rj8},depthwiseConv2d:function(){return Bo.Gl3},diag:function(){return Bo.smy},dilation2d:function(){return Bo.X7t},div:function(){return Bo.y4m},divNoNan:function(){return Bo.ek5},dot:function(){return Bo.Omf},dropout:function(){return Bo.EZY},einsum:function(){return Bo._3C},elu:function(){return Bo.Pqc},enclosingPowerOfTwo:function(){return Bo.FJY},ensureShape:function(){return Bo.QP2},equal:function(){return Bo.LCg},erf:function(){return Bo.Y12},euclideanNorm:function(){return Bo.p4S},exp:function(){return Bo.oNF},expandDims:function(){return Bo.UG6},expm1:function(){return Bo.IYd},eye:function(){return Bo.y5U},fft:function(){return Bo.hVP},fill:function(){return Bo.GSj},floor:function(){return Bo.RIf},floorDiv:function(){return Bo.wh_},fused:function(){return Bo.cZk},gather:function(){return Bo.kgh},gatherND:function(){return Bo.SY9},greater:function(){return Bo.rhj},greaterEqual:function(){return Bo.DQN},ifft:function(){return Bo.KGM},imag:function(){return Bo.ngS},image:function(){return Bo.Slp},inTopKAsync:function(){return Bo.U4u},irfft:function(){return Bo.ggX},isFinite:function(){return Bo.MIs},isInf:function(){return Bo.EN4},isNaN:function(){return Bo.yrW},leakyRelu:function(){return Bo.H8d},less:function(){return Bo.M7h},lessEqual:function(){return Bo.InN},linalg:function(){return Bo.mPL},linspace:function(){return Bo.mT8},localResponseNormalization:function(){return Bo.Kgs},log:function(){return Bo.Rm2},log1p:function(){return Bo.Kko},logSigmoid:function(){return Bo.nqI},logSoftmax:function(){return Bo.HPB},logSumExp:function(){return Bo.VZ},logicalAnd:function(){return Bo.n76},logicalNot:function(){return Bo.NSZ},logicalOr:function(){return Bo.ztW},logicalXor:function(){return Bo.rxB},losses:function(){return Bo.YYh},lowerBound:function(){return Bo.yzS},matMul:function(){return Bo.NoW},max:function(){return Bo.T9B},maxPool:function(){return Bo.jgi},maxPool3d:function(){return Bo.NYV},maxPoolWithArgmax:function(){return Bo.RO},maximum:function(){return Bo.PhQ},mean:function(){return Bo.i2o},meshgrid:function(){return Bo.OYQ},min:function(){return Bo.jkA},minimum:function(){return Bo.BpO},mirrorPad:function(){return Bo.FFZ},mod:function(){return Bo.ziu},moments:function(){return Bo.Clk},movingAverage:function(){return Bo.CRk},mul:function(){return Bo.lKK},multiRNNCell:function(){return Bo.YDF},multinomial:function(){return Bo.OjQ},neg:function(){return Bo.HZy},norm:function(){return Bo.xbf},notEqual:function(){return Bo.Ec},oneHot:function(){return Bo.Mw0},ones:function(){return Bo.SaS},onesLike:function(){return Bo.P61},op:function(){return Bo.op},outerProduct:function(){return Bo.X4o},pad:function(){return Bo.eVF},pad1d:function(){return Bo.BZs},pad2d:function(){return Bo.grY},pad3d:function(){return Bo.XHu},pad4d:function(){return Bo.WLX},pool:function(){return Bo.dzn},pow:function(){return Bo.n7C},prelu:function(){return Bo.NsG},print:function(){return Bo.yyV},prod:function(){return Bo._eU},raggedGather:function(){return Bo.whe},raggedRange:function(){return Bo.iyU},raggedTensorToTensor:function(){return Bo.Q0_},rand:function(){return Bo._9M},randomGamma:function(){return Bo.pR9},randomNormal:function(){return Bo.FE$},randomStandardNormal:function(){return Bo.m0H},randomUniform:function(){return Bo.YeY},randomUniformInt:function(){return Bo.HYA},range:function(){return Bo.y17},real:function(){return Bo.xav},reciprocal:function(){return Bo.VOZ},relu:function(){return Bo.VVh},relu6:function(){return Bo.j__},reshape:function(){return Bo.tQQ},reverse:function(){return Bo.BEg},reverse1d:function(){return Bo.QD2},reverse2d:function(){return Bo.LMr},reverse3d:function(){return Bo.I2l},reverse4d:function(){return Bo.JYU},rfft:function(){return Bo.z8$},round:function(){return Bo.LIG},rsqrt:function(){return Bo.Z$r},scalar:function(){return Bo.d_2},scatterND:function(){return Bo.NFr},searchSorted:function(){return Bo.sZg},selu:function(){return Bo.WfX},separableConv2d:function(){return Bo.wdz},setdiff1dAsync:function(){return Bo.F12},sigmoid:function(){return Bo.ry7},sign:function(){return Bo._SZ},signal:function(){return Bo.vPA},sin:function(){return Bo.F8e},sinh:function(){return Bo.L0l},slice:function(){return Bo.dik},slice1d:function(){return Bo.Q$M},slice2d:function(){return Bo.zAd},slice3d:function(){return Bo.wck},slice4d:function(){return Bo.R0O},softmax:function(){return Bo.Vs9},softplus:function(){return Bo.lw0},spaceToBatchND:function(){return Bo.eDJ},sparse:function(){return Bo.lMo},sparseToDense:function(){return Bo.Zhr},spectral:function(){return Bo.lOn},split:function(){return Bo.lDo},sqrt:function(){return Bo.RZD},square:function(){return Bo.EwI},squaredDifference:function(){return Bo.Pbu},squeeze:function(){return Bo.r2V},stack:function(){return Bo.t$z},step:function(){return Bo.PMw},stridedSlice:function(){return Bo.Ym9},string:function(){return Bo.YjP},sub:function(){return Bo.jbE},sum:function(){return Bo.czq},tan:function(){return Bo.Mlm},tanh:function(){return Bo.ymU},tensor:function(){return Bo.OEK},tensor1d:function(){return Bo.tGX},tensor2d:function(){return Bo.KtR},tensor3d:function(){return Bo.$_$},tensor4d:function(){return Bo.g9W},tensor5d:function(){return Bo.Lpo},tensor6d:function(){return Bo.yxw},tensorScatterUpdate:function(){return Bo.NNh},tile:function(){return Bo.Vsq},topk:function(){return Bo.rfw},transpose:function(){return Bo.mgz},truncatedNormal:function(){return Bo.efE},unique:function(){return Bo.AmM},unsortedSegmentSum:function(){return Bo.zAU},unstack:function(){return Bo.K$i},upperBound:function(){return Bo.rni},variable:function(){return Bo.bvq},where:function(){return Bo._M9},whereAsync:function(){return Bo.YJN},zeros:function(){return Bo.Ul9},zerosLike:function(){return Bo.POl}});var T=n(1985),S=n(3586),N=n(4283),I=n(5739),C=n(6540),E=n(1105),A=n(5615),$=n(3048),F=n(4479),R=n(6942),D=n.n(R),_=n(6519);var O=C.createContext({}),L=n(4848);const M=C.forwardRef((({id:e,bsPrefix:t,className:n,type:r="checkbox",isValid:s=!1,isInvalid:a=!1,as:o="input",...i},u)=>{const{controlId:c}=(0,C.useContext)(O);return t=(0,_.oU)(t,"form-check-input"),(0,L.jsx)(o,{...i,ref:u,type:r,id:e||c,className:D()(n,t,s&&"is-valid",a&&"is-invalid")})}));M.displayName="FormCheckInput";var z=M;const P=C.createContext(null);P.displayName="InputGroupContext";var B=P;const W=C.forwardRef((({className:e,bsPrefix:t,as:n="span",...r},s)=>(t=(0,_.oU)(t,"input-group-text"),(0,L.jsx)(n,{ref:s,className:D()(e,t),...r}))));W.displayName="InputGroupText";var V=W;const U=C.forwardRef((({bsPrefix:e,size:t,hasValidation:n,className:r,as:s="div",...a},o)=>{e=(0,_.oU)(e,"input-group");const i=(0,C.useMemo)((()=>({})),[]);return(0,L.jsx)(B.Provider,{value:i,children:(0,L.jsx)(s,{ref:o,...a,className:D()(r,e,t&&`${e}-${t}`,n&&"has-validation")})})}));U.displayName="InputGroup";var G=Object.assign(U,{Text:V,Radio:e=>(0,L.jsx)(V,{children:(0,L.jsx)(z,{type:"radio",...e})}),Checkbox:e=>(0,L.jsx)(V,{children:(0,L.jsx)(z,{type:"checkbox",...e})})}),Z=n(5556),j=n.n(Z);const H={type:j().string,tooltip:j().bool,as:j().elementType},K=C.forwardRef((({as:e="div",className:t,type:n="valid",tooltip:r=!1,...s},a)=>(0,L.jsx)(e,{...s,ref:a,className:D()(t,`${n}-${r?"tooltip":"feedback"}`)})));K.displayName="Feedback",K.propTypes=H;var Y=K;const Q=C.forwardRef((({bsPrefix:e,className:t,htmlFor:n,...r},s)=>{const{controlId:a}=(0,C.useContext)(O);return e=(0,_.oU)(e,"form-check-label"),(0,L.jsx)("label",{...r,ref:s,htmlFor:n||a,className:D()(t,e)})}));Q.displayName="FormCheckLabel";var q=Q,X=n(9528);const J=C.forwardRef((({id:e,bsPrefix:t,bsSwitchPrefix:n,inline:r=!1,reverse:s=!1,disabled:a=!1,isValid:o=!1,isInvalid:i=!1,feedbackTooltip:u=!1,feedback:c,feedbackType:l,className:p,style:d,title:h="",type:f="checkbox",label:m,children:g,as:y="input",...b},x)=>{t=(0,_.oU)(t,"form-check"),n=(0,_.oU)(n,"form-switch");const{controlId:v}=(0,C.useContext)(O),w=(0,C.useMemo)((()=>({controlId:e||v})),[v,e]),k=!g&&null!=m&&!1!==m||(0,X.mf)(g,q),T=(0,L.jsx)(z,{...b,type:"switch"===f?"checkbox":f,ref:x,isValid:o,isInvalid:i,disabled:a,as:y});return(0,L.jsx)(O.Provider,{value:w,children:(0,L.jsx)("div",{style:d,className:D()(p,k&&t,r&&`${t}-inline`,s&&`${t}-reverse`,"switch"===f&&n),children:g||(0,L.jsxs)(L.Fragment,{children:[T,k&&(0,L.jsx)(q,{title:h,children:m}),c&&(0,L.jsx)(Y,{type:l,tooltip:u,children:c})]})})})}));J.displayName="FormCheck";var ee=Object.assign(J,{Input:z,Label:q});n(9771);const te=C.forwardRef((({bsPrefix:e,type:t,size:n,htmlSize:r,id:s,className:a,isValid:o=!1,isInvalid:i=!1,plaintext:u,readOnly:c,as:l="input",...p},d)=>{const{controlId:h}=(0,C.useContext)(O);return e=(0,_.oU)(e,"form-control"),(0,L.jsx)(l,{...p,type:t,size:r,ref:d,readOnly:c,id:s||h,className:D()(a,u?`${e}-plaintext`:e,n&&`${e}-${n}`,"color"===t&&`${e}-color`,o&&"is-valid",i&&"is-invalid")})}));te.displayName="FormControl";var ne=Object.assign(te,{Feedback:Y});const re=C.forwardRef((({className:e,bsPrefix:t,as:n="div",...r},s)=>(t=(0,_.oU)(t,"form-floating"),(0,L.jsx)(n,{ref:s,className:D()(e,t),...r}))));re.displayName="FormFloating";var se=re;const ae=C.forwardRef((({controlId:e,as:t="div",...n},r)=>{const s=(0,C.useMemo)((()=>({controlId:e})),[e]);return(0,L.jsx)(O.Provider,{value:s,children:(0,L.jsx)(t,{...n,ref:r})})}));ae.displayName="FormGroup";var oe=ae;const ie=C.forwardRef((({as:e="label",bsPrefix:t,column:n=!1,visuallyHidden:r=!1,className:s,htmlFor:a,...o},i)=>{const{controlId:u}=(0,C.useContext)(O);t=(0,_.oU)(t,"form-label");let c="col-form-label";"string"==typeof n&&(c=`${c} ${c}-${n}`);const l=D()(s,t,r&&"visually-hidden",n&&c);return a=a||u,n?(0,L.jsx)(E.A,{ref:i,as:"label",className:l,htmlFor:a,...o}):(0,L.jsx)(e,{ref:i,className:l,htmlFor:a,...o})}));ie.displayName="FormLabel";var ue=ie;const ce=C.forwardRef((({bsPrefix:e,className:t,id:n,...r},s)=>{const{controlId:a}=(0,C.useContext)(O);return e=(0,_.oU)(e,"form-range"),(0,L.jsx)("input",{...r,type:"range",ref:s,className:D()(t,e),id:n||a})}));ce.displayName="FormRange";var le=ce;const pe=C.forwardRef((({bsPrefix:e,size:t,htmlSize:n,className:r,isValid:s=!1,isInvalid:a=!1,id:o,...i},u)=>{const{controlId:c}=(0,C.useContext)(O);return e=(0,_.oU)(e,"form-select"),(0,L.jsx)("select",{...i,size:n,ref:u,className:D()(r,e,t&&`${e}-${t}`,s&&"is-valid",a&&"is-invalid"),id:o||c})}));pe.displayName="FormSelect";var de=pe;const he=C.forwardRef((({bsPrefix:e,className:t,as:n="small",muted:r,...s},a)=>(e=(0,_.oU)(e,"form-text"),(0,L.jsx)(n,{...s,ref:a,className:D()(t,e,r&&"text-muted")}))));he.displayName="FormText";var fe=he;const me=C.forwardRef(((e,t)=>(0,L.jsx)(ee,{...e,ref:t,type:"switch"})));me.displayName="Switch";var ge=Object.assign(me,{Input:ee.Input,Label:ee.Label});const ye=C.forwardRef((({bsPrefix:e,className:t,children:n,controlId:r,label:s,...a},o)=>(e=(0,_.oU)(e,"form-floating"),(0,L.jsxs)(oe,{ref:o,className:D()(t,e),controlId:r,...a,children:[n,(0,L.jsx)("label",{htmlFor:r,children:s})]}))));ye.displayName="FloatingLabel";var be=ye;const xe={_ref:j().any,validated:j().bool,as:j().elementType},ve=C.forwardRef((({className:e,validated:t,as:n="form",...r},s)=>(0,L.jsx)(n,{...r,ref:s,className:D()(e,t&&"was-validated")})));ve.displayName="Form",ve.propTypes=xe;var we=Object.assign(ve,{Group:oe,Control:ne,Floating:se,Check:ee,Switch:ge,Label:ue,Text:fe,Range:le,Select:de,FloatingLabel:be}),ke=["color","size","title","className"];function Te(){return Te=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Te.apply(this,arguments)}function Se(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var Ne=(0,C.forwardRef)((function(e,t){var n=e.color,r=e.size,s=e.title,a=e.className,o=Se(e,ke);return C.createElement("svg",Te({ref:t,xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",width:r,height:r,fill:n,className:["bi","bi-lock",a].filter(Boolean).join(" ")},o),s?C.createElement("title",null,s):null,C.createElement("path",{d:"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2m3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2M5 8h6a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1"}))}));Ne.propTypes={color:j().string,size:j().oneOfType([j().string,j().number]),title:j().string,className:j().string},Ne.defaultProps={color:"currentColor",size:"1em",title:null,className:""};var Ie=Ne,Ce=["color","size","title","className"];function Ee(){return Ee=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Ee.apply(this,arguments)}function Ae(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var $e=(0,C.forwardRef)((function(e,t){var n=e.color,r=e.size,s=e.title,a=e.className,o=Ae(e,Ce);return C.createElement("svg",Ee({ref:t,xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",width:r,height:r,fill:n,className:["bi","bi-mortarboard",a].filter(Boolean).join(" ")},o),s?C.createElement("title",null,s):null,C.createElement("path",{d:"M8.211 2.047a.5.5 0 0 0-.422 0l-7.5 3.5a.5.5 0 0 0 .025.917l7.5 3a.5.5 0 0 0 .372 0L14 7.14V13a1 1 0 0 0-1 1v2h3v-2a1 1 0 0 0-1-1V6.739l.686-.275a.5.5 0 0 0 .025-.917zM8 8.46 1.758 5.965 8 3.052l6.242 2.913z"}),C.createElement("path",{d:"M4.176 9.032a.5.5 0 0 0-.656.327l-.5 1.7a.5.5 0 0 0 .294.605l4.5 1.8a.5.5 0 0 0 .372 0l4.5-1.8a.5.5 0 0 0 .294-.605l-.5-1.7a.5.5 0 0 0-.656-.327L8 10.466zm-.068 1.873.22-.748 3.496 1.311a.5.5 0 0 0 .352 0l3.496-1.311.22.748L8 12.46z"}))}));$e.propTypes={color:j().string,size:j().oneOfType([j().string,j().number]),title:j().string,className:j().string},$e.defaultProps={color:"currentColor",size:"1em",title:null,className:""};var Fe=$e,Re=n(4870),De=["color","size","title","className"];function _e(){return _e=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},_e.apply(this,arguments)}function Oe(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var Le=(0,C.forwardRef)((function(e,t){var n=e.color,r=e.size,s=e.title,a=e.className,o=Oe(e,De);return C.createElement("svg",_e({ref:t,xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",width:r,height:r,fill:n,className:["bi","bi-chat-dots",a].filter(Boolean).join(" ")},o),s?C.createElement("title",null,s):null,C.createElement("path",{d:"M5 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0m4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2"}),C.createElement("path",{d:"m2.165 15.803.02-.004c1.83-.363 2.948-.842 3.468-1.105A9 9 0 0 0 8 15c4.418 0 8-3.134 8-7s-3.582-7-8-7-8 3.134-8 7c0 1.76.743 3.37 1.97 4.6a10.4 10.4 0 0 1-.524 2.318l-.003.011a11 11 0 0 1-.244.637c-.079.186.074.394.273.362a22 22 0 0 0 .693-.125m.8-3.108a1 1 0 0 0-.287-.801C1.618 10.83 1 9.468 1 8c0-3.192 3.004-6 7-6s7 2.808 7 6-3.004 6-7 6a8 8 0 0 1-2.088-.272 1 1 0 0 0-.711.074c-.387.196-1.24.57-2.634.893a11 11 0 0 0 .398-2"}))}));Le.propTypes={color:j().string,size:j().oneOfType([j().string,j().number]),title:j().string,className:j().string},Le.defaultProps={color:"currentColor",size:"1em",title:null,className:""};var Me=Le,ze=n(553),Pe=["color","size","title","className"];function Be(){return Be=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Be.apply(this,arguments)}function We(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var Ve=(0,C.forwardRef)((function(e,t){var n=e.color,r=e.size,s=e.title,a=e.className,o=We(e,Pe);return C.createElement("svg",Be({ref:t,xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",width:r,height:r,fill:n,className:["bi","bi-asterisk",a].filter(Boolean).join(" ")},o),s?C.createElement("title",null,s):null,C.createElement("path",{d:"M8 0a1 1 0 0 1 1 1v5.268l4.562-2.634a1 1 0 1 1 1 1.732L10 8l4.562 2.634a1 1 0 1 1-1 1.732L9 9.732V15a1 1 0 1 1-2 0V9.732l-4.562 2.634a1 1 0 1 1-1-1.732L6 8 1.438 5.366a1 1 0 0 1 1-1.732L7 6.268V1a1 1 0 0 1 1-1"}))}));Ve.propTypes={color:j().string,size:j().oneOfType([j().string,j().number]),title:j().string,className:j().string},Ve.defaultProps={color:"currentColor",size:"1em",title:null,className:""};var Ue=Ve,Ge=["color","size","title","className"];function Ze(){return Ze=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Ze.apply(this,arguments)}function je(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var He=(0,C.forwardRef)((function(e,t){var n=e.color,r=e.size,s=e.title,a=e.className,o=je(e,Ge);return C.createElement("svg",Ze({ref:t,xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",width:r,height:r,fill:n,className:["bi","bi-eye-fill",a].filter(Boolean).join(" ")},o),s?C.createElement("title",null,s):null,C.createElement("path",{d:"M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0"}),C.createElement("path",{d:"M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8m8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7"}))}));He.propTypes={color:j().string,size:j().oneOfType([j().string,j().number]),title:j().string,className:j().string},He.defaultProps={color:"currentColor",size:"1em",title:null,className:""};var Ke=He,Ye=["color","size","title","className"];function Qe(){return Qe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Qe.apply(this,arguments)}function qe(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var Xe=(0,C.forwardRef)((function(e,t){var n=e.color,r=e.size,s=e.title,a=e.className,o=qe(e,Ye);return C.createElement("svg",Qe({ref:t,xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",width:r,height:r,fill:n,className:["bi","bi-eye-slash-fill",a].filter(Boolean).join(" ")},o),s?C.createElement("title",null,s):null,C.createElement("path",{d:"m10.79 12.912-1.614-1.615a3.5 3.5 0 0 1-4.474-4.474l-2.06-2.06C.938 6.278 0 8 0 8s3 5.5 8 5.5a7 7 0 0 0 2.79-.588M5.21 3.088A7 7 0 0 1 8 2.5c5 0 8 5.5 8 5.5s-.939 1.721-2.641 3.238l-2.062-2.062a3.5 3.5 0 0 0-4.474-4.474z"}),C.createElement("path",{d:"M5.525 7.646a2.5 2.5 0 0 0 2.829 2.829zm4.95.708-2.829-2.83a2.5 2.5 0 0 1 2.829 2.829zm3.171 6-12-12 .708-.708 12 12z"}))}));Xe.propTypes={color:j().string,size:j().oneOfType([j().string,j().number]),title:j().string,className:j().string},Xe.defaultProps={color:"currentColor",size:"1em",title:null,className:""};var Je=Xe,et=n(5840),tt=n(7822),nt=n(9809),rt=n(9258),st=n(8319);const at={kernelName:tt.ljI,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,rt.l)(e,(0,st.P)((0,nt.w)(n,"float32"),-1))}}};var ot=n(9359),it=n(6522),ut=n(5702),ct=n(9348),lt=n(5793),pt=n(7126);const dt={kernelName:tt.Vvy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,lt.E)((0,nt.w)(n,"float32")),r=(0,ct.R)((0,pt.j)((0,ut.d)(1),t));return(0,it.H)((0,ot.y)(e,r))}}}},ht={kernelName:tt.PH8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,ct.R)((0,pt.j)((0,lt.E)((0,nt.w)(n,"float32")),1));return(0,ot.y)(e,t)}}}};var ft=n(2198),mt=n(2302),gt=n(3791);const yt={kernelName:tt.OMN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ft.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=ft.getReductionAxes(n.shape,s);return r.length>0&&(t=(0,gt.c)(t,r)),(0,mt.t)(t,n.shape)},b:()=>{let t=e;const n=ft.getReductionAxes(r.shape,s);return n.length>0&&(t=(0,gt.c)(t,n)),(0,mt.t)(t,r.shape)}}}},bt={kernelName:tt.EkD,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var xt=n(5537);const vt={kernelName:tt.Jp_,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,xt.P)(n)}}},wt={kernelName:tt.p_m,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,xt.P)(n)}}},kt={kernelName:tt.QKF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ot.y)(e,(0,ct.R)((0,pt.j)((0,ut.d)(1),(0,lt.E)((0,nt.w)(n,"float32")))))}}};var Tt=n(7523);const St={kernelName:tt.epO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,ct.R)((0,Tt.W)((0,ut.d)(1),(0,lt.E)((0,nt.w)(n,"float32"))));return(0,ot.y)(e,t)}}}},Nt={kernelName:tt.lxb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,ft.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,Tt.W)((0,lt.E)(n),(0,lt.E)(r));let a=(0,rt.l)(e,(0,ot.y)(r,t));const o=(0,ft.getReductionAxes)(n.shape,s);return o.length>0&&(a=(0,gt.c)(a,o)),(0,mt.t)(a,n.shape)},b:()=>{const t=(0,Tt.W)((0,lt.E)(n),(0,lt.E)(r));let a=(0,it.H)((0,rt.l)(e,(0,ot.y)(n,t)));const o=(0,ft.getReductionAxes)(r.shape,s);return o.length>0&&(a=(0,gt.c)(a,o)),(0,mt.t)(a,r.shape)}}}},It={kernelName:tt.TyE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ot.y)(e,(0,Tt.W)((0,lt.E)((0,nt.w)(n,"float32")),1))}}},Ct={kernelName:tt.zP9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ot.y)(e,(0,pt.j)((0,ut.d)(1),(0,lt.E)((0,nt.w)(n,"float32"))))}}};var Et=n(1585),At=n(8189),$t=n(5119),Ft=n(7195),Rt=n(929);const Dt=(0,Rt.op)({avgPool3dGrad_:function(e,t,n,r,s,a){const o=(0,At.YT)(e,"dy","avgPool3dGrad"),i=(0,At.YT)(t,"input","avgPool3dGrad");let u=o,c=i,l=!1;4===i.rank&&(l=!0,u=(0,mt.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=(0,mt.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$t.vA(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),$t.vA(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),(0,Ft.s_)("avgPool3dGrad",s,a);const p={dy:u,input:c},d={filterSize:n,strides:r,pad:s,dimRoundingMode:a},h=Et.T2.runKernel(tt.wwC,p,d);return l?(0,mt.t)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),_t={kernelName:tt.cS,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>Dt(e,r,s,a,o,i)}}};const Ot=(0,Rt.op)({avgPoolGrad_:function(e,t,n,r,s){const a=(0,At.YT)(e,"dy","avgPoolGrad"),o=(0,At.YT)(t,"input","avgPoolGrad");$t.vA(o.rank===a.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`));let i=o,u=a,c=!1;3===o.rank&&(c=!0,i=(0,mt.t)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=(0,mt.t)(a,[1,a.shape[0],a.shape[1],a.shape[2]])),$t.vA(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),$t.vA(4===i.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`));const l={dy:u,input:i},p={filterSize:n,strides:r,pad:s},d=Et.T2.runKernel(tt.VCH,l,p);return c?(0,mt.t)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Lt={kernelName:tt.ho8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:o}=n;return{x:()=>Ot(e,r,s,a,o)}}};var Mt=n(5703);const zt={kernelName:tt.jAQ,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:o}=n;return a||o?!a&&o?{a:()=>(0,Mt.N)(e,s,!1,!1),b:()=>(0,Mt.N)(e,r,!0,!1)}:a&&!o?{a:()=>(0,Mt.N)(s,e,!1,!0),b:()=>(0,Mt.N)(r,e,!1,!1)}:{a:()=>(0,Mt.N)(s,e,!0,!0),b:()=>(0,Mt.N)(e,r,!0,!0)}:{a:()=>(0,Mt.N)(e,s,!1,!0),b:()=>(0,Mt.N)(r,e,!0,!1)}}};var Pt=n(776);const Bt={kernelName:tt.Ik2,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>(0,Pt.e)(e,r,s)}}},Wt={kernelName:tt.LB5,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,o=Array.from(a);for(let u=s.length-1;u>=0;u--)if(s[u]===a[u])o[u]=1;else if(1!==s[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const i=[];for(let u=0;u<o.length;u++)o[u]>1&&i.push(u);return{x:()=>(0,gt.c)(e,i,!0)}}},Vt={kernelName:tt.KXH,gradFunc:e=>({x:()=>e.clone()})},Ut={kernelName:tt.QDP,gradFunc:e=>({x:()=>(0,xt.P)(e)})};var Gt=n(3337),Zt=n(6508),jt=n(3789),Ht=n(2151);const Kt={kernelName:tt.vaV,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>(0,Ht._)((0,jt.n)((0,Gt.D)(r,s),(0,Zt.I)(r,a)),e,(0,xt.P)(e))}}},Yt={kernelName:tt.$zE,inputsToSave:["x"],gradFunc:at.gradFunc};var Qt=n(6512);const qt={kernelName:tt.$dB,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=(0,$t.Y6)(s,t[0].shape)[0],o=r.map((e=>e[a]));return(0,Qt.l)(e,o,a).map((e=>()=>e))}};var Xt=n(5248),Jt=n(252);const en={kernelName:tt.p2J,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:o,pad:i,dataFormat:u}=n;return $t.vA(Ft.Dh(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>(0,Jt.v)(r.shape,e,s,o,i,u),filter:()=>(0,Xt.H)(r,e,s.shape,o,i,u)}}};var tn=n(8794);const nn={kernelName:tt.jfg,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>(0,tn.X)(e,s,a,o,i,1,u),filter:()=>(0,Xt.H)(e,r,s.shape,a,o,i,u)}}};const rn=(0,Rt.op)({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=(0,mt.t)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=(0,mt.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),$t.vA(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),$t.vA(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),$t.vA(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),$t.vA(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),$t.vA(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const i={x:a,dy:o},u={strides:r,pad:s,filterShape:n};return Et.T2.runKernel(tt.iGz,i,u)}});var sn=n(1895);const an={kernelName:tt.A1h,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;$t.vA((0,Ft.Dh)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[o,i]=t;return{x:()=>(0,sn.c)(o.shape,e,i,s,a),filter:()=>rn(o,e,i.shape,s,a)}}};var on=n(3726);const un={kernelName:tt.Mn0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,rt.l)((0,it.H)((0,on.F)((0,nt.w)(n,"float32"))),e)}}};var cn=n(8276);const ln={kernelName:tt.MnK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,rt.l)((0,cn.L)((0,nt.w)(n,"float32")),e)}}};var pn=n(1078),dn=n(6808),hn=n(7703);const fn={kernelName:tt.nY8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:o}=n;return{x:()=>{const t=(0,pn.Em)([s],r.rank);let n=(0,dn.r)(e,s,a,!o);return null!=t&&(n=(0,hn.m)(n,t)),n}}}};var mn=n(1890),gn=n(3134);const yn={kernelName:tt.tGH,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:o}=n,i=null==r?[1,1]:r;$t.vA(Ft.Dh(i),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[u,c]=t;return $t.vA(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),$t.vA(4===c.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`)),$t.vA(u.shape[3]===c.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),$t.vA(Ft.G0(s,i),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`)),Ft.s_("depthwiseConv2d",a,o),{x:()=>(0,gn.l)(u.shape,e,c,s,a,i,o),filter:()=>(0,mn.x)(u,e,c.shape,s,a,i,o)}}},bn={kernelName:tt.jxD,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},o={x:r,filter:s,dy:e};return{x:()=>Et.T2.runKernel(tt.bP9,a,n),filter:()=>Et.T2.runKernel(tt.pk0,o,n)}}},xn={kernelName:tt.Pah,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Et.T2.runKernel(tt.rsH,r)}}};var vn=n(8631);const wn={kernelName:tt._s9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,rt.l)((0,vn.o)((0,it.H)((0,lt.E)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,rt.l)(e,r)}}},kn={kernelName:tt.ox3,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,rt.l)(e,n)}}},Tn={kernelName:tt.ybN,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,mt.t)(e,n.shape)}}},Sn={kernelName:tt.ybj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,rt.l)(e,(0,vn.o)(n))}}},Nn={kernelName:tt.ZgB,gradFunc:e=>({x:()=>(0,xt.P)(e)})},In={kernelName:tt.ElG,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,ft.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,ot.y)(e,(0,nt.w)(r,"float32")),a=(0,ft.getReductionAxes)(n.shape,s);return a.length>0?(0,mt.t)((0,gt.c)(t,a),n.shape):t},b:()=>{let t=(0,rt.l)(e,(0,nt.w)(n,"float32"));const a=(0,ft.getReductionAxes)(r.shape,s);a.length>0&&(t=(0,mt.t)((0,gt.c)(t,a),r.shape));const o=(0,lt.E)(r);return(0,it.H)((0,ot.y)(t,(0,nt.w)(o,"float32")))}}}};var Cn=n(7820),En=n(4826);const An={kernelName:tt.i5R,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,o,i]=t,u=null==i?(0,ut.d)(1):i,c=(0,ft.getReductionAxes)(a.shape,s.shape),l=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)l.push(s.shape[e]);l.push(1)}const p=(0,pt.j)(s,a),d=(0,rt.l)(e,u),h=(0,Cn.Z)((0,Tt.W)(o,(0,ut.d)(r))),f=(0,rt.l)((0,rt.l)((0,rt.l)(h,h),h),(0,ut.d)(-.5));return{x:()=>1===a.rank?(0,mt.t)((0,rt.l)((0,rt.l)(e,(0,En.V)((0,mt.t)(h,[1,1,1,a.shape[0]]),l)),u),s.shape):(0,mt.t)((0,rt.l)((0,rt.l)(e,h),u),s.shape),mean:()=>{let e=(0,rt.l)((0,rt.l)(h,(0,ut.d)(-1)),d);return 1===a.rank&&(e=(0,gt.c)(e,c)),(0,mt.t)(e,a.shape)},variance:()=>{let e=(0,rt.l)((0,rt.l)(f,p),d);return 1===a.rank&&(e=(0,gt.c)(e,c)),(0,mt.t)(e,a.shape)},scale:()=>{const t=(0,rt.l)(p,h);let n=(0,rt.l)(e,t);return 1===a.rank&&(n=(0,gt.c)(n,c)),(0,mt.t)(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=(0,gt.c)(t,c)),(0,mt.t)(t,a.shape)}}}};var $n=n(4268),Fn=n(7706);const Rn={kernelName:tt.mxL,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a,batchDims:o}=n,i=(0,$t.Y6)(a,r.shape)[0],u=(e,t,n)=>()=>{const r=e.shape,s=t.size,o=r.slice(0,i),u=o.length,c=r.slice(a,r.length).slice(1),l=c.length,p=Dn(0,u),d=Dn(u+1,u+1+l),h=_n([o,[s],c]),f=(0,mt.t)(n,h),m=(0,mt.t)(t,[s]),g=_n([[u],p,d]),y=(0,hn.m)(f,g);let b=(0,Fn.z)(y,m,e.shape[i]);const x=(0,pn.gx)(g);return b=(0,hn.m)(b,x),b};if(1===o){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=(0,$n.t)(n.map(((t,n)=>u(t,s.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)},indices:()=>s}}return{x:u(r,s,e),indices:()=>s}}};function Dn(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function _n(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const On={kernelName:tt.lLS,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,xt.P)(n),b:()=>(0,xt.P)(r)}}},Ln={kernelName:tt.lzr,gradFunc:e=>({x:()=>(0,nt.w)(e,"float32")})},Mn={kernelName:tt.gIW,gradFunc:e=>({x:()=>(0,xt.P)(e)})},zn={kernelName:tt.E3$,gradFunc:e=>({x:()=>(0,xt.P)(e)})},Pn={kernelName:tt.iPs,gradFunc:e=>({x:()=>(0,xt.P)(e)})};var Bn=n(2058);const Wn={kernelName:tt.X0$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=(0,Bn.r)(r,0);return{x:()=>(0,Ht._)(a,e,(0,rt.l)(e,s))}}},Vn={kernelName:tt.Cg$,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ot.y)(e,(0,Tt.W)(n,1))}}},Un={kernelName:tt.tG8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ot.y)(e,(0,nt.w)(n,"float32"))}}},Gn={kernelName:tt.zfU,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=(0,vn.o)(r);return(0,pt.j)(e,(0,rt.l)((0,gt.c)(e,s,!0),t))}}}};const Zn=(0,Rt.op)({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,o=.5){const i={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:o};return Et.T2.runKernel(tt.ToN,i,u)}}),jn={kernelName:tt.jM4,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:o,alpha:i,beta:u}=n;return{x:()=>Zn(r,s,e,a,o,i,u)}}};var Hn=n(3020);function Kn(e,t,n,r){return t.rank<n.rank&&(t=(0,mt.t)(t,pn.SM(t.shape,r))),e.rank<n.rank&&(e=(0,mt.t)(e,pn.SM(e.shape,r))),{x:()=>(0,rt.l)(e,(0,nt.w)((0,Hn.L)(n,t),e.dtype))}}const Yn={kernelName:tt.VAI,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],o=Kn(e,t[1],a,$t.Y6(s,a.shape));return{x:()=>o.x()}}};var Qn=n(1303);const qn={kernelName:tt.LDN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,rt.l)(e,(0,nt.w)((0,Gt.D)(n,r),"float32")),b:()=>(0,rt.l)(e,(0,nt.w)((0,Qn.M)(n,r),"float32"))}}};const Xn=(0,Rt.op)({maxPool3dGrad_:function(e,t,n,r,s,a,o){const i=(0,At.YT)(e,"dy","maxPool3dGrad"),u=(0,At.YT)(t,"input","maxPool3dGrad"),c=(0,At.YT)(n,"output","maxPool3dGrad");let l=i,p=u,d=c,h=!1;4===u.rank&&(h=!0,l=(0,mt.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=(0,mt.t)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=(0,mt.t)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),$t.vA(5===l.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),$t.vA(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),$t.vA(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),(0,Ft.s_)("maxPool3dGrad",a,o);const f={dy:l,input:p,output:d},m={filterSize:r,strides:s,pad:a,dimRoundingMode:o},g=Et.T2.runKernel(tt.cHb,f,m);return h?(0,mt.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Jn={kernelName:tt.ySp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=n;return{x:()=>Xn(e,r,s,a,o,i,u)}}};const er=(0,Rt.op)({maxPoolGrad_:function(e,t,n,r,s,a,o){const i=(0,At.YT)(e,"dy","maxPoolGrad"),u=(0,At.YT)(t,"input","maxPoolGrad"),c=(0,At.YT)(n,"output","maxPoolGrad");$t.vA(u.rank===i.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`)),$t.vA(4===i.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`)),$t.vA(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),Ft.s_("maxPoolGrad",a,o);const l={dy:i,input:u,output:c},p={filterSize:r,strides:s,pad:a,dimRoundingMode:o};return Et.T2.runKernel(tt.RXX,l,p)}}),tr={kernelName:tt.t3d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>er(e,r,s,a,o,i)}}};var nr=n(1411);const rr={kernelName:tt.g5A,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=$t.Y6(s,r.shape),o=(0,pn.lb)(r.shape,a)[1],i=$t.Ze(o);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=(0,mt.t)(e,t);return(0,ot.y)((0,rt.l)(n,(0,nr.S)(r.shape,"float32")),i)}}}},sr={kernelName:tt.lNG,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,o]=t,i=Kn(e,o,a,$t.Y6(s,a.shape));return{x:()=>i.x()}}},ar={kernelName:tt.LG0,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,rt.l)(e,(0,nt.w)((0,Zt.I)(n,r),"float32")),b:()=>(0,rt.l)(e,(0,nt.w)((0,Bn.r)(n,r),"float32"))}}};var or=n(7986);const ir={kernelName:tt.x7F,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>(0,or.d)(e,a,r.shape)}}};var ur=n(5606);const cr={kernelName:tt.BLA,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,ft.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,ft.getReductionAxes)(n.shape,s);return t.length>0?(0,mt.t)((0,gt.c)(e,t),n.shape):e},b:()=>{const t=(0,rt.l)(e,(0,it.H)((0,ur.R)((0,ot.y)(n,r)))),a=(0,ft.getReductionAxes)(r.shape,s);return a.length>0?(0,mt.t)((0,gt.c)(t,a),r.shape):t}}}},lr={kernelName:tt.xu7,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,ft.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,rt.l)(e,(0,nt.w)(r,"float32")),a=(0,ft.getReductionAxes)(n.shape,s);return a.length>0?(0,mt.t)((0,gt.c)(t,a),n.shape):t},b:()=>{const t=(0,rt.l)(e,(0,nt.w)(n,"float32")),a=(0,ft.getReductionAxes)(r.shape,s);return a.length>0?(0,mt.t)((0,gt.c)(t,a),r.shape):t}}}},pr={kernelName:tt.l0G,gradFunc:e=>({x:()=>(0,it.H)(e)})};var dr=n(2855);const hr={kernelName:tt.urI,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,dr.U)(n.shape,"float32")}}},fr={kernelName:tt.LWX,gradFunc:e=>({x:()=>(0,xt.P)(e)})};var mr=n(7261);const gr={kernelName:tt.mM$,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return(0,mr.K)(e,r).map((e=>()=>e))}},yr={kernelName:tt.ODT,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>(0,or.d)(e,a,r.shape)}}};var br=n(4010),xr=n(6609);const vr={kernelName:tt.pyJ,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,o=r,i=ft.assertAndGetBroadcastShape(a.shape,o.shape);return{a:()=>{const t=(0,nt.w)(o,"float32");let n=(0,rt.l)(e,(0,rt.l)(t,(0,xr.n)(a,(0,pt.j)(t,(0,ut.d)(1)))));const r=ft.getReductionAxes(a.shape,i);return r.length>0&&(n=(0,gt.c)(n,r)),(0,mt.t)(n,a.shape)},b:()=>{const t=(0,Bn.r)(a,0),n=(0,Ht._)(t,(0,br.R)(a),(0,xt.P)(a));let r=(0,rt.l)(e,(0,rt.l)(s,n));const u=ft.getReductionAxes(o.shape,i);return u.length>0&&(r=(0,gt.c)(r,u)),(0,mt.t)(r,o.shape)}}}},wr={kernelName:tt.Ncv,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,Bn.r)(n,0);return{x:()=>(0,Ht._)(s,e,(0,rt.l)(e,r)),alpha:()=>{let t=(0,Ht._)(s,(0,xt.P)(e),(0,rt.l)(e,n));const a=(0,ft.getReductionAxes)(r.shape,e.shape);return a.length>0&&(t=(0,gt.c)(t,a)),(0,mt.t)(t,r.shape)}}}};var kr=n(302);function Tr(e,t,n){const r=e.shape.length,s=r-n.length,a=pn.Em(n,r);let o=e;null!=a&&(o=(0,hn.m)(e,a));const i=o.shape.slice(),u=i.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(u);let c=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=(0,mt.t)(t,r),a=(0,kr.L)(e,n,!0,!1),o=(0,kr.L)(e,n,!0,!0),i=(0,rt.l)(a,o);return(0,rt.l)(s,i)}(o.reshape(i),t,s);if(c=c.reshape(o.shape),null!=a){const e=pn.gx(a);c=(0,hn.m)(c,e)}return c}const Sr={kernelName:tt.kdj,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=null==s?r.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>Tr(r,e,a)}}},Nr={kernelName:tt.sDr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ft.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{const t=(0,ot.y)(e,(0,nt.w)(r,"float32")),a=ft.getReductionAxes(n.shape,s);return a.length>0?(0,mt.t)((0,gt.c)(t,a),n.shape):t},b:()=>{let t=(0,rt.l)(e,(0,nt.w)(n,"float32"));const a=ft.getReductionAxes(r.shape,s);a.length>0&&(t=(0,mt.t)((0,gt.c)(t,a),r.shape));const o=(0,lt.E)(r);return(0,it.H)((0,ot.y)(t,(0,nt.w)(o,"float32")))}}}},Ir={kernelName:tt.huO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ot.y)(e,(0,it.H)((0,lt.E)(n)))}}},Cr={kernelName:tt.P_L,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,rt.l)((0,Zt.I)(n,6),(0,st.P)(n));return{x:()=>(0,rt.l)(e,(0,nt.w)(r,"float32"))}}},Er={kernelName:tt.fUj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,rt.l)(e,(0,nt.w)((0,st.P)(n),"float32"))}}},Ar={kernelName:tt.R23,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,mt.t)(e,n.shape)}}},$r={kernelName:tt.hgw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Et.T2.runKernel(tt.FCQ,s,n)}}},Fr={kernelName:tt.jOE,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Et.T2.runKernel(tt.XQy,s,n)}}};var Rr=n(3262);const Dr={kernelName:tt.D7i,gradFunc:(e,t,n)=>{const{dims:r}=n,s=(0,$t.Y6)(r,e.shape);return{x:()=>(0,Rr.B)(e,s)}}},_r={kernelName:tt.hVg,gradFunc:e=>({x:()=>(0,xt.P)(e)})},Or={kernelName:tt.TOR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,it.H)((0,ot.y)(e,(0,rt.l)((0,xr.n)(n,1.5),2)))}}};var Lr=n(9881);const Mr={kernelName:tt.l6P,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,nt.w)((0,xt.P)(n),"float32"),t:()=>(0,rt.l)(e,(0,nt.w)(n,e.dtype)),e:()=>(0,rt.l)(e,(0,nt.w)((0,Lr.N)(n),e.dtype))}}};var zr=n(8576);const Pr={kernelName:tt.u$b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,Bn.r)(n,(0,ut.d)(0)),r=(0,ut.d)(zr.j),s=(0,ut.d)(zr.X),a=(0,rt.l)(e,s),o=(0,rt.l)((0,rt.l)(e,r),(0,vn.o)((0,nt.w)(n,"float32")));return(0,Ht._)(t,a,o)}}}},Br={kernelName:tt.vI1,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,rt.l)(e,(0,rt.l)(n,(0,pt.j)((0,ut.d)(1),n)))}}},Wr={kernelName:tt.YVe,gradFunc:e=>({x:()=>(0,xt.P)(e)})};var Vr=n(9907);const Ur={kernelName:tt.hql,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,rt.l)((0,Vr.g)((0,nt.w)(n,"float32")),e)}}};var Gr=n(7451);const Zr={kernelName:tt.J3C,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,rt.l)((0,Gr.y)((0,nt.w)(n,"float32")),e)}}};var jr=n(5661),Hr=n(4969);const Kr={kernelName:tt.JiE,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,o=r.shape,[i,u]=(0,Hr.parseSliceParams)(r,s,a),c=[];for(let l=0;l<e.rank;l++)c.push([i[l],o[l]-i[l]-u[l]]);return{x:()=>(0,jr.e)(e,c)}}},Yr={kernelName:tt.rFG,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=(0,rt.l)(e,r);return{logits:()=>(0,pt.j)(a,(0,rt.l)((0,gt.c)(a,[s],true),r))}}};var Qr=n(8968);const qr={kernelName:tt.Fin,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,rt.l)(e,(0,Qr.r)(n))}}};var Xr=n(9772);const Jr={kernelName:tt.A8B,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>(0,Xr.G)(e,r,s)}}};var es=n(5030);const ts={kernelName:tt.Blb,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>(0,es.x)(e,r)}}},ns={kernelName:tt.dFH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ot.y)(e,(0,rt.l)((0,ct.R)((0,nt.w)(n,"float32")),2))}}},rs={kernelName:tt.M6A,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,rt.l)(e,(0,rt.l)((0,nt.w)(n,"float32"),2))}}},ss={kernelName:tt.Ddj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,ut.d)(2);return{a:()=>(0,rt.l)(e,(0,rt.l)(s,(0,pt.j)(n,r))),b:()=>(0,rt.l)(e,(0,rt.l)(s,(0,pt.j)(r,n)))}}},as={kernelName:tt.pnw,gradFunc:e=>({x:()=>(0,xt.P)(e)})},os={kernelName:tt.PbM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ft.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=ft.getReductionAxes(n.shape,s);return r.length>0&&(t=(0,gt.c)(t,r)),(0,mt.t)(t,n.shape)},b:()=>{let t=e;const n=ft.getReductionAxes(r.shape,s);return n.length>0&&(t=(0,gt.c)(t,n)),(0,mt.t)((0,it.H)(t),r.shape)}}}},is={kernelName:tt.WuN,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;(0,$t.Y6)(a,r.shape).forEach((e=>{s[e]=1}));const o=(0,mt.t)(e,s),i=(0,rt.l)(o,(0,nr.S)(r.shape,"float32"));return{x:()=>i}}},us={kernelName:tt.oFs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ot.y)(e,(0,lt.E)((0,Vr.g)(n)))}}},cs={kernelName:tt.iuW,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,rt.l)((0,pt.j)((0,ut.d)(1),(0,lt.E)(n)),e)}}},ls={kernelName:tt.FAs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=(0,xt.P)(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=(0,Tt.W)(t,(0,or.d)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=(0,Tt.W)(t,(0,or.d)(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)t=(0,Tt.W)(t,(0,or.d)(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)for(let i=0;i<s[3];++i)t=(0,Tt.W)(t,(0,or.d)(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},ps={kernelName:tt.wx0,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=pn.gx(s);return{x:()=>(0,hn.m)(e,a)}}},ds={kernelName:tt.dXR,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>(0,$n.t)(e,s)}}};var hs=n(8710),fs=n(8229),ms=n(178);const gs={kernelName:tt.pPe,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,ms.P)(t,(0,xt.P)(t)),r=(0,fs.k)(e,n);let s=(0,Gt.D)(t,(0,ut.d)(0,"int32"));const a=r.rank-s.rank;for(let i=0;i<a;++i)s=(0,hs.U)(s,i+1);s=(0,jt.n)(s,(0,nr.S)(r.shape,"bool"));const o=(0,xt.P)(r);return(0,Ht._)(s,r,o)}(e,n)}}};const ys={kernelName:tt.xJ3,gradFunc:e=>({x:()=>(0,xt.P)(e)})};var bs=n(7074);const xs=[at,dt,ht,yt,bt,vt,wt,kt,St,Nt,It,Ct,_t,Lt,zt,Bt,Wt,Vt,Ut,Kt,Yt,qt,nn,en,an,un,ln,fn,yn,bn,Nr,xn,wn,kn,Tn,Sn,In,Nn,An,Rn,On,Ln,Mn,zn,Pn,Wn,Vn,Un,Gn,jn,Yn,Yn,qn,Jn,tr,rr,sr,ar,ir,cr,lr,pr,hr,fr,gr,yr,yr,vr,wr,Sr,Ir,Cr,Er,Ar,$r,Fr,Dr,_r,Or,Mr,Pr,Br,Wr,Ur,Zr,Kr,Yr,qr,Jr,Jr,ts,ts,ns,ss,rs,as,os,is,us,cs,ls,ps,ds,gs,ys];for(const kv of xs)(0,bs.kr)(kv);var vs=n(4888),ws=n(259);(0,ws.tp)().prototype.abs=function(){return this.throwIfDisposed(),(0,vs.t)(this)};var ks=n(2804);(0,ws.tp)().prototype.acos=function(){return this.throwIfDisposed(),(0,ks.H)(this)};var Ts=n(7558);(0,ws.tp)().prototype.acosh=function(){return this.throwIfDisposed(),(0,Ts.F)(this)},(0,ws.tp)().prototype.add=function(e){return this.throwIfDisposed(),(0,Tt.W)(this,e)};var Ss=n(2307);(0,ws.tp)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,Ss.Q)(this,e,t)};var Ns=n(9326);(0,ws.tp)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,Ns.b)(this,e,t)};var Is=n(897);(0,ws.tp)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,Is.F)(this,e)};var Cs=n(4339);(0,ws.tp)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,Cs.X)(this,e)},(0,ws.tp)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,$t.vA)(1===this.size,(()=>"The array must have only 1 element.")),(0,mt.t)(this,[])},(0,ws.tp)().prototype.asType=function(e){return this.throwIfDisposed(),(0,nt.w)(this,e)},(0,ws.tp)().prototype.as1D=function(){return this.throwIfDisposed(),(0,mt.t)(this,[this.size])},(0,ws.tp)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,mt.t)(this,[e,t])},(0,ws.tp)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,mt.t)(this,[e,t,n])},(0,ws.tp)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),(0,mt.t)(this,[e,t,n,r])},(0,ws.tp)().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),(0,mt.t)(this,[e,t,n,r,s])};var Es=n(6841);(0,ws.tp)().prototype.asin=function(){return this.throwIfDisposed(),(0,Es.q)(this)};var As=n(269);(0,ws.tp)().prototype.asinh=function(){return this.throwIfDisposed(),(0,As.y)(this)};var $s=n(9580);(0,ws.tp)().prototype.atan=function(){return this.throwIfDisposed(),(0,$s.r)(this)};var Fs=n(1404);(0,ws.tp)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,Fs.F)(this,e)};var Rs=n(3774);(0,ws.tp)().prototype.atanh=function(){return this.throwIfDisposed(),(0,Rs.r)(this)};var Ds=n(3909);(0,ws.tp)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),(0,Ds.$)(this,e,t,n,r)},(0,ws.tp)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,Xr.G)(this,e,t)};var _s=n(9160);(0,ws.tp)().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),(0,_s.$)(this,e,t,n,r,s)};var Os=n(3567);(0,ws.tp)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Os.h)(this,e)},(0,ws.tp)().prototype.cast=function(e){return this.throwIfDisposed(),(0,nt.w)(this,e)};var Ls=n(855);(0,ws.tp)().prototype.ceil=function(){return this.throwIfDisposed(),(0,Ls.m)(this)};var Ms=n(6928);(0,ws.tp)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,Ms.z)(this,e,t)},(0,ws.tp)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ws.qY&&(e=[e]),(0,es.x)([this,...e],t)};var zs=n(3701);(0,ws.tp)().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,zs.k)(this,e,t,n,r,s,a)};var Ps=n(1106);(0,ws.tp)().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),(0,Ps.w)(this,e,t,n,r,s)},(0,ws.tp)().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,tn.X)(this,e,t,n,r,s,a)},(0,ws.tp)().prototype.cos=function(){return this.throwIfDisposed(),(0,Vr.g)(this)},(0,ws.tp)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Gr.y)(this)},(0,ws.tp)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),(0,kr.L)(this,e,t,n)},(0,ws.tp)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,dn.r)(this,e,t,n)};var Bs=n(1216);(0,ws.tp)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,Bs.R)(this,e,t)};var Ws=n(676);(0,ws.tp)().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Ws.G)(this,e,t,n,r,s,a)};var Vs=n(3002);(0,ws.tp)().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),(0,Vs.X)(this,e,t,n,r,s)};var Us=n(919);(0,ws.tp)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,Us.e)(this,e)},(0,ws.tp)().prototype.div=function(e){return this.throwIfDisposed(),(0,ot.y)(this,e)};var Gs=n(9759);(0,ws.tp)().prototype.dot=function(e){return this.throwIfDisposed(),(0,Gs.O)(this,e)};var Zs=n(3416);(0,ws.tp)().prototype.elu=function(){return this.throwIfDisposed(),(0,Zs.P)(this)},(0,ws.tp)().prototype.equal=function(e){return this.throwIfDisposed(),(0,Hn.L)(this,e)};var js=n(5207);(0,ws.tp)().prototype.erf=function(){return this.throwIfDisposed(),(0,js.Y)(this)};var Hs=n(4881);(0,ws.tp)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,Hs.p)(this,e,t)},(0,ws.tp)().prototype.exp=function(){return this.throwIfDisposed(),(0,vn.o)(this)},(0,ws.tp)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,hs.U)(this,e)};var Ks=n(517);(0,ws.tp)().prototype.expm1=function(){return this.throwIfDisposed(),(0,Ks.I)(this)};var Ys=n(1361);(0,ws.tp)().prototype.fft=function(){return this.throwIfDisposed(),(0,Ys.h)(this)},(0,ws.tp)().prototype.flatten=function(){return this.throwIfDisposed(),(0,mt.t)(this,[this.size])},(0,ws.tp)().prototype.floor=function(){return this.throwIfDisposed(),(0,ur.R)(this)};var Qs=n(8991);(0,ws.tp)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,Qs.w)(this,e)},(0,ws.tp)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),(0,fs.k)(this,e,t,n)},(0,ws.tp)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,Gt.D)(this,e)},(0,ws.tp)().prototype.greater=function(e){return this.throwIfDisposed(),(0,Bn.r)(this,e)};var qs=n(3108);(0,ws.tp)().prototype.ifft=function(){return this.throwIfDisposed(),(0,qs.K)(this)};var Xs=n(2292);(0,ws.tp)().prototype.irfft=function(){return this.throwIfDisposed(),(0,Xs.g)(this)};var Js=n(8318);(0,ws.tp)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,Js.M)(this)};var ea=n(3454);(0,ws.tp)().prototype.isInf=function(){return this.throwIfDisposed(),(0,ea.E)(this)};var ta=n(6300);(0,ws.tp)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,ta.y)(this)};var na=n(6919);(0,ws.tp)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,na.H)(this,e)},(0,ws.tp)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,Zt.I)(this,e)},(0,ws.tp)().prototype.less=function(e){return this.throwIfDisposed(),(0,Qn.M)(this,e)};var ra=n(3531);(0,ws.tp)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),(0,ra.K)(this,e,t,n,r)};var sa=n(5645);(0,ws.tp)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,sa.n)(this)};var aa=n(7991);(0,ws.tp)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,aa.H)(this,e)};var oa=n(3330);(0,ws.tp)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,oa.V)(this,e,t)},(0,ws.tp)().prototype.log=function(){return this.throwIfDisposed(),(0,br.R)(this)};var ia=n(2015);(0,ws.tp)().prototype.log1p=function(){return this.throwIfDisposed(),(0,ia.K)(this)},(0,ws.tp)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,jt.n)(this,e)},(0,ws.tp)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Lr.N)(this)};var ua=n(9879);(0,ws.tp)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,ua.z)(this,e)};var ca=n(9925);(0,ws.tp)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,ca.r)(this,e)},(0,ws.tp)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,Mt.N)(this,e,t,n)};var la=n(6999);(0,ws.tp)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),(0,la.j)(this,e,t,n,r)};var pa=n(1938);(0,ws.tp)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,pa.T)(this,e,t)},(0,ws.tp)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,ms.P)(this,e)};var da=n(2611);(0,ws.tp)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,da.i)(this,e,t)};var ha=n(7436);(0,ws.tp)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,ha.j)(this,e,t)};var fa=n(2644);(0,ws.tp)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,fa.B)(this,e)};var ma=n(6567);(0,ws.tp)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,ma.F)(this,e,t)};var ga=n(152);(0,ws.tp)().prototype.mod=function(e){return this.throwIfDisposed(),(0,ga.z)(this,e)},(0,ws.tp)().prototype.mul=function(e){return this.throwIfDisposed(),(0,rt.l)(this,e)},(0,ws.tp)().prototype.neg=function(){return this.throwIfDisposed(),(0,it.H)(this)};var ya=n(2596);(0,ws.tp)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,ya.x)(this,e,t,n)};var ba=n(2118);(0,ws.tp)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,ba.E)(this,e)};var xa=n(1760);(0,ws.tp)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,xa.M)(this,e,t,n)};var va=n(9885);(0,ws.tp)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,va.P)(this)},(0,ws.tp)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,jr.e)(this,e,t)};var wa=n(7872);(0,ws.tp)().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,wa.d)(this,e,t,n,r,s,a)},(0,ws.tp)().prototype.pow=function(e){return this.throwIfDisposed(),(0,xr.n)(this,e)};var ka=n(4394);(0,ws.tp)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,ka.N)(this,e)};var Ta=n(7771);(0,ws.tp)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Ta._)(this,e,t)};var Sa=n(9870);(0,ws.tp)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Sa.V)(this)};var Na=n(112);(0,ws.tp)().prototype.relu=function(){return this.throwIfDisposed(),(0,Na.V)(this)};var Ia=n(3732);(0,ws.tp)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Ia.j)(this)},(0,ws.tp)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,mt.t)(this,e.shape)},(0,ws.tp)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,mt.t)(this,e)};var Ca=n(4711);(0,ws.tp)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Ca.v)(this,e,t,n)};var Ea=n(2954);(0,ws.tp)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,Ea.b)(this,e,t,n)},(0,ws.tp)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,Rr.B)(this,e)};var Aa=n(8775);(0,ws.tp)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Aa.z)(this)};var $a=n(5912);(0,ws.tp)().prototype.round=function(){return this.throwIfDisposed(),(0,$a.L)(this)},(0,ws.tp)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,Cn.Z)(this)};var Fa=n(6325);(0,ws.tp)().prototype.selu=function(){return this.throwIfDisposed(),(0,Fa.W)(this)};var Ra=n(9986);(0,ws.tp)().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Ra.w)(this,e,t,n,r,s,a)},(0,ws.tp)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Qr.r)(this)};var Da=n(1115);(0,ws.tp)().prototype.sign=function(){return this.throwIfDisposed(),(0,Da._)(this)},(0,ws.tp)().prototype.sin=function(){return this.throwIfDisposed(),(0,on.F)(this)},(0,ws.tp)().prototype.sinh=function(){return this.throwIfDisposed(),(0,cn.L)(this)},(0,ws.tp)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,or.d)(this,e,t)};var _a=n(6346);(0,ws.tp)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,_a.V)(this,e)};var Oa=n(6030);(0,ws.tp)().prototype.softplus=function(){return this.throwIfDisposed(),(0,Oa.l)(this)},(0,ws.tp)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,Pt.e)(this,e,t)},(0,ws.tp)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,Qt.l)(this,e,t)},(0,ws.tp)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,ct.R)(this)},(0,ws.tp)().prototype.square=function(){return this.throwIfDisposed(),(0,lt.E)(this)};var La=n(3427);(0,ws.tp)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,La.P)(this,e)};var Ma=n(5932);(0,ws.tp)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,Ma.r)(this,e)},(0,ws.tp)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof ws.qY?[this,e]:[this,...e];return(0,$n.t)(n,t)},(0,ws.tp)().prototype.step=function(e){return this.throwIfDisposed(),(0,st.P)(this,e)};var za=n(5894);(0,ws.tp)().prototype.stridedSlice=function(e,t,n,r,s,a,o,i){return this.throwIfDisposed(),(0,za.Y)(this,e,t,n,r,s,a,o,i)},(0,ws.tp)().prototype.sub=function(e){return this.throwIfDisposed(),(0,pt.j)(this,e)},(0,ws.tp)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,gt.c)(this,e,t)};var Pa=n(7823);(0,ws.tp)().prototype.tan=function(){return this.throwIfDisposed(),(0,Pa.M)(this)};var Ba=n(7311);(0,ws.tp)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Ba.y)(this)},(0,ws.tp)().prototype.tile=function(e){return this.throwIfDisposed(),(0,En.V)(this,e)},(0,ws.tp)().prototype.toBool=function(){return this.throwIfDisposed(),(0,nt.w)(this,"bool")},(0,ws.tp)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,nt.w)(this,"float32")},(0,ws.tp)().prototype.toInt=function(){return this.throwIfDisposed(),(0,nt.w)(this,"int32")};var Wa=n(1190);(0,ws.tp)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,Wa.r)(this,e,t)},(0,ws.tp)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,hn.m)(this,e)};var Va=n(3937);(0,ws.tp)().prototype.unique=function(e){return this.throwIfDisposed(),(0,Va.A)(this,e)},(0,ws.tp)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,Fn.z)(this,e,t)},(0,ws.tp)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,mr.K)(this,e)},(0,ws.tp)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,Ht._)(e,this,t)},(0,ws.tp)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,xt.P)(this)};var Ua=n(1499);(0,et._K2)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),Ua.oR);n(7504);n(3684);n(5108),n(8981),n(7937);n(3976),n(4379);var Ga=n(5244);n(9013),n(5841),n(6681);Ga.J5;n(9730),n(159),n(6481),n(1765);var Za=n(2700);var ja,Ha;(0,et._K2)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(ja||(ja={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Ha||(Ha={}));const Ka={};function Ya(e){return Ka[e]}function Qa(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,o=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return qa(t.inputNames[i],n,r,s);if("tensors"===a.type){const a=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)})).map((e=>qa(e,n,r,s)))}const u=qa(t.inputNames[i],n,r,s),c=u.dataSync();return"number"===a.type?c[0]:et.ZSL.toNestedArray(u.shape,c)}const o=t.attrParams[e];return o&&o.value}function qa(e,t,n,r){const[s,a]=to(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[eo(s,e)]));return void 0!==o?t[eo(s,o)][a]:void 0}function Xa(e,t,n){return t[eo(e,n.currentContextId)]}function Ja(e,t){const[n,r,s]=to(e,t);return[eo(n,t&&t.currentContextId),r,s]}function eo(e,t){return t?`${e}-${t}`:e}function to(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;s=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,s),s}function no(e,t,n){let r=Qa("pad",e,t,n);if("explicit"===r){r=Qa("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function ro(e){return e.kept?e:(0,et.o8B)(e)}const so=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ao=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],oo=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],io=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],uo=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],co=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],lo=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],po=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],ho=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],fo=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],mo=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],go=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],yo=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],bo=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],xo=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],vo=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],wo=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],ko=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],To=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class So{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,s,a,o,i,u,c,l,p,d,h,f,m,g,y,b,x,v,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let i=[];const u=[];let c={},l={};null!=t&&(c=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));const p=Object.keys(o);p.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=Ja(e),a=o[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(l).length?p.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(l).forEach((e=>{const[t]=Ja(e),n=o[t];null!=n&&(n.signatureKey=l[e],u.push(n))})),Object.keys(c).length>0?Object.keys(c).forEach((e=>{const[t]=Ja(e),n=o[t];n&&(n.signatureKey=c[e],i.push(n))})):i=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:o,inputs:i,outputs:u,weights:s,placeholders:r,signature:t,functions:d};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Ya(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=Io(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Io(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=Lo(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Lo(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=Eo(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=Eo(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=Oo(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Oo(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=Co(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Co(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=zo(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=zo(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=_o(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=_o(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=Mo(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Mo(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=Fo(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Fo(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=Ro(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ro(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=$o(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=$o(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=Ja(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Ao(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=Ja(e),o=r[s];if(null!=o.outputs){const e=o.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Ja(o[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function No(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,et._K2)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Io(e,t,n,r=!1){const s=e[t];return null!=s?No(s.s,r):n}function Co(e,t,n){const r=e[t];return r?r.b:n}function Eo(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function Ao(e){switch("string"==typeof e&&(e=ja[e]),e){case ja.DT_FLOAT:case ja.DT_HALF:return"float32";case ja.DT_INT32:case ja.DT_INT64:case ja.DT_INT8:case ja.DT_UINT8:return"int32";case ja.DT_BOOL:return"bool";case ja.DT_DOUBLE:return"float32";case ja.DT_STRING:return"string";case ja.DT_COMPLEX64:case ja.DT_COMPLEX128:return"complex64";default:return null}}function $o(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Fo(e,t,n){const r=e[t];return r&&r.type?Ao(r.type):n}function Ro(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>Ao(e))):n}function Do(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function _o(e,t,n){const r=e[t];return r&&r.shape?Do(r.shape):n}function Oo(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function Lo(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>No(e,r))):n}function Mo(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>Do(e))):n}function zo(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class Po{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return qa(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return qa(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Eo(this.node.rawAttrs,e,t);if(null!=n.s)return Io(this.node.rawAttrs,e,t);if(null!=n.b)return Co(this.node.rawAttrs,e,t);if(null!=n.shape)return _o(this.node.rawAttrs,e,t);if(null!=n.type)return Fo(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Oo(this.node.rawAttrs,e,t);if(null!=n.list.s)return Lo(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Mo(this.node.rawAttrs,e,t);if(null!=n.list.b)return zo(this.node.rawAttrs,e,t);if(null!=n.list.type)return Ro(this.node.rawAttrs,e,t)}return t}}var Bo=n(4066);function Wo(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){et.ZSL.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];et.ZSL.assert(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Vo(e){return"number"!=typeof e&&!e.some((e=>e<0))}function Uo(e,t,n){let r=Go(e,n);const s=!Vo(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=Go(e.shape,r)})),!Vo(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Go(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class Zo{constructor(e,t,n,r,s,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,et.d_2)(0),(0,et.aCs)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Wo(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,et.aCs)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,et.OEK)([],[0].concat(this.elementShape));const n=this.readMany(e);return Wo(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,et.t$z)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,et.OEK)([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return Wo(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,et.xWs)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,et.K$i)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];(0,et.DZQ)((()=>{t=(0,et.tQQ)(t,[1,n,s]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],s];a[n]=(0,et.tQQ)((0,et.dik)(t,o,i),this.elementShape)}return a}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}}class jo{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Wo(t,e.shape,"TensorList shape mismatch: "),(0,et.aCs)(e)})),this.idTensor=(0,et.d_2)(0),this.maxNumElements=r,(0,et.aCs)(this.idTensor)}copy(){return new jo([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Wo(e,this.elementShape,"TensorList shape mismatch: ");const r=Uo(this.elementShape,this.tensors,e);return(0,et.DZQ)((()=>{const e=this.tensors.map((e=>(0,et.tQQ)(e,r)));return(0,et.t$z)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Uo(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,Wo(r.shape,e,"TensorList shape mismatch: "),(0,et.tQQ)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Wo(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,et.aCs)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new jo([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Wo(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Uo(this.elementShape,this.tensors,t);return(0,et.tQQ)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Wo(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,et.aCs)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Wo(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Uo(this.elementShape,this.tensors,n);return 0===e.length?(0,et.OEK)([],[0].concat(r)):(0,et.DZQ)((()=>{const t=e.map((e=>(0,et.tQQ)(this.tensors[e],r)));return(0,et.t$z)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Wo(this.elementShape,t,"TensorList shape mismatch: ");const n=Uo(this.elementShape,this.tensors,t);return 0===this.size()?(0,et.OEK)([],[0].concat(n)):(0,et.DZQ)((()=>{const e=this.tensors.map((e=>(0,et.tQQ)(e,n)));return(0,et.xWs)(e,0)}))}}const Ho=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Qa("thenBranch",e,t,n),s=Qa("elseBranch",e,t,n),a=Qa("cond",e,t,n),o=Qa("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Qa("body",e,t,n),s=Qa("cond",e,t,n),a=Qa("args",e,t,n),o=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let c=a;for(;u[0];){const e=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const t=c.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return c}case"LoopCond":return[ro(Qa("pred",e,t,n))];case"Switch":{const r=Qa("pred",e,t,n);let s=Qa("data",e,t,n);return s.kept||(s=ro(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==qa(e,t,n)));if(r){return[ro(qa(r,t,n))]}return}case"Enter":{const r=Qa("frameName",e,t,n),s=Qa("tensor",e,t,n);return n.enterFrame(r),[ro(s)]}case"Exit":{const r=Qa("tensor",e,t,n);return n.exitFrame(),[ro(r)]}case"NextIteration":{const r=Qa("tensor",e,t,n);return n.nextIteration(),[ro(r)]}case"TensorArrayV3":{const r=Qa("size",e,t,n),s=Qa("dtype",e,t,n),a=Qa("elementShape",e,t,n),o=Qa("dynamicSize",e,t,n),i=Qa("clearAfterRead",e,t,n),u=Qa("identicalElementShapes",e,t,n),c=Qa("name",e,t,n),l=new Zo(c,s,r,a,u,o,i);return n.addTensorArray(l),[l.idTensor,(0,et.d_2)(1)]}case"TensorArrayWriteV3":{const r=Qa("tensorArrayId",e,t,n),s=Qa("index",e,t,n),a=Qa("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(s,a),[o.idTensor]}case"TensorArrayReadV3":{const r=Qa("tensorArrayId",e,t,n),s=Qa("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=Qa("tensorArrayId",e,t,n),s=Qa("indices",e,t,n),a=Qa("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=Qa("tensorArrayId",e,t,n),s=Qa("indices",e,t,n),a=Qa("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(s,a),[o.idTensor]}case"TensorArrayConcatV3":{const r=Qa("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=Qa("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=Qa("tensorArrayId",e,t,n),s=Qa("tensor",e,t,n),a=Qa("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(a,s),[o.idTensor]}case"TensorArraySizeV3":{const r=Qa("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return[(0,et.d_2)(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=Qa("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=Qa("tensorListId",e,t,n),s=Qa("index",e,t,n),a=Qa("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(s,a),[o.idTensor]}case"TensorListGetItem":{const r=Qa("tensorListId",e,t,n),s=Qa("index",e,t,n),a=Qa("elementShape",e,t,n),o=Qa("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Qa("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new jo([],n,e.dtype,r),o=(0,et.K$i)(e,0);return t.forEach(((e,t)=>{a.setItem(e,o[t])})),a}(Qa("tensor",e,t,n),r,Qa("elementShape",e,t,n),Qa("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Qa("elementShape",e,t,n),s=Qa("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=Qa(a,e,t,n),i=function(e,t,n,r){return new jo([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=Qa("tensorListId",e,t,n),s=Qa("indices",e,t,n),a=Qa("elementShape",e,t,n),o=Qa("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,o,a)]}case"TensorListStack":{const r=Qa("tensorListId",e,t,n),s=Qa("elementShape",e,t,n),a=Qa("elementDType",e,t,n),o=Qa("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Wo(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=(0,et.K$i)(e);return new jo(s,t,r)}(Qa("tensor",e,t,n),Qa("elementShape",e,t,n),Qa("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=Qa("tensorListId",e,t,n),s=n.getTensorList(r.id),a=Qa("dtype",e,t,n),o=Qa("elementShape",e,t,n);return[s.concat(a,o)]}case"TensorListPushBack":{const r=Qa("tensorListId",e,t,n),s=Qa("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=Qa("tensorListId",e,t,n),s=Qa("elementShape",e,t,n),a=Qa("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=Qa("tensor",e,t,n),s=Qa("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=Go(e.shape.slice(1),n),o=0===r?0:e.size/r,i=(0,et.DZQ)((()=>{const n=[];e=(0,et.tQQ)(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:s[r-1],0],u=[1,t[r],o];n[r]=(0,et.tQQ)((0,et.dik)(e,i,u),a)}return e.dispose(),n})),u=new jo([],n,e.dtype,t.length);for(let c=0;c<i.length;c++)u.setItem(c,i[c]);return u}(r,Qa("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=Qa("tensorListId",e,t,n),s=n.getTensorList(r.id);return[(0,et.d_2)(s.size(),"int32")]}case"TensorListResize":{const r=Qa("tensorListId",e,t,n),s=Qa("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Ko(e,t,n){const[r,s]=Qa("fusedOps",e,t,n),a="biasadd"===r,o=!a,i="prelu"===s,u="fusedbatchnorm"===r,c=Qa("numArgs",e,t,n);if(a){if(i&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=Qa("strides",e,t,n),p=no(e,t,n),d=Qa("dataFormat",e,t,n).toUpperCase(),h=Qa("dilations",e,t,n);let[f,m]=Qa("args",e,t,n);o&&(m=f,f=void 0);return{stride:l,pad:p,dataFormat:d,dilations:h,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:Qa("leakyreluAlpha",e,t,n)}}function Yo(e,t,n){return{boxes:Qa("boxes",e,t,n),scores:Qa("scores",e,t,n),maxOutputSize:Qa("maxOutputSize",e,t,n),iouThreshold:Qa("iouThreshold",e,t,n),scoreThreshold:Qa("scoreThreshold",e,t,n),softNmsSigma:Qa("softNmsSigma",e,t,n)}}class Qo{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,et.d_2)(0),this.tensorMap=new Map,(0,et.aCs)(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ut.d(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,et.DZQ)((()=>{const e=(0,et.K$i)(t),r=n.length,s=e.length;et.ZSL.assert(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];(0,et.aCs)(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,et.DZQ)((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return(0,et.t$z)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function qo(e,t,n,r,s=et.DZQ){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(Qa("a",e,t,n),Qa("b",e,t,n))];case"AddN":return[r.addN(Qa("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(Qa("a",e,t,n),Qa("b",e,t,n))];case"Mul":return[r.mul(Qa("a",e,t,n),Qa("b",e,t,n))];case"RealDiv":case"Div":return[r.div(Qa("a",e,t,n),Qa("b",e,t,n))];case"DivNoNan":return[r.divNoNan(Qa("a",e,t,n),Qa("b",e,t,n))];case"FloorDiv":return[r.floorDiv(Qa("a",e,t,n),Qa("b",e,t,n))];case"Sub":return[r.sub(Qa("a",e,t,n),Qa("b",e,t,n))];case"Minimum":return[r.minimum(Qa("a",e,t,n),Qa("b",e,t,n))];case"Maximum":return[r.maximum(Qa("a",e,t,n),Qa("b",e,t,n))];case"Pow":return[r.pow(Qa("a",e,t,n),Qa("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(Qa("a",e,t,n),Qa("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(Qa("x",e,t,n))];case"Acos":return[r.acos(Qa("x",e,t,n))];case"Acosh":return[r.acosh(Qa("x",e,t,n))];case"Asin":return[r.asin(Qa("x",e,t,n))];case"Asinh":return[r.asinh(Qa("x",e,t,n))];case"Atan":return[r.atan(Qa("x",e,t,n))];case"Atan2":return[r.atan2(Qa("x",e,t,n),Qa("y",e,t,n))];case"Atanh":return[r.atanh(Qa("x",e,t,n))];case"Ceil":return[r.ceil(Qa("x",e,t,n))];case"Complex":return[r.complex(Qa("real",e,t,n),Qa("imag",e,t,n))];case"Cos":return[r.cos(Qa("x",e,t,n))];case"Cosh":return[r.cosh(Qa("x",e,t,n))];case"Elu":return[r.elu(Qa("x",e,t,n))];case"Erf":return[r.erf(Qa("x",e,t,n))];case"Exp":return[r.exp(Qa("x",e,t,n))];case"Expm1":return[r.expm1(Qa("x",e,t,n))];case"Floor":return[r.floor(Qa("x",e,t,n))];case"Log":return[r.log(Qa("x",e,t,n))];case"Log1p":return[r.log1p(Qa("x",e,t,n))];case"Imag":return[r.imag(Qa("x",e,t,n))];case"Neg":return[r.neg(Qa("x",e,t,n))];case"Reciprocal":return[r.reciprocal(Qa("x",e,t,n))];case"Real":return[r.real(Qa("x",e,t,n))];case"Relu":return[r.relu(Qa("x",e,t,n))];case"Round":return[r.round(Qa("x",e,t,n))];case"Selu":return[r.selu(Qa("x",e,t,n))];case"Sigmoid":return[r.sigmoid(Qa("x",e,t,n))];case"Sin":return[r.sin(Qa("x",e,t,n))];case"Sign":return[r.sign(Qa("x",e,t,n))];case"Sinh":return[r.sinh(Qa("x",e,t,n))];case"Softplus":return[r.softplus(Qa("x",e,t,n))];case"Sqrt":return[r.sqrt(Qa("x",e,t,n))];case"Square":return[r.square(Qa("x",e,t,n))];case"Tanh":return[r.tanh(Qa("x",e,t,n))];case"Tan":return[r.tan(Qa("x",e,t,n))];case"ClipByValue":return[r.clipByValue(Qa("x",e,t,n),Qa("clipValueMin",e,t,n),Qa("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(Qa("x",e,t,n))];case"Rsqrt":return[r.rsqrt(qa(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(Qa("x",e,t,n),Qa("alpha",e,t,n))];case"Prelu":return[r.prelu(Qa("x",e,t,n),Qa("alpha",e,t,n))];case"IsNan":return[r.isNaN(qa(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(qa(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(qa(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return Ho(e,t,n);case"convolution":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Conv1D":{const s=Qa("stride",e,t,n),a=Qa("pad",e,t,n),o=Qa("dataFormat",e,t,n).toUpperCase(),i=Qa("dilation",e,t,n);return[r.conv1d(Qa("x",e,t,n),Qa("filter",e,t,n),s,a,o,i)]}case"Conv2D":{const s=Qa("strides",e,t,n),a=no(e,t,n),o=Qa("dataFormat",e,t,n).toUpperCase(),i=Qa("dilations",e,t,n);return[r.conv2d(Qa("x",e,t,n),Qa("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:o,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:p}=Ko(e,t,n);return[r.fused.conv2d({x:Qa("x",e,t,n),filter:Qa("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:o,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:p}=Ko(e,t,n);return[r.fused.depthwiseConv2d({x:Qa("x",e,t,n),filter:Qa("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=Qa("outputShape",e,t,n),a=Qa("strides",e,t,n),o=no(e,t,n);return[r.conv2dTranspose(Qa("x",e,t,n),Qa("filter",e,t,n),s,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=Qa("strides",e,t,n),a=no(e,t,n),o=Qa("dilations",e,t,n),i=Qa("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(Qa("input",e,t,n),Qa("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"Conv3D":{const s=Qa("strides",e,t,n),a=Qa("pad",e,t,n),o=Qa("dataFormat",e,t,n).toUpperCase(),i=Qa("dilations",e,t,n);return[r.conv3d(Qa("x",e,t,n),Qa("filter",e,t,n),[s[1],s[2],s[3]],a,o,[i[1],i[2],i[3]])]}case"AvgPool":{const s=Qa("strides",e,t,n),a=Qa("pad",e,t,n),o=Qa("kernelSize",e,t,n);return[r.avgPool(Qa("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=Qa("strides",e,t,n),a=Qa("pad",e,t,n),o=Qa("kernelSize",e,t,n);return[r.maxPool(Qa("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=Qa("strides",e,t,n),a=Qa("pad",e,t,n),o=Qa("kernelSize",e,t,n),i=Qa("includeBatchInIndex",e,t,n),{result:u,indexes:c}=r.maxPoolWithArgmax(Qa("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a,i);return[u,c]}case"AvgPool3D":{const s=Qa("strides",e,t,n),a=Qa("pad",e,t,n),o=Qa("kernelSize",e,t,n);return[r.avgPool3d(Qa("x",e,t,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=Qa("strides",e,t,n),a=Qa("pad",e,t,n),o=Qa("kernelSize",e,t,n);return[r.maxPool3d(Qa("x",e,t,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=Qa("strides",e,t,n),a=Qa("pad",e,t,n),o=Qa("dilations",e,t,n),i=s[1],u=s[2],c=o[1],l=o[2];return[r.dilation2d(Qa("x",e,t,n),Qa("filter",e,t,n),[i,u],a,[c,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Fill":{const s=Qa("shape",e,t,n),a=Qa("dtype",e,t,n),o=Qa("value",e,t,n);return[r.fill(s,o,a)]}case"LinSpace":{const s=Qa("start",e,t,n),a=Qa("stop",e,t,n),o=Qa("num",e,t,n);return[r.linspace(s,a,o)]}case"Multinomial":{const s=Qa("logits",e,t,n),a=Qa("numSamples",e,t,n),o=Qa("seed",e,t,n);return[r.multinomial(s,a,o)]}case"OneHot":{const s=Qa("indices",e,t,n),a=Qa("depth",e,t,n),o=Qa("onValue",e,t,n),i=Qa("offValue",e,t,n),u=Qa("dtype",e,t,n);return[r.oneHot(s,a,o,i,u)]}case"Ones":return[r.ones(Qa("shape",e,t,n),Qa("dtype",e,t,n))];case"OnesLike":return[r.onesLike(Qa("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(Qa("shape",e,t,n),Qa("dtype",e,t,n),Qa("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(Qa("shape",e,t,n),Qa("minval",e,t,n),Qa("maxval",e,t,n),Qa("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(Qa("shape",e,t,n),Qa("minval",e,t,n),Qa("maxval",e,t,n),Qa("seed",e,t,n))];case"Range":{const s=Qa("start",e,t,n),a=Qa("stop",e,t,n),o=Qa("step",e,t,n);return[r.range(s,a,o,Qa("dtype",e,t,n))]}case"TruncatedNormal":{const s=Qa("shape",e,t,n),a=Qa("mean",e,t,n),o=Qa("stdDev",e,t,n),i=Qa("seed",e,t,n);return[r.truncatedNormal(s,a,o,Qa("dtype",e,t,n),i)]}case"Zeros":return[r.zeros(Qa("shape",e,t,n),Qa("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(Qa("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,s=k)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=Yo(e,t,n),l=await s.image.nonMaxSuppressionWithScoreAsync(r,a,o,i,u,c);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=Yo(e,t,n),c=Qa("padToMaxOutputSize",e,t,n),l=await s.image.nonMaxSuppressionPaddedAsync(r,a,o,i,u,c);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=Yo(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,o,i,u)]}case"Where":{const r=s.cast(Qa("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(Qa("x",e,t,n),Qa("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"LowerBound":{const s=Qa("sortedSequence",e,t,n),a=Qa("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=Qa("x",e,t,n),a=Qa("k",e,t,n),o=Qa("sorted",e,t,n),i=r.topk(s,a,o);return[i.values,i.indices]}case"UpperBound":{const s=Qa("sortedSequence",e,t,n),a=Qa("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=Qa("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=Qa("x",e,t,n),a=Qa("axis",e,t,n),o=r.unique(s,a);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"ResizeBilinear":{const s=Qa("images",e,t,n),a=Qa("size",e,t,n),o=Qa("alignCorners",e,t,n),i=Qa("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],o,i)]}case"ResizeNearestNeighbor":{const s=Qa("images",e,t,n),a=Qa("size",e,t,n),o=Qa("alignCorners",e,t,n),i=Qa("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],o,i)]}case"CropAndResize":{const s=Qa("image",e,t,n),a=Qa("boxes",e,t,n),o=Qa("boxInd",e,t,n),i=Qa("cropSize",e,t,n),u=Qa("method",e,t,n),c=Qa("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,o,i,u,c)]}case"ImageProjectiveTransformV3":{const s=Qa("images",e,t,n),a=Qa("transforms",e,t,n),o=Qa("outputShape",e,t,n),i=Qa("fillValue",e,t,n),u=Qa("interpolation",e,t,n),c=Qa("fillMode",e,t,n);return[r.image.transform(s,a,u.toLowerCase(),c.toLowerCase(),i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=Qa("default",e,t,n);return[qa(e.name,t,n)||s];case"Placeholder":return[qa(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[ro(Qa("x",e,t,n))];case"IdentityN":return Qa("x",e,t,n).map((e=>ro(e)));case"Shape":return[r.tensor1d(Qa("x",e,t,n).shape,"int32")];case"ShapeN":return Qa("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(Qa("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(Qa("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=Qa("x",e,t,n),o=Qa("data",e,t,n),i=Qa("message",e,t,n),u=Qa("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Equal":return[r.equal(Qa("a",e,t,n),Qa("b",e,t,n))];case"NotEqual":return[r.notEqual(Qa("a",e,t,n),Qa("b",e,t,n))];case"Greater":return[r.greater(Qa("a",e,t,n),Qa("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(Qa("a",e,t,n),Qa("b",e,t,n))];case"Less":return[r.less(Qa("a",e,t,n),Qa("b",e,t,n))];case"LessEqual":return[r.lessEqual(Qa("a",e,t,n),Qa("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(Qa("a",e,t,n),Qa("b",e,t,n))];case"LogicalNot":return[r.logicalNot(Qa("a",e,t,n))];case"LogicalOr":return[r.logicalOr(Qa("a",e,t,n),Qa("b",e,t,n))];case"Select":case"SelectV2":return[r.where(Qa("condition",e,t,n),Qa("a",e,t,n),Qa("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(Qa("a",e,t,n),Qa("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(Qa("a",e,t,n),Qa("b",e,t,n),Qa("transposeA",e,t,n),Qa("transposeB",e,t,n))];case"Einsum":return[r.einsum(Qa("equation",e,t,n),...Qa("tensors",e,t,n))];case"Transpose":return[r.transpose(Qa("x",e,t,n),Qa("perm",e,t,n))];case"_FusedMatMul":const[s,a]=Qa("fusedOps",e,t,n),o="biasadd"===s,i="prelu"===a,u=Qa("numArgs",e,t,n),c=Qa("leakyreluAlpha",e,t,n);if(o){if(i&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,p]=Qa("args",e,t,n);return[r.fused.matMul({a:Qa("a",e,t,n),b:Qa("b",e,t,n),transposeA:Qa("transposeA",e,t,n),transposeB:Qa("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:p,leakyreluAlpha:c})];case"MatrixBandPart":return[r.linalg.bandPart(Qa("a",e,t,n),Qa("numLower",e,t,n),Qa("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(Qa("x",e,t,n),Qa("axis",e,t,n),Qa("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(Qa("x",e,t,n),Qa("mean",e,t,n),Qa("variance",e,t,n),Qa("offset",e,t,n),Qa("scale",e,t,n),Qa("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(Qa("x",e,t,n),Qa("radius",e,t,n),Qa("bias",e,t,n),Qa("alpha",e,t,n),Qa("beta",e,t,n))];case"Softmax":return[r.softmax(Qa("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(Qa("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(Qa("paramsNestedSplits",e,t,n),Qa("paramsDenseValues",e,t,n),Qa("indices",e,t,n),Qa("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(Qa("starts",e,t,n),Qa("limits",e,t,n),Qa("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(Qa("shape",e,t,n),Qa("values",e,t,n),Qa("defaultValue",e,t,n),Qa("rowPartitionTensors",e,t,n),Qa("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Max":{const s=Qa("axis",e,t,n),a=Qa("keepDims",e,t,n);return[r.max(Qa("x",e,t,n),s,a)]}case"Mean":{const s=Qa("axis",e,t,n),a=Qa("keepDims",e,t,n);return[r.mean(Qa("x",e,t,n),s,a)]}case"Min":{const s=Qa("axis",e,t,n),a=Qa("keepDims",e,t,n);return[r.min(Qa("x",e,t,n),s,a)]}case"Sum":{const s=Qa("axis",e,t,n),a=Qa("keepDims",e,t,n);return[r.sum(Qa("x",e,t,n),s,a)]}case"All":{const s=Qa("axis",e,t,n),a=Qa("keepDims",e,t,n);return[r.all(Qa("x",e,t,n),s,a)]}case"Any":{const s=Qa("axis",e,t,n),a=Qa("keepDims",e,t,n);return[r.any(Qa("x",e,t,n),s,a)]}case"ArgMax":{const s=Qa("axis",e,t,n);return[r.argMax(Qa("x",e,t,n),s)]}case"ArgMin":{const s=Qa("axis",e,t,n);return[r.argMin(Qa("x",e,t,n),s)]}case"Prod":{const s=Qa("axis",e,t,n),a=Qa("keepDims",e,t,n);return[r.prod(Qa("x",e,t,n),s,a)]}case"Cumprod":{const s=Qa("axis",e,t,n),a=Qa("exclusive",e,t,n),o=Qa("reverse",e,t,n);return[r.cumprod(Qa("x",e,t,n),s,a,o)]}case"Cumsum":{const s=Qa("axis",e,t,n),a=Qa("exclusive",e,t,n),o=Qa("reverse",e,t,n);return[r.cumsum(Qa("x",e,t,n),s,a,o)]}case"Bincount":const s=Qa("x",e,t,n),a=Qa("weights",e,t,n),o=Qa("size",e,t,n);return[r.bincount(s,a,o)];case"DenseBincount":{const s=Qa("x",e,t,n),a=Qa("weights",e,t,n),o=Qa("size",e,t,n),i=Qa("binaryOutput",e,t,n);return[r.denseBincount(s,a,o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=Qa("n",e,t,n),a=Qa("axis",e,t,n);let o=Qa("tensors",e,t,n);return o=o.slice(0,s),[r.concat(o,a)]}case"Gather":{const s=Qa("x",e,t,n),a=Qa("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=Qa("axis",e,t,n),a=Qa("batchDims",e,t,n),o=Qa("x",e,t,n),i=Qa("indices",e,t,n);return[r.gather(o,r.cast(i,"int32"),s,a)]}case"Reverse":{const s=Qa("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const o=Qa("x",e,t,n);return[r.reverse(o,a)]}case"ReverseV2":{const s=Qa("axis",e,t,n),a=Qa("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=Qa("begin",e,t,n),a=Qa("size",e,t,n);return[r.slice(Qa("x",e,t,n),s,a)]}case"StridedSlice":{const s=Qa("begin",e,t,n),a=Qa("end",e,t,n),o=Qa("strides",e,t,n),i=Qa("beginMask",e,t,n),u=Qa("endMask",e,t,n),c=Qa("ellipsisMask",e,t,n),l=Qa("newAxisMask",e,t,n),p=Qa("shrinkAxisMask",e,t,n),d=Qa("x",e,t,n);return[r.stridedSlice(d,s,a,o,i,u,c,l,p)]}case"Pack":return(0,et.DZQ)((()=>{const s=Qa("axis",e,t,n),a=Qa("tensors",e,t,n),o=a[0].shape,i=r.squeeze(a[0]).shape,u=a.map((e=>{const t=et.ZSL.arraysEqual(e.shape,o);if(!t&&!et.ZSL.arraysEqual(r.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,o)}));return[r.stack(u,s)]}));case"Unpack":{const s=Qa("axis",e,t,n),a=Qa("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=Qa("reps",e,t,n);return[r.tile(Qa("x",e,t,n),s)]}case"Split":case"SplitV":{const s=Qa("axis",e,t,n),a=Qa("numOrSizeSplits",e,t,n),o=Qa("x",e,t,n);return r.split(o,a,s)}case"ScatterNd":{const s=Qa("indices",e,t,n),a=Qa("values",e,t,n),o=Qa("shape",e,t,n);return[r.scatterND(s,a,o)]}case"GatherNd":{const s=Qa("x",e,t,n),a=Qa("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=Qa("sparseIndices",e,t,n),a=Qa("outputShape",e,t,n),o=Qa("sparseValues",e,t,n),i=Qa("defaultValue",e,t,n);return[r.sparseToDense(s,o,a,o.dtype===i.dtype?i:r.cast(i,o.dtype))]}case"TensorScatterUpdate":{const s=Qa("indices",e,t,n),a=Qa("values",e,t,n),o=Qa("tensor",e,t,n);return[r.tensorScatterUpdate(o,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:o,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(Qa("indices",e,t,n),Qa("values",e,t,n),Qa("denseShape",e,t,n),Qa("defaultValue",e,t,n));return[s,a,o,i]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(Qa("inputIndices",e,t,n),Qa("inputShape",e,t,n),Qa("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(Qa("data",e,t,n),Qa("indices",e,t,n),Qa("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(Qa("data",e,t,n),Qa("indices",e,t,n),Qa("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"FFT":return[r.fft(Qa("x",e,t,n))];case"IFFT":return[r.ifft(Qa("x",e,t,n))];case"RFFT":return[r.rfft(Qa("x",e,t,n))];case"IRFFT":return[r.irfft(Qa("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(Qa("input",e,t,n),Qa("pattern",e,t,n),Qa("rewrite",e,t,n),Qa("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(Qa("data",e,t,n),Qa("dataSplits",e,t,n),Qa("separator",e,t,n),Qa("nGramWidths",e,t,n),Qa("leftPad",e,t,n),Qa("rightPad",e,t,n),Qa("padWidth",e,t,n),Qa("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:o}=r.string.stringSplit(Qa("input",e,t,n),Qa("delimiter",e,t,n),Qa("skipEmpty",e,t,n));return[s,a,o]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(Qa("input",e,t,n),Qa("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Cast":return[r.cast(Qa("x",e,t,n),Qa("dtype",e,t,n))];case"ExpandDims":{const s=Qa("axis",e,t,n);return[r.expandDims(Qa("x",e,t,n),s)]}case"Squeeze":{const s=Qa("axis",e,t,n);return[r.squeeze(Qa("x",e,t,n),s)]}case"Reshape":return[r.reshape(Qa("x",e,t,n),Qa("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(Qa("x",e,t,n),Qa("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(Qa("x",e,t,n),Qa("padding",e,t,n),Qa("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(Qa("x",e,t,n),Qa("padding",e,t,n),Qa("constantValue",e,t,n))];case"SpaceToBatchND":{const s=Qa("blockShape",e,t,n),a=Qa("paddings",e,t,n);return[r.spaceToBatchND(Qa("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=Qa("blockShape",e,t,n),a=Qa("crops",e,t,n);return[r.batchToSpaceND(Qa("x",e,t,n),s,a)]}case"DepthToSpace":{const s=Qa("blockSize",e,t,n),a=Qa("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(Qa("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(Qa("x",e,t,n),Qa("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(Qa("s0",e,t,n),Qa("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=Qa("keyDType",e,t,n),a=Qa("valueDType",e,t,n),o=new Qo(s,a);return r.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=Qa("tableHandle",e,t,n,r),a=Qa("keys",e,t,n),o=Qa("values",e,t,n),i=r.getHashTableById(s.id);return[await i.import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=Qa("tableHandle",e,t,n,r),a=Qa("keys",e,t,n),o=Qa("defaultValue",e,t,n),i=r.getHashTableById(s.id);return[await i.find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=Qa("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=Ya(e.op);if(a&&a.customExecutor)return a.customExecutor(new Po(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return et.ZSL.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class Xo{constructor(e={},t={},n={},r={},s){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Jo(e,t,n,r){const s=new Set,a=[];let o=null,i=null;const u=new Set,c=new Set(Object.keys(e).map((e=>to(e)[0])));r=r||[];const l=new Set(r.map((e=>to(e.name)[0]))),p=[...t];for(;p.length>0;){const e=p.pop();(ai(e)||oi(e)||ii(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(c.has(e.name)||l.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),p.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:o,syncInputs:i}}function ei(e,t){const{usedNodes:n,inputs:r}=t,s=Object.keys(r).map((e=>to(e)[0])).map((t=>e.nodes[t])),a=e.initNodes||[],o=e=>n.has("string"==typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const u=i([...s,...e.weights,...a]).filter(o),c=i([...u,...Object.values(e.nodes)]).filter(o),l=new Map(c.map((e=>[e.name,e]))),p={};for(const m of c){p[m.name]=p[m.name]||0;for(const e of m.children)o(e)||(p[e.name]=Number.POSITIVE_INFINITY),p[e.name]=(p[e.name]||0)+1}const d=Object.entries(p).filter((([,e])=>0===e)).map((([e])=>e)),h=[...d];for(;d.length>0;){const e=d.pop(),t=l.get(e);for(const n of t.children.filter(o))0==--p[n.name]&&(h.push(n.name),d.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const a of t.children)n.has(a.name)&&!s.has(a.name)&&(s.add(a.name),r.push(a.name))}const a=e.filter((e=>s.has(e.name)));return a}(h.map((e=>l.get(e))),u);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),s=e=>r.has("string"==typeof e?e:e.name),a=new Set(e.map((e=>e.name))),o=e=>a.has("string"==typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(o)){if(!n.has(e.name))throw new ti(`Child ${e.name} of node ${i.name} is unreachable.`);if(n.get(i.name)>n.get(e.name))throw new ti(`Node ${i.name} is scheduled to run after its child ${e.name}.`)}if(!s(i))for(const e of i.inputs){if(!n.has(e.name))throw new ti(`Input ${e.name} of node ${i.name} is unreachable.`);if(n.get(e.name)>n.get(i.name))throw new ti(`Node ${i.name} is scheduled to run before its input ${e.name}.`)}}}(f,u),f}class ti extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const ni=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),ri=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),si=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function ai(e){return ni.has(e.op)}function oi(e){return ri.has(e.op)}function ii(e){return si.has(e.op)}class ui{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new ui(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=Jo(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const o=ei(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>ai(e)?n:t)),s=e=>{const n=r[t.get(e.name)];return null==n?-1:n},a=e.map(((e,t)=>e.children.map(s).reduce(((e,t)=>Math.max(e,t)),r[t]))),o=new Map;for(let i=0;i<e.length;++i){const t=a[i];if(t===n)continue;const r=e[i],s=e[t];o.has(s.name)||o.set(s.name,[]),o.get(s.name).push(r)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,et.aCs)(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[to(e)[0]])),s=t.map((e=>to(e)[0])),a=new Set(s);let o=s.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(r,o);let u=this.compiledMap.get(i);null==u&&(u=this.compile(e,o),this.compiledMap.set(i,u));try{this.keepIntermediateTensors=(0,et._K2)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const c={},l={};return(0,et.DZQ)((()=>{const n=new Xo(this.weightMap,c,l,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[s,a]=to(t,n),o=[];o[a]=e[t],r[s]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(o))}));const s=this.getFrozenTensorIds(r),{orderedNodes:o,nodeLiveUntilMap:i}=u;for(const e of o){if(r[e.name])continue;const t=qo(e,r,n,this._resourceManager);if(et.ZSL.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,a,i.get(e.name))}return null==this.parent&&n.dispose(s),t.map((e=>qa(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,o){if(!ai(t)&&!a.has(e)){for(const r of n[e])null!=r&&(o[r.id]=(o[r.id]||0)+t.children.length);for(const e of t.inputs){if(ai(e))continue;const t=Xa(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,a){function o(e){return ai(e)||s.has(e.name)}if(!ai(e)&&null!=a)for(const i of a){if(o(i))continue;const e=Xa(i.name,t,n);for(const t of e)!t||t.kept||r.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},s={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,et._K2)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const a=new Xo(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,a,t,n),i=t.map((e=>qa(e,o,a))),u=i.map((e=>e.id)),c=Object.keys(e).map((t=>e[t].id)),l=new Set([...u,...c,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||l.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(l),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[to(e)[0]])),o=n.map((e=>to(e)[0])),i=new Set(o);let u=o.map((e=>this.graph.nodes[e]));0===u.length&&(u=this._outputs);const{usedNodes:c,missingInputs:l,dynamicNode:p,syncInputs:d}=Jo(e,u,this.weightMap,this._initNodes),h=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=to(t),s=[];s[r]=e[t],f[n]=s}));const m={},g=this.getFrozenTensorIds(f),y={};for(;h.length>0;){const e=this.processStack(a,h,t,f,y,g,i,m,c);await Promise.all(e)}null!=p||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=u.filter((e=>!ai(e)&&!qa(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${e}`)}return f}processStack(e,t,n,r,s,a,o,i,u){const c=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let l="";if("Enter"===e.node.op&&Qa("isConstant",e.node,r,n)&&([l]=Ja(e.node.name,n)),null==r[e.node.name]){const p=qo(e.node,r,n,this._resourceManager);l||([l]=Ja(e.node.name,n));const d=n.currentContext;et.ZSL.isPromise(p)?c.push(p.then((c=>(r[l]=c,this.keepIntermediateTensors&&(this.clonedTensorsMap[l]=this.cloneTensorList(c)),n.currentContext=d,this.checkTensorForDisposal(l,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,u),c)))):(r[l]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[l]=this.cloneTensorList(p)),this.checkTensorForDisposal(l,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return c}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[o]=Ja(e.name,n);!s[o]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!qa(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!qa(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=to(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));et.ZSL.assert(t,(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&et.ZSL.assert(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=to(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=to(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class ci{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var li=n(7084);const pi="?tfjs-format=file",di="model.json";class hi{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=et.io){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new ci}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return et.ZSL.isPromise(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await(0,li.s5)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new ui(So.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=So.Instance.transformGraph(e.modelInitializer);this.initializer=new ui(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof et.qYS?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof et.qYS||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var s,a,o;const i=null===(o=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=t[n[r]];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,et.ASo)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function fi(e,t={},n=et.io){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return`${e}${di}${pi}`}(e));const r=new hi(e,t,n);return await r.load(),r}var mi,gi=n(7391);function yi(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(wi(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const o=yi(e[a],t,n,r);s[a]=o}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function bi(e,t=vi){return xi(e,t)}function xi(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(wi(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=xi(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function vi(e){return null===e?null:wi(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function wi(e){let t=!1;if(et._K2().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(551);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof et.qYS)&&!(e instanceof Promise)&&!t)}function ki(e){return yi(e,Ti)}function Ti(e){return e instanceof et.qYS?{value:e.clone(),recurse:!1}:wi(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Si{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Ni extends Si{constructor(){super(Ni.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Ii(e){return new $i(e)}function Ci(e,t){return new Wi(e,t)}Ni.INITIAL_CAPACITY=32;class Ei{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Mi(this,e)}filter(e){return new Oi(this,e)}map(e){return new Li(this,e)}mapAsync(e){return new zi(this,e)}serialMapAsync(e){return new zi(this,e).serial()}flatmap(e){return new Bi(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new _i(this,e,t)}columnMajorBatch(e,t=!0,n=vi){return this.rowMajorBatch(e,t).map((e=>bi(e,n)))}concatenate(e,t){return new Wi(new Ai([this,e]),t)}take(e){return e<0||null==e?this:new Di(this,e)}skip(e){return e<0||null==e?this:new Ri(this,e)}prefetch(e){return new Vi(this,e)}shuffle(e,t){return new Ui(this,e,t)}serial(){return new Fi(this)}}class Ai extends Ei{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:ki(e),done:!1}}}class $i extends Ei{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Fi extends Ei{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Ri extends Ei{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;et.ASo(e.value)}return this.upstream.next()}}class Di extends Ei{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class _i extends Ei{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Oi extends Ei{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;et.ASo(e.value)}}}class Li extends Ei{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=et.d_S.getTensorsInContainer(e.value),n=this.transform(e.value),r=et.d_S.getTensorsInContainer(n);for(const s of t)et.d_S.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class Mi extends Ei{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class zi extends Ei{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=et.d_S.getTensorsInContainer(e.value),n=await this.transform(e.value),r=et.d_S.getTensorsInContainer(n);for(const s of t)et.d_S.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class Pi extends Ei{constructor(){super(),this.outputQueue=new Ni,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Bi extends Pi{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=et.d_S.getTensorsInContainer(e.value),n=this.transform(e.value),r=et.d_S.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of t)et.d_S.isTensorInList(s,r)||s.dispose();return!0}}class Wi extends Ei{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(mi||(mi={}));class Vi extends Ei{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Si(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Ui extends Vi{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=gi.alea(n||et.ZSL.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Gi{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return et.ZSL.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Zi((async()=>(await n.iterator()).columnMajorBatch(e,t,ji)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Zi((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Zi((async()=>(await t.iterator()).filter((t=>et.DZQ((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Zi((async()=>(await t.iterator()).map((t=>et.DZQ((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Zi((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Zi((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Zi((async()=>Ci(Ii((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Zi((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=gi.alea(t||et.ZSL.now().toString());return Zi((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Zi((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Zi(e,t=null){return new class extends Gi{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function ji(e){if(null===e)return null;const t=e[0];if(null==(n=t)||null===(r=n)||"object"!=typeof r&&"function"!=typeof r||Array.isArray(n)||"object"==typeof n&&n instanceof et.qYS||et.ZSL.isTypedArray(n)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof et.qYS?et.t$z(e):et.OEK(e)}(e),recurse:!1}}var n,r;return{value:null,recurse:!0}}Gi.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");var Hi=n(7870);const Ki=et.kpo.YO;class Yi extends et.uI_{nextDataId(){return Yi.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new et.GJx(this,(0,et.Hi9)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,et._K2)().get("IS_NODE")&&et.C0T.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&et.ZSL.isString(n[0])){const s=n.map((e=>et.ZSL.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return et.C0T.mergeRealAndImagArrays(e,t)}return et.ZSL.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>et.ZSL.decodeString(e)));return(0,et.ra8)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,et.ra8)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,et.Hi9)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=et.ZSL.now();e();return{kernelMs:et.ZSL.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,Hi.C)([e],"where");const t=this.readSync(e.dataId);return Ki(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Yi.nextDataId=0;(0,et.gJX)("cpu",(()=>new Yi),1);var Qi=n(1694);const qi=(0,Qi.v)(et.Pah,(e=>e>=0?e:Math.exp(e)-1)),Xi={kernelName:et.Pah,backendName:"cpu",kernelFunc:qi};var Ji=n(6936);function eu(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;(0,Hi.C)([s],"leakyRelu");const o=et.ZSL.sizeFromShape(s.shape),i=n.data.get(s.dataId).values,u=et.ZSL.getTypedArrayFromDType("float32",o);for(let c=0;c<i.length;c++)u[c]=i[c]<0?a*i[c]:i[c];return n.makeTensorInfo(s.shape,"float32",u)}const tu={kernelName:et.X0$,backendName:"cpu",kernelFunc:eu};var nu=n(8195);const ru=(0,nu.Z)(((e,t)=>e<0?t*e:e));function su(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;(0,Hi.C)([r,s],"prelu");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[i,u]=ru(r.shape,s.shape,a,o,"float32");return n.makeTensorInfo(u,"float32",i)}const au={kernelName:et.Ncv,backendName:"cpu",kernelFunc:su},ou=(0,Qi.v)(et.fUj,(e=>Math.max(0,e))),iu={kernelName:et.fUj,backendName:"cpu",kernelFunc:ou},uu=(0,Qi.v)(et.P_L,(e=>Math.min(Math.max(0,e),6))),cu={kernelName:et.P_L,backendName:"cpu",kernelFunc:uu};var lu=n(4904);function pu(e,t,n,r,s){if("linear"===n)return(0,Ji.D)({inputs:{x:t},backend:e});if("relu"===n)return ou({inputs:{x:t},backend:e});if("elu"===n)return qi({inputs:{x:t},backend:e});if("relu6"===n)return uu({inputs:{x:t},backend:e});if("prelu"===n)return su({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return eu({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return(0,lu.ry)({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var du=n(5315);function hu(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=et.ZSL.sizeFromShape(s.shape),i=et.ZSL.inferFromImplicitShape(a,o),u=et.ZSL.sizeFromShape(i);et.ZSL.assert(o===u,(()=>`The new shape (${i}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const c=n.data.get(s.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const fu={kernelName:et.R23,backendName:"cpu",kernelFunc:hu};function mu(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;(0,Hi.C)([s,a],"matMul");const u=s.shape.length,c=a.shape.length,l=o?s.shape[u-2]:s.shape[u-1],p=i?a.shape[c-1]:a.shape[c-2],d=o?s.shape[u-1]:s.shape[u-2],h=i?a.shape[c-2]:a.shape[c-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=et.ZSL.sizeFromShape(f),y=et.ZSL.sizeFromShape(m),b=et.ZEY.assertAndGetBroadcastShape(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,h]);et.ZSL.assert(l===p,(()=>`Error in matMul: inner shapes (${l}) and (${p}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`));const x=i?[y,h,p]:[y,p,h],v=hu({inputs:{x:s},backend:n,attrs:{shape:o?[g,l,d]:[g,d,l]}}),w=hu({inputs:{x:a},backend:n,attrs:{shape:x}}),k=o?v.shape[1]:v.shape[2],T=o?v.shape[2]:v.shape[1],S=i?w.shape[1]:w.shape[2],N=Math.max(g,y),I=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,E=et.ZSL.computeStrides(v.shape),A=et.ZSL.computeStrides(w.shape),[$,F,R]=o?[E[0],1,E[1]]:[E[0],E[1],1],[D,_,O]=i?[1,A[1],A[0]]:[A[1],1,A[0]],L=T*S,M=(0,et.ra8)([N,T,S],v.dtype),z=M.values,P=n.blockSize;for(let B=0;B<N;B++){const e=B%g,t=B%y;for(let n=0;n<T;n+=P){const r=Math.min(n+P,T);for(let s=0;s<S;s+=P){const a=Math.min(s+P,S);for(let o=0;o<k;o+=P){const i=Math.min(o+P,k);for(let u=n;u<r;u++)for(let n=s;n<a;n++){let r=0;for(let s=o;s<i;s++){r+=I[e*$+u*F+s*R]*C[s*D+n*_+t*O]}z[B*L+(u*S+n)]+=r}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,M.dtype,M.values)}const gu={kernelName:et.jAQ,backendName:"cpu",kernelFunc:mu};const yu={kernelName:et.Dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:p}=r;let d,h,f;const m=[];d=mu({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:c},backend:n}),o&&(h=(0,du.WQ)({inputs:{a:d,b:o},backend:n}),m.push(d),d=h),l&&(f=pu(n,d,l,i,p),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};var bu=n(2680);const xu=(0,Qi.v)(et.Vvy,(e=>Math.acos(e))),vu={kernelName:et.Vvy,backendName:"cpu",kernelFunc:xu},wu=(0,Qi.v)(et.PH8,(e=>Math.acosh(e))),ku={kernelName:et.PH8,backendName:"cpu",kernelFunc:wu};const Tu={kernelName:et.EkD,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;(0,Hi.C)(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=(0,et.ra8)(r[0].shape,r[0].dtype),o=a.values;for(let i=0;i<r.length;i++){const e=s[i];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};var Su=n(5655);const Nu={kernelName:et.u8Z,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;(0,Hi.C)(s,"all");const i=et.ZSL.parseAxisParam(a,s.shape);let u=i;const c=et.C0T.getAxesPermutation(u,s.shape.length);let l=s;null!=c&&(l=(0,Su.m)({inputs:{x:s},backend:n,attrs:{perm:c}}),u=et.C0T.getInnerMostAxes(u.length,s.shape.length)),et.C0T.assertAxesAreInnerMostDims("all",u,l.shape.length);const[p,d]=et.C0T.computeOutAndReduceShapes(l.shape,u),h=et.ZSL.sizeFromShape(d),f=et.ZSL.makeZerosTypedArray(et.ZSL.sizeFromShape(p),l.dtype),m=n.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const e=y*h;let t=m[e];for(let n=0;n<h;++n){const r=m[e+n];t=t&&r}f[y]=t}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(p,l.dtype,f);if(o){const e=hu({inputs:{x:g},backend:n,attrs:{shape:et.C0T.expandShapeToKeepDim(p,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const Iu={kernelName:et.FSt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;(0,Hi.C)(s,"any");const i=et.ZSL.parseAxisParam(a,s.shape);let u=i;const c=et.C0T.getAxesPermutation(u,s.shape.length);let l=s;null!=c&&(l=(0,Su.m)({inputs:{x:s},backend:n,attrs:{perm:c}}),u=et.C0T.getInnerMostAxes(u.length,s.shape.length)),et.C0T.assertAxesAreInnerMostDims("any",u,l.shape.length);const[p,d]=et.C0T.computeOutAndReduceShapes(l.shape,u),h=et.ZSL.sizeFromShape(d),f=et.ZSL.makeZerosTypedArray(et.ZSL.sizeFromShape(p),l.dtype),m=n.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const e=y*h;let t=m[e];for(let n=0;n<h;++n){const r=m[e+n];t=t||r}f[y]=t}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(p,l.dtype,f);if(o){const e=hu({inputs:{x:g},backend:n,attrs:{shape:et.C0T.expandShapeToKeepDim(p,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const Cu={kernelName:et.Jp_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;(0,Hi.C)(s,"argMax");let o=et.ZSL.parseAxisParam(a,s.shape);const i=et.C0T.getAxesPermutation(o,s.shape.length);let u=s;const c=[];null!=i&&(u=(0,Su.m)({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(u),o=et.C0T.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],et.C0T.assertAxesAreInnerMostDims("argMax",o,u.shape.length);const[l,p]=et.C0T.computeOutAndReduceShapes(u.shape,o),d=et.ZSL.sizeFromShape(l),h=et.ZSL.makeZerosTypedArray(d,"int32"),f=et.ZSL.sizeFromShape(p),m=n.data.get(u.dataId).values;for(let g=0;g<h.length;++g){const e=g*f;let t=m[e],n=0;for(let r=0;r<f;++r){const s=m[e+r];s>t&&(t=s,n=r)}h[g]=n}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",h)}};const Eu={kernelName:et.p_m,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;(0,Hi.C)(s,"argMin");let o=et.ZSL.parseAxisParam(a,s.shape);const i=et.C0T.getAxesPermutation(o,s.shape.length);let u=s;const c=[];null!=i&&(u=(0,Su.m)({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(u),o=et.C0T.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],et.C0T.assertAxesAreInnerMostDims("argMin",o,u.shape.length);const[l,p]=et.C0T.computeOutAndReduceShapes(u.shape,o),d=et.ZSL.sizeFromShape(l),h=et.ZSL.makeZerosTypedArray(d,"int32"),f=et.ZSL.sizeFromShape(p),m=n.data.get(u.dataId).values;for(let g=0;g<h.length;++g){const e=g*f;let t=m[e],n=0;for(let r=0;r<f;++r){const s=m[e+r];s<t&&(t=s,n=r)}h[g]=n}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",h)}},Au=(0,Qi.v)(et.QKF,(e=>Math.asin(e))),$u={kernelName:et.QKF,backendName:"cpu",kernelFunc:Au},Fu=(0,Qi.v)(et.epO,(e=>Math.asinh(e))),Ru={kernelName:et.epO,backendName:"cpu",kernelFunc:Fu},Du=(0,Qi.v)(et.TyE,(e=>Math.atan(e))),_u={kernelName:et.TyE,backendName:"cpu",kernelFunc:Du};var Ou=n(6499);const Lu=(0,nu.Z)(((e,t)=>Math.atan2(e,t))),Mu=(0,Ou.j)(et.lxb,Lu),zu={kernelName:et.lxb,backendName:"cpu",kernelFunc:Mu},Pu=(0,Qi.v)(et.zP9,(e=>Math.atanh(e))),Bu={kernelName:et.zP9,backendName:"cpu",kernelFunc:Pu};function Wu(e,t,n,r,s,a){const o=s.strideHeight,i=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,l=s.effectiveFilterHeight,p=s.effectiveFilterWidth,d=s.padInfo.top,h=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=(0,et.ra8)(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let v=0;v<s.batchSize;++v){const t=v*y,n=v*r[0];for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const v=y*o-d,w=Math.max(0,v),k=Math.min(s.inHeight,l+v),T=t+y*b;for(let t=0;t<s.outWidth;++t){const o=t*i-h,l=Math.max(0,o),d=Math.min(s.inWidth,p+o);let y=f,b=0,v=0;for(let t=w;t<k;t+=u){const s=n+t*r[1];for(let t=l;t<d;t+=c){const n=e[s+t*r[2]+m];"max"===a&&n>y?y=n:"avg"===a&&(b+=n,v++)}if(isNaN(y))break}g[T+t*x+m]="avg"===a?b/v:y}}}return m}function Vu(e,t,n,r,s=!1,a=!1){const o=(0,et.ra8)(r.outShape,"int32"),i=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,h=r.padInfo.top,f=r.padInfo.left,m=(0,et.ra8)(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*i-h;let y=n;for(;y<0;)y+=c;const b=Math.min(r.inHeight,p+n);for(let i=0;i<r.outWidth;++i){const p=i*u-f;let h=p;for(;h<0;)h+=l;const x=Math.min(r.inWidth,d+p);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=c){const o=t-n;for(let n=h;n<x;n+=l){const i=n-p,u=m.get(g,t,n,e);u>v&&(v=u,w=s?a?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:o*d+i)}}o.set(w,g,t,i,e)}}return o}function Uu(e,t,n,r,s,a){const o=s.strideDepth,i=s.strideHeight,u=s.strideWidth,c=s.dilationDepth,l=s.dilationHeight,p=s.dilationWidth,d=s.effectiveFilterDepth,h=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=(0,et.ra8)(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],T=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let N=0;N<s.batchSize;++N){const t=N*w,n=N*r[0];for(let x=0;x<s.inChannels;++x)for(let w=0;w<s.outDepth;++w){const N=w*o-m;let I=N;for(;I<0;)I+=c;const C=Math.min(s.inDepth,d+N),E=t+w*k;for(let t=0;t<s.outHeight;++t){const o=t*i-g;let d=o;for(;d<0;)d+=l;const m=Math.min(s.inHeight,h+o),w=E+t*T;for(let t=0;t<s.outWidth;++t){const o=t*u-y;let i=o;for(;i<0;)i+=p;const h=Math.min(s.inWidth,f+o),g=w+t*S;let k=b,T=0,N=0;for(let t=I;t<C;t+=c){const s=n+t*r[1];for(let t=d;t<m;t+=l){const n=s+t*r[2];for(let t=i;t<h;t+=p){const s=e[n+t*r[3]+x];if("max"===a&&s>k?k=s:"avg"===a&&(T+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+x]="avg"===a?T/Math.max(N,1):k}}}}return x}const Gu={kernelName:et.ho8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;(0,Hi.C)(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;et.ZSL.assert(et.C0T.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=et.C0T.computePool2DInfo(s.shape,a,o,1,i,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&et.ZSL.arraysEqual(c.inShape,c.outShape))l=(0,Ji.D)({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=et.ZSL.computeStrides(s.shape),r=Wu(e,s.shape,s.dtype,t,c,"avg");l=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return l}};const Zu={kernelName:et.cS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=r;(0,Hi.C)(s,"avgPool3d");const l=et.C0T.computePool3DInfo(s.shape,a,o,1,i,u,c),p=Uu(n.data.get(s.dataId).values,s.shape,s.dtype,et.ZSL.computeStrides(s.shape),l,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};const ju={kernelName:et.wwC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=r;(0,Hi.C)([s,a],"avgPool3DGrad");const l=et.C0T.computePool3DInfo(a.shape,o,i,1,u,c),p=l.strideDepth,d=l.strideHeight,h=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,b=l.dilationHeight,x=l.dilationWidth,v=l.effectiveFilterDepth,w=l.effectiveFilterHeight,k=l.effectiveFilterWidth,T=v-1-l.padInfo.front,S=k-1-l.padInfo.left,N=w-1-l.padInfo.top,I=(0,et.ra8)(a.shape,"float32"),C=1/(f*m*g),E=n.bufferSync(s);for(let A=0;A<l.batchSize;++A)for(let e=0;e<l.inChannels;++e)for(let t=0;t<l.inDepth;++t)for(let n=0;n<l.inHeight;++n)for(let r=0;r<l.inWidth;++r){const s=t-T,a=n-N,o=r-S;let i=0;for(let t=0;t<v;t+=y){const n=(s+t)/p;if(!(n<0||n>=l.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=b){const r=(a+t)/d;if(!(r<0||r>=l.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=x){const s=(o+t)/h;if(s<0||s>=l.outWidth||Math.floor(s)!==s)continue;i+=E.get(A,n,r,s,e)}}}I.set(i*C,A,t,n,r,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Hu={kernelName:et.VCH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;(0,Hi.C)([s,a],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=r,l=et.C0T.computePool2DInfo(o.shape,i,u,1,c),p=l.strideHeight,d=l.strideWidth,h=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,b=l.effectiveFilterWidth,x=b-1-l.padInfo.left,v=y-1-l.padInfo.top,w=(0,et.ra8)(o.shape,"float32"),k=1/(h*f),T=n.data.get(s.dataId).values,S=(0,et.ra8)(s.shape,"float32",T);for(let N=0;N<l.batchSize;++N)for(let e=0;e<l.inChannels;++e)for(let t=0;t<l.inHeight;++t)for(let n=0;n<l.inWidth;++n){const r=t-v,s=n-x;let a=0;for(let t=0;t<y;t+=m){const n=(r+t)/p;if(!(n<0||n>=l.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const r=(s+t)/d;if(r<0||r>=l.outWidth||Math.floor(r)!==r)continue;a+=S.get(N,n,r,e)}}w.set(a*k,N,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Ku={kernelName:et.i5R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:o,mean:i,variance:u}=t;et.ZSL.assert(i.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),et.ZSL.assert(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),et.ZSL.assert(null==a||i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,Hi.C)([s,i,u,a,o],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const l=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,d=n.data.get(u.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,y=h.length,b=d.length,x=p.length;let v=0,w=0,k=0,T=0;for(let S=0;S<l.length;++S)m[S]=f[v++]+(l[S]-p[w++])*h[k++]/Math.sqrt(d[T++]+c),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),T>=b&&(T=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};var Yu=n(7906);const Qu={kernelName:et.Ik2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;(0,Hi.C)([s],"batchToSpaceND");const i=a.reduce(((e,t)=>e*t)),u=et.C0T.getReshaped(s.shape,a,i),c=et.C0T.getPermuted(u.length,a.length),l=et.C0T.getReshapedPermuted(s.shape,a,i),p=et.C0T.getSliceBeginCoords(o,a.length),d=et.C0T.getSliceSize(l,o,a.length),h=hu({inputs:{x:s},backend:n,attrs:{shape:u}}),f=(0,Su.m)({inputs:{x:h},backend:n,attrs:{perm:c}}),m=hu({inputs:{x:f},backend:n,attrs:{shape:l}}),g=(0,Yu.di)({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var qu=n(6995);const Xu={kernelName:et.N4F,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=(0,qu.X)(i,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}};var Ju=n(4890);const ec={kernelName:et.vj7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=et.C0T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}};var tc=n(6094),nc=n(4759);const rc=(0,Qi.v)(et.vaV,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),sc={kernelName:et.vaV,backendName:"cpu",kernelFunc:rc};var ac=n(9436);const oc={kernelName:et.$zE,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(et.ZSL.sizeFromShape(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,i=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values;for(let c=0;c<i.length;c++){const e=i[c],t=u[c];r[c]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};var ic=n(7763);function uc(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const cc={kernelName:et.dv8,backendName:"cpu",kernelFunc:uc};var lc=n(5806);function pc(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=et.ZSL.parseAxisParam(s,t[0].shape)[0],o=t.map((e=>e.shape));et.C0T.assertParamsConsistent(o,a);let i=et.C0T.computeOutShape(t.map((e=>e.shape)),a);if(0===et.ZSL.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>et.ZSL.sizeFromShape(e.shape)>0));if(1===u.length)return(0,Ji.D)({inputs:{x:u[0]},backend:n});if("complex64"===u[0].dtype){const e=u.map((e=>(0,lc.x)({inputs:{input:e},backend:n}))),t=u.map((e=>uc({inputs:{input:e},backend:n}))),r=pc({inputs:e,backend:n,attrs:{axis:a}}),s=pc({inputs:t,backend:n,attrs:{axis:a}}),o=(0,ac.f)({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}const c=u.map((e=>{const t=et.ZSL.sizeFromShape(e.shape.slice(a));return hu({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=et.C0T.computeOutShape(c.map((e=>e.shape)),1);const p=1===c[0].shape[0],d=(0,ic.h)(l,i,t[0].dtype,p),h=et.C0T.computeOutShape(u.map((e=>e.shape)),a),f=n.makeTensorInfo(h,t[0].dtype,d);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const dc={kernelName:et.$dB,backendName:"cpu",kernelFunc:pc};function hc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=r;(0,Hi.C)([s,a],"conv2d");const p=et.C0T.convertConv2DDataFormat(u),d=et.C0T.computeConv2DInfo(s.shape,a.shape,o,c,i,l,!1,p),h=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new et.ylz(d.outShape,s.dtype),w=et.ZSL.computeStrides(s.shape),k=et.ZSL.computeStrides(a.shape),T=w[0],S=x?w[1]:w[2],N=x?w[2]:1,I=x?1:w[1],C=v.strides[0],E=x?v.strides[1]:v.strides[2],A=x?v.strides[2]:1,$=x?1:v.strides[1],F=n.data.get(s.dataId).values,R=n.data.get(a.dataId).values,D=v.values;for(let _=0;_<d.batchSize;++_){const e=_*T,t=_*C;for(let n=0;n<d.outHeight;++n){const r=t+n*E,s=n*d.strideHeight-b;for(let t=0;t<h;++t){const n=s+t*m;if(n<0||n>=d.inHeight)continue;const a=t*k[0],o=e+n*S;for(let e=0;e<d.outWidth;++e){const t=r+e*A,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const s=o+r*N;let i=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=F[s+e*I];for(let e=0;e<d.outChannels;++e)D[t+e*$]+=n*R[i+e];i+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const fc={kernelName:et.p2J,backendName:"cpu",kernelFunc:hc};const mc={kernelName:et.rFm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=r;(0,Hi.C)([s,a],"conv2dBackpropFilter");const p=et.C0T.convertConv2DDataFormat(u),d=et.C0T.computeConv2DInfo(s.shape,l,o,1,i,c,!1,p),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new et.ylz(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,T=new et.ylz(s.shape,s.dtype,w),S=new et.ylz(a.shape,a.dtype,k);for(let N=0;N<m;++N){const e=Math.max(0,Math.ceil((v-N)/h)),t=Math.min(d.outHeight,(d.inHeight+v-N)/h);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((x-n)/f)),s=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let a=0;a<d.inChannels;++a)for(let o=0;o<d.outChannels;++o){let i=0;for(let u=0;u<d.batchSize;++u)for(let c=e;c<t;++c){const e=N+c*h-v;for(let t=r;t<s;++t){const r=n+t*f-x;i+=y?T.get(u,e,r,a)*S.get(u,c,t,o):T.get(u,a,e,r)*S.get(u,o,c,t)}}b.set(i,N,n,a,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const gc={kernelName:et.jfg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r;(0,Hi.C)([s,a],"conv2dBackpropInput");const p=et.ZSL.computeStrides(a.shape),d=et.ZSL.computeStrides(s.shape);let h=et.C0T.convertConv2DDataFormat(c);const f=et.C0T.computeConv2DInfo(o,a.shape,i,1,u,l,!1,h),m=new et.ylz(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,v,w]=p,{batchSize:k,filterHeight:T,filterWidth:S,inChannels:N,inHeight:I,inWidth:C,outChannels:E,outHeight:A,outWidth:$,strideHeight:F,strideWidth:R}=f;h=f.dataFormat;const D=T-1-f.padInfo.top,_=S-1-f.padInfo.left,O="channelsLast"===h,L=m.strides[0],M=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,P=O?1:m.strides[1],B=d[0],W=O?d[1]:d[2],V=O?d[2]:1,U=O?1:d[1];for(let G=0;G<k;++G)for(let e=0;e<N;++e)for(let t=0;t<I;++t){const n=t-D,r=Math.max(0,Math.ceil(n/F)),s=Math.min(A,(T+n)/F);for(let a=0;a<C;++a){const o=a-_,i=Math.max(0,Math.ceil(o/R)),u=Math.min($,(S+o)/R);let c=0;for(let t=r;t<s;++t){const r=t*F-n;for(let n=i;n<u;++n){const s=B*G+W*t+V*n,a=x*(T-1-r)+v*(S-1-(n*R-o))+w*e;for(let e=0;e<E;++e){c+=y[s+U*e]*b[a+e]}}}g[L*G+M*t+z*a+P*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const yc={kernelName:et.A1h,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r;(0,Hi.C)([s,a],"conv3d");const c=et.C0T.computeConv3DInfo(s.shape,a.shape,o,u,i),{filterDepth:l,filterHeight:p,filterWidth:d,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,b=g.left,x=g.top,v=new et.ylz(c.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,T=v.values,S=et.ZSL.computeStrides(s.shape),N=et.ZSL.computeStrides(a.shape);for(let I=0;I<c.batchSize;++I){const e=I*S[0],t=I*v.strides[0];for(let n=0;n<c.outDepth;++n){const r=t+n*v.strides[1],s=n*c.strideDepth-y;for(let t=0;t<l;++t){const n=s+t*h;if(n<0||n>=c.inDepth)continue;const a=t*N[0],o=e+n*S[1];for(let e=0;e<c.outHeight;++e){const t=r+e*v.strides[2],n=e*c.strideHeight-x;for(let e=0;e<p;++e){const r=n+e*f;if(r<0||r>=c.inHeight)continue;const s=a+e*N[1],i=o+r*S[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=c.inWidth)continue;const a=s+e*N[2],o=i+t*c.inChannels;let u=a;for(let e=0;e<c.inChannels;++e){const t=w[o+e];for(let e=0;e<c.outChannels;++e)T[n+e]+=t*k[u+e];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const bc={kernelName:et.iGz,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:u}=r;(0,Hi.C)([s,a],"conv3dBackpropFilterV2");const c=et.ZSL.computeStrides(s.shape),l=et.ZSL.computeStrides(a.shape),p=et.C0T.computeConv3DInfo(s.shape,u,o,1,i),d=p.strideDepth,h=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new et.ylz(p.filterShape,"float32"),x=b.values,[v,w,k,T]=b.strides,S=n.data.get(a.dataId).values,[N,I,C,E]=l,A=n.data.get(s.dataId).values,[$,F,R,D]=c,_=p.padInfo.front,O=p.padInfo.left,L=p.padInfo.top;for(let M=0;M<m;++M){const e=Math.max(0,Math.ceil((_-M)/d)),t=Math.min(p.outDepth,(p.inDepth+_-M)/d),n=M*v;for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((L-r)/h)),a=Math.min(p.outHeight,(p.inHeight+L-r)/h),o=r*w+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((O-n)/f)),u=Math.min(p.outWidth,(p.inWidth+O-n)/f),c=n*k+o;for(let o=0;o<p.inChannels;++o){const l=o*T+c;for(let c=0;c<p.outChannels;++c){let m=0;for(let l=0;l<p.batchSize;++l){const p=l*$,g=l*N;for(let l=e;l<t;++l){const e=(M+l*d-_)*F+p,t=l*I+g;for(let l=s;l<a;++l){const s=(r+l*h-L)*R+e,a=l*C+t;for(let e=i;e<u;++e){const t=e*E+a;m+=A[(n+e*f-O)*D+s+o]*S[t+c]}}}}x[l+c]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const xc={kernelName:et.gC7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:u}=r;(0,Hi.C)([s],"conv3dBackpropInputV2");const c=et.ZSL.computeStrides(s.shape),l=et.ZSL.computeStrides(a.shape),p=et.C0T.computeConv3DInfo(u,a.shape,i,1,o),d=new et.ylz(p.inShape,"float32"),h=d.values,[f,m,g,y]=d.strides,b=n.data.get(s.dataId).values,[x,v,w,k]=c,T=n.data.get(a.dataId).values,[S,N,I,C]=l,{batchSize:E,filterDepth:A,filterHeight:$,filterWidth:F,inChannels:R,inDepth:D,inHeight:_,inWidth:O,outChannels:L,outDepth:M,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=p,U=A-1-p.padInfo.front,G=$-1-p.padInfo.top,Z=F-1-p.padInfo.left;for(let j=0;j<E;++j)for(let e=0;e<R;++e)for(let t=0;t<D;++t){const n=t-U,r=Math.max(0,Math.ceil(n/B)),s=Math.min(M,(A+n)/B);for(let a=0;a<_;++a){const o=a-G,i=Math.max(0,Math.ceil(o/W)),u=Math.min(z,($+o)/W);for(let c=0;c<O;++c){const l=c-Z,p=Math.max(0,Math.ceil(l/V)),d=Math.min(P,(F+l)/V);let E=0;for(let t=r;t<s;++t){const r=t*B-n;for(let n=i;n<u;++n){const s=n*W-o;for(let a=p;a<d;++a){const o=x*j+v*t+w*n+k*a,i=S*(A-1-r)+N*($-1-s)+I*(F-1-(a*V-l))+C*e;for(let e=0;e<L;++e){E+=b[o+e]*T[i+e]}}}}h[f*j+m*t+g*a+y*c+e]=E}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},vc=(0,Qi.v)(et.Mn0,(e=>Math.cos(e))),wc={kernelName:et.Mn0,backendName:"cpu",kernelFunc:vc},kc=(0,Qi.v)(et.MnK,(e=>Math.cosh(e))),Tc={kernelName:et.MnK,backendName:"cpu",kernelFunc:kc};const Sc={kernelName:et.MRQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:c}=r,[l,p,d,h]=s.shape,f=a.shape[0],[m,g]=i,y=(0,et.ra8)([f,m,g,h],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(o.dataId).values,v=n.data.get(s.dataId).values,w=et.ZSL.computeStrides(s.shape),k=et.ZSL.computeStrides(y.shape);for(let T=0;T<f;T++){const e=4*T,t=b[e],n=b[e+1],r=b[e+2],s=b[e+3],a=x[T];if(a>=l)continue;const o=m>1?(r-t)*(p-1)/(m-1):0,i=g>1?(s-n)*(d-1)/(g-1):0;for(let l=0;l<m;l++){const e=m>1?t*(p-1)+l*o:.5*(t+r)*(p-1);if(e<0||e>p-1)for(let t=0;t<g;t++)for(let e=0;e<h;e++){const n=e+t*k[2]+l*k[1]+T*k[0];y.values[n]=c}else if("bilinear"===u){const t=Math.floor(e),r=Math.ceil(e),o=e-t;for(let e=0;e<g;e++){const u=g>1?n*(d-1)+e*i:.5*(n+s)*(d-1);if(u<0||u>d-1){for(let t=0;t<h;t++){const n=t+e*k[2]+l*k[1]+T*k[0];y.values[n]=c}continue}const p=Math.floor(u),f=Math.ceil(u),m=u-p;for(let n=0;n<h;n++){let s=n+p*w[2]+t*w[1]+a*w[0];const i=v[s];s=n+f*w[2]+t*w[1]+a*w[0];const u=v[s];s=n+p*w[2]+r*w[1]+a*w[0];const c=v[s];s=n+f*w[2]+r*w[1]+a*w[0];const d=i+(u-i)*m,h=c+(v[s]-c)*m;s=n+e*k[2]+l*k[1]+T*k[0],y.values[s]=d+(h-d)*o}}}else for(let t=0;t<g;++t){const r=g>1?n*(d-1)+t*i:.5*(n+s)*(d-1);if(r<0||r>d-1){for(let e=0;e<h;e++){const n=e+t*k[2]+l*k[1]+T*k[0];y.values[n]=c}continue}const o=Math.round(r),u=Math.round(e);for(let e=0;e<h;e++){const n=e+o*w[2]+u*w[1]+a*w[0],r=e+t*k[2]+l*k[1]+T*k[0];y.values[r]=v[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Nc={kernelName:et.jj_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;(0,Hi.C)(s,"cumprod");const u=et.C0T.getAxesPermutation([a],s.shape.length);let c=s;null!=u&&(c=(0,Su.m)({inputs:{x:s},backend:n,attrs:{perm:u}}));const l=et.C0T.getInnerMostAxes(1,s.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const p=(0,et.TuY)(c.dtype,"int32"),d=et.ZSL.makeOnesTypedArray(et.ZSL.sizeFromShape(c.shape),p),h=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<h.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=o?1:h[t];else{const n=m(y,e-1);d[t]=o?h[n]*d[n]:h[t]*d[n]}}const g=n.makeTensorInfo(c.shape,p,d);if(null!=u){const e=et.C0T.getUndoAxesPermutation(u),t=(0,Su.m)({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),t}return g}};const Ic={kernelName:et.nY8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;(0,Hi.C)(s,"cumsum");const u=et.C0T.getAxesPermutation([a],s.shape.length);let c=s;null!=u&&(c=(0,Su.m)({inputs:{x:s},backend:n,attrs:{perm:u}}));const l=et.C0T.getInnerMostAxes(1,s.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const p=(0,et.TuY)(c.dtype,"int32"),d=et.ZSL.makeZerosTypedArray(et.ZSL.sizeFromShape(c.shape),p),h=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<h.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=o?0:h[t];else{const n=m(y,e-1);d[t]=o?h[n]+d[n]:h[t]+d[n]}}const g=n.makeTensorInfo(c.shape,p,d);if(null!=u){const e=et.C0T.getUndoAxesPermutation(u),t=(0,Su.m)({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),t}return g}};const Cc={kernelName:et.wNW,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const e=n.data.get(s.dataId).values,t=n.data.get(a.dataId).values,r=(0,qu.X)(e,t,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=(0,qu.N)(e,t,o,i);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const Ec={kernelName:et.TMz,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r;et.ZSL.assert("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`));const i=s.shape[0],u=s.shape[1],c=s.shape[2],l=s.shape[3],p=u*a,d=c*a,h=l/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(i*p*d*h);let g=0;for(let y=0;y<i;++y)for(let e=0;e<p;++e){const t=Math.floor(e/a),n=e%a;for(let e=0;e<d;++e){const r=Math.floor(e/a),s=(n*a+e%a)*h;for(let e=0;e<h;++e){const n=e+s+l*(r+c*(t+u*y));m[g++]=f[n]}}}return n.makeTensorInfo([i,p,d,h],s.dtype,m)}};function Ac(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:c}=r;(0,Hi.C)([s,a],"depthwiseConv2DNative");const l=et.ZSL.computeStrides(s.shape),p=et.ZSL.computeStrides(a.shape);let d=u;null==d&&(d=[1,1]),et.ZSL.assert(et.C0T.eitherStridesOrDilationsAreOne(o,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`));const h=et.C0T.computeConv2DInfo(s.shape,a.shape,o,d,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=h,x=b.left,v=b.top,w=h.outChannels/h.inChannels,k=new et.ylz(h.outShape,s.dtype),T=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,N=k.values;for(let I=0;I<h.batchSize;++I){const e=I*l[0],t=I*k.strides[0];for(let n=0;n<h.outHeight;++n){const r=t+n*k.strides[1],s=n*h.strideHeight-v;for(let t=0;t<f;++t){const n=s+t*g;if(n<0||n>=h.inHeight)continue;const a=t*p[0],o=e+n*l[1];for(let e=0;e<h.outWidth;++e){const t=r+e*k.strides[2],n=e*h.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=h.inWidth)continue;const s=a+e*p[1],i=o+r*h.inChannels;let u=t,c=s;for(let e=0;e<h.inChannels;++e){const t=T[i+e];for(let e=0;e<w;++e)N[u+e]+=t*S[c+e];u+=w,c+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const $c={kernelName:et.tGH,backendName:"cpu",kernelFunc:Ac};const Fc={kernelName:et.X$8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=r;(0,Hi.C)([s,a],"depthwiseConv2dNativeBackpropFilter");const p=et.C0T.computeConv2DInfo(s.shape,l,o,i,u,c,!0),{strideHeight:d,strideWidth:h,filterHeight:f,filterWidth:m}=p,g=new et.ylz(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,v=n.data.get(s.dataId).values,w=new et.ylz(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,T=new et.ylz(a.shape,a.dtype,k);for(let S=0;S<f;++S){const e=Math.max(0,Math.ceil((b-S)/d)),t=Math.min(p.outHeight,(p.inHeight+b-S)/d);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((y-n)/h)),s=Math.min(p.outWidth,(p.inWidth+y-n)/h);for(let a=0;a<p.outChannels;++a){const o=Math.trunc(a/x),i=a%x;let u=0;for(let c=0;c<p.batchSize;++c)for(let i=e;i<t;++i){const e=S+i*d-b;for(let t=r;t<s;++t){const r=n+t*h-y;u+=w.get(c,e,r,o)*T.get(c,i,t,a)}}g.set(u,S,n,o,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const Rc={kernelName:et.nVu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=r;(0,Hi.C)([s,a],"depthwiseConv2DNativeBackpropInput");const p=et.ZSL.computeStrides(s.shape),d=et.ZSL.computeStrides(a.shape),h=et.C0T.computeConv2DInfo(l,a.shape,o,i,u,c,!0),f=new et.ylz(h.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=p,T=n.data.get(a.dataId).values,[S,N,I]=d,{batchSize:C,filterHeight:E,filterWidth:A,inChannels:$,inHeight:F,inWidth:R,outChannels:D,outHeight:_,outWidth:O,strideHeight:L,strideWidth:M}=h,z=E-1-h.padInfo.top,P=A-1-h.padInfo.left,B=D/$;for(let W=0;W<C;++W)for(let e=0;e<$;++e)for(let t=0;t<F;++t){const n=t-z,r=Math.max(0,Math.ceil(n/L)),s=Math.min(_,(E+n)/L);for(let a=0;a<R;++a){const o=a-P,i=Math.max(0,Math.ceil(o/M)),u=Math.min(O,(A+o)/M);let c=0;for(let t=r;t<s;++t){const r=t*L-n;for(let n=i;n<u;++n){const s=v*W+w*t+k*n,a=S*(E-1-r)+N*(A-1-(n*M-o))+I*e;for(let t=0;t<B;++t){c+=x[s+(e*B+t)]*T[a+t]}}}m[g*W+y*t+b*a+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const Dc={kernelName:et.ORI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=et.ZSL.sizeFromShape(r.shape),a=n.data.get(r.dataId).values,o=(0,et.ra8)([s,s],r.dtype),i=o.values;for(let c=0;c<a.length;c++)i[c*s+c]=a[c];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,o.dtype,o.values)}},_c={kernelName:et.jxD,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:o,dilations:i}=n,u=t,c=u.data.get(r.dataId).values,l=r.shape.length,p=u.data.get(s.dataId).values,d=s.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:T,dilationHeight:S,dilationWidth:N,outShape:I}=et.C0T.computeDilation2DInfo(r.shape,s.shape,a,o,"NHWC",i),C=et.ZSL.sizeFromShape(I),E=I.length,A=et.ZSL.getArrayFromDType(r.dtype,C);for(let $=0;$<h;++$)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let o=0;o<g;++o){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<T;++t){const u=a+t*N;if(u>=0&&u<m){const a=et.ZSL.locToIndex([$,n,u,o],l,et.ZSL.computeStrides(r.shape)),h=et.ZSL.locToIndex([e,t,o],d,et.ZSL.computeStrides(s.shape)),f=c[a]+p[h];f>i&&(i=f)}}}A[et.ZSL.locToIndex([$,e,n,o],E,et.ZSL.computeStrides(I))]=i}}}return{dataId:u.write(et.ZSL.toTypedArray(A,r.dtype),I,r.dtype),shape:I,dtype:r.dtype}}},Oc={kernelName:et.pk0,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:u}=n,c=t,l=et.ZSL.toNestedArray(r.shape,c.data.get(r.dataId).values),p=et.ZSL.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:T,dilationWidth:S,outShape:N}=et.C0T.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",u);et.ZSL.assert(a.rank===N.length,(()=>`Error in ${et.pk0}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const I=et.ZSL.toNestedArray(N,c.data.get(a.dataId).values),C=et.ZSL.makeZerosNestedTypedArray(s.shape,s.dtype);for(let E=0;E<d;++E)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const r=n*v-b.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let e=0;e<w;++e){const n=t+e*T;if(n>=0&&n<h)for(let t=0;t<k;++t){const u=r+t*S;if(u>=0&&u<f){const r=l[E][n][u][s]+p[e][t][s];r>a&&(a=r,o=e,i=t)}}}C[o][i][s]+=I[E][e][n][s]}}}return{dataId:c.write(et.ZSL.toTypedArray(C,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Lc={kernelName:et.bP9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:u}=n,c=t,l=et.ZSL.toNestedArray(r.shape,c.data.get(r.dataId).values),p=et.ZSL.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:T,dilationWidth:S,outShape:N}=et.C0T.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",u);et.ZSL.assert(a.rank===N.length,(()=>`Error in ${et.bP9}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const I=et.ZSL.toNestedArray(N,c.data.get(a.dataId).values),C=et.ZSL.makeZerosNestedTypedArray(r.shape,r.dtype);for(let E=0;E<d;++E)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const r=n*v-b.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=t<0?0:t,i=r<0?0:r;for(let e=0;e<w;++e){const n=t+e*T;if(n>=0&&n<h)for(let t=0;t<k;++t){const u=r+t*S;if(u>=0&&u<f){const r=l[E][n][u][s]+p[e][t][s];r>a&&(a=r,o=n,i=u)}}}C[E][o][i][s]+=I[E][e][n][s]}}}return{dataId:c.write(et.ZSL.toTypedArray(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const Mc={kernelName:et.XmO,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:o}=r,{contextOptions:i,imageOptions:u}=o||{},c=(null==u?void 0:u.alpha)||1,l=(null==i?void 0:i.contextType)||"2d";if("2d"!==l)throw new Error(`Context type ${i.contextType} is not supported by the CPU backend.`);const p=a.getContext(l,(null==i?void 0:i.contextAttributes)||{});if(null==p)throw new Error(`Could not get the context with ${l} type.`);const[d,h]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],m=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,y=new Uint8ClampedArray(h*d*4);for(let x=0;x<d*h;++x){const e=[0,0,0,255*c];for(let n=0;n<f;n++){const t=m[x*f+n];if("float32"===s.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===s.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*x;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}a.width=h,a.height=d;const b=new ImageData(y,h,d);return p.putImageData(b,0,0),s}};var zc=n(5646),Pc=n(1317);function Bc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;let i;(0,Hi.C)(s,"sum"),i="bool"===s.dtype?(0,tc.wg)({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):(0,Ji.D)({inputs:{x:s},backend:n});const u=i.shape.length,c=et.ZSL.parseAxisParam(a,i.shape),l=et.C0T.getAxesPermutation(c,u);let p=c,d=i;null!=l&&(d=(0,Su.m)({inputs:{x:i},backend:n,attrs:{perm:l}}),p=et.C0T.getInnerMostAxes(p.length,u)),et.C0T.assertAxesAreInnerMostDims("sum",p,d.shape.length);const[h,f]=et.C0T.computeOutAndReduceShapes(d.shape,p),m=et.C0T.upcastType(d.dtype,"int32");let g=(0,Pc.U)(n,h,m);const y=et.ZSL.sizeFromShape(f),b=n.data.get(g.dataId).values,x=n.data.get(d.dataId).values;for(let v=0;v<b.length;++v){const e=v*y;let t=0;for(let n=0;n<y;++n)t+=x[e+n];b[v]=t}if(o){const e=g;g=hu({inputs:{x:g},backend:n,attrs:{shape:et.C0T.expandShapeToKeepDim(g.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=l&&n.disposeIntermediateTensorInfo(d),g}const Wc={kernelName:et.WuN,backendName:"cpu",kernelFunc:Bc};const Vc={kernelName:et.Qgm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:u}=et.C0T.decodeEinsumEquation(s,a.length);et.C0T.checkEinsumDimSizes(o.length,u,a);const{path:c,steps:l}=et.C0T.getEinsumComputePath(i,u),p=l.length;let d=null,h=o.length;const f=[];for(let m=0;m<p;++m){for(const e of l[m]){const{permutationIndices:t,expandDims:r}=et.C0T.getEinsumPermutation(h,u[e]);let s;et.C0T.isIdentityPermutation(t)?s=a[e]:(s=(0,Su.m)({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);et.ZSL.arraysEqual(s.shape,o)||(s=hu({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===d?d=s:(d=(0,zc.lw)({inputs:{a:s,b:d},backend:n}),f.push(d))}m<p-1&&(c[m]>=0&&(d=Bc({inputs:{x:d},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(d)),h--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}};const Uc={kernelName:et.rsH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;(0,Hi.C)([r,s],"eluGrad");const a=new Float32Array(et.ZSL.sizeFromShape(s.shape)),o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let u=0;u<o.length;++u){const e=o[u];a[u]=e>=0?i[u]:i[u]*(e+1)}return n.makeTensorInfo(s.shape,"float32",a)}};var Gc=n(9292);const Zc=et.C0T.ERF_P,jc=et.C0T.ERF_A1,Hc=et.C0T.ERF_A2,Kc=et.C0T.ERF_A3,Yc=et.C0T.ERF_A4,Qc=et.C0T.ERF_A5,qc=(0,Qi.v)(et._s9,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Zc*n);return t*(1-((((Qc*r+Yc)*r+Kc)*r+Hc)*r+jc)*r*Math.exp(-n*n))})),Xc={kernelName:et._s9,backendName:"cpu",kernelFunc:qc};var Jc=n(6423);function el(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,o=s.shape.length,i=s.shape.slice();let u=a;return a<0&&(et.ZSL.assert(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+a+1),i.splice(u,0,1),hu({inputs:{x:s},backend:n,attrs:{shape:i}})}const tl={kernelName:et.ybN,backendName:"cpu",kernelFunc:el};var nl=n(6789);const rl=(0,nu.Z)(((e,t)=>e/t)),sl=(0,Ou.j)(et.sDr,rl),al={kernelName:et.sDr,backendName:"cpu",kernelFunc:sl};var ol=n(8566);function il(e,t,n){const r=e.shape,s=r[0],a=r[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,c=[s,a],l=et.ZSL.sizeFromShape(c),p=et.ZSL.getTypedArrayFromDType("float32",l),d=et.ZSL.getTypedArrayFromDType("float32",l);for(let g=0;g<s;g++){const e=(0,Yu.di)({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),r=(0,Yu.di)({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,a]}}),s=(0,ac.f)({inputs:{real:e,imag:r},backend:n}),{real:o,imag:c}=ul(s,t,n),l=et.C0T.mergeRealAndImagArrays(o,c);for(let t=0;t<a;t++){const e=et.C0T.getComplexWithIndex(l,t);p[g*a+t]=e.real,d[g*a+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const h=n.makeTensorInfo(c,"float32",p),f=n.makeTensorInfo(c,"float32",d),m=(0,ac.f)({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function ul(e,t,n){const r=et.ZSL.sizeFromShape(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if((i=r)&i-1){const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,o=0;for(let r=0;r<t;r++){const i=et.C0T.exponent(s*r,t,n),u=et.C0T.getComplexWithIndex(e,r);a+=u.real*i.real-u.imag*i.imag,o+=u.real*i.imag+u.imag*i.real}n&&(a/=t,o/=t),et.C0T.assignToTypedArray(r,a,o,s)}return r}(et.C0T.mergeRealAndImagArrays(a,o),r,t);return et.C0T.splitRealAndImagArrays(e)}{const s=cl(a,o,r,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",s.real),t=n.makeTensorInfo(i,"float32",s.imag),a=n.makeTensorInfo([],"float32",et.ZSL.createScalarValue(r,"float32")),o=(0,Ji.D)({inputs:{x:a},backend:n}),u=al.kernelFunc({inputs:{a:e,b:a},backend:n}),c=al.kernelFunc({inputs:{a:t,b:o},backend:n}),l=n.data.get(u.dataId).values,p=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:l,imag:p}}return s}var i}function cl(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=et.C0T.mergeRealAndImagArrays(e,t),o=n/2,i=et.C0T.complexWithEvenIndex(a),u=i.real,c=i.imag,l=[u.length],p=s.makeTensorInfo(l,"float32",u),d=s.makeTensorInfo(l,"float32",c),h=(0,ac.f)({inputs:{real:p,imag:d},backend:s}),f=et.C0T.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),v=(0,ac.f)({inputs:{real:b,imag:x},backend:s}),w=cl(u,c,o,r,s),k=w.real,T=w.imag,S=[k.length],N=s.makeTensorInfo(S,"float32",k),I=s.makeTensorInfo(S,"float32",T),C=(0,ac.f)({inputs:{real:N,imag:I},backend:s}),E=cl(m,g,o,r,s),A=E.real,$=E.imag,F=[A.length],R=s.makeTensorInfo(F,"float32",A),D=s.makeTensorInfo(F,"float32",$),_=(0,ac.f)({inputs:{real:R,imag:D},backend:s}),O=et.C0T.exponents(n,r),L=[O.real.length],M=s.makeTensorInfo(L,"float32",O.real),z=s.makeTensorInfo(L,"float32",O.imag),P=(0,ac.f)({inputs:{real:M,imag:z},backend:s}),B=(0,zc.lw)({inputs:{a:P,b:_},backend:s}),W=(0,du.WQ)({inputs:{a:C,b:B},backend:s}),V=(0,ol.jb)({inputs:{a:C,b:B},backend:s}),U=(0,lc.x)({inputs:{input:W},backend:s}),G=(0,lc.x)({inputs:{input:V},backend:s}),Z=uc({inputs:{input:W},backend:s}),j=uc({inputs:{input:V},backend:s}),H=pc({inputs:[U,G],backend:s,attrs:{axis:0}}),K=pc({inputs:[Z,j],backend:s,attrs:{axis:0}}),Y=s.data.get(H.dataId).values,Q=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(Z),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(K),{real:Y,imag:Q}}const ll={kernelName:et.rGP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=et.ZSL.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],o=hu({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),i=il(o,!1,n),u=hu({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}};function pl(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,o=a||et.ZSL.inferDtype(s),i=et.ZSL.getArrayFromDType(o,et.ZSL.sizeFromShape(r));return function(e,t){e.fill(t)}(i,s),t.makeTensorInfo(r,o,i)}const dl={kernelName:et.SQl,backendName:"cpu",kernelFunc:pl};const hl={kernelName:et.BxF,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=et.ZSL.getTypedArrayFromDType(r.dtype,et.ZSL.sizeFromShape(r.shape)),[o,i,u,c]=r.shape,l=s.data.get(r.dataId).values;for(let p=0;p<o;p++){const e=p*u*i*c;for(let t=0;t<i;t++){const n=t*(u*c);for(let t=0;t<u;t++){const r=t*c;for(let s=0;s<c;s++){const o=Math.round(u-t-1),i=e+n+r+s;let p=l[i];if(o>=0&&o<u){p=l[e+n+o*c+s]}a[i]=p}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var fl=n(5526);const ml=(0,nu.Z)(((e,t)=>Math.floor(e/t))),gl=(0,Ou.j)(et.ElG,ml,null,"int32"),yl={kernelName:et.ElG,backendName:"cpu",kernelFunc:gl};const bl={kernelName:et.aAr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=r;let m=hc({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:p,dimRoundingMode:d}});if(o){const e=m;if("NCHW"===l&&1===o.shape.length&&1!==o.shape[0]){const e=hu({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=(0,du.WQ)({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=(0,du.WQ)({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(h){const e=m;if("NCHW"===l&&"prelu"===h&&1===i.shape.length&&1!==i.shape[0]){const e=hu({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=pu(n,m,h,e,f),n.disposeIntermediateTensorInfo(e)}else m=pu(n,m,h,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const xl={kernelName:et.T7M,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=r;let m=Ac({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:p,dimRoundingMode:d}});if(o){const e=m;m=(0,du.WQ)({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=pu(n,m,h,i,f),n.disposeIntermediateTensorInfo(e)}return m}};var vl=n(7100);const wl={kernelName:et.O4G,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=et.ZSL.sizeFromShape(r.shape),o=s.shape,i=o[o.length-1],[u,c,l,p]=et.C0T.prepareAndValidate(r,s);if(0===c)return n.makeTensorInfo(u,r.dtype,[]);const d=n.data.get(s.dataId).values,h=n.bufferSync(r),f=(0,vl.q)(d,h,r.dtype,c,i,l,p,r.shape,a);return n.makeTensorInfo(u,r.dtype,f.values)}};var kl=n(3842);const Tl={kernelName:et.mxL,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r;(0,Hi.C)([s,a],"gatherV2");const u=et.ZSL.parseAxisParam(o,s.shape)[0],c=n.data.get(a.dataId).values,l=s.shape[u];for(let v=0;v<c.length;++v){const e=c[v];et.ZSL.assert(e<=l-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${l-1}]`))}let p=i;null==i&&(p=0);const d=et.ZSL.sizeFromShape(a.shape),h=et.C0T.segment_util.collectGatherOpShapeInfo(s,a,u,p),f=hu({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=hu({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,d/h.batchSize]}}),g=[h.batchSize,h.outerSize,d/h.batchSize,h.sliceSize],y=n.bufferSync(m),b=n.bufferSync(f),x=(0,kl.G)(b,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,x.dtype,x.values)}};var Sl=n(4346),Nl=n(6768);const Il={kernelName:et.OAQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=et.ZSL.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],o=hu({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),i=il(o,!0,n),u=hu({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}},Cl=(0,Qi.v)(et.gIW,(e=>Number.isFinite(e)?1:0),"bool"),El={kernelName:et.gIW,backendName:"cpu",kernelFunc:Cl},Al=(0,Qi.v)(et.E3$,(e=>Math.abs(e)===1/0?1:0),"bool"),$l={kernelName:et.E3$,backendName:"cpu",kernelFunc:Al},Fl=(0,Qi.v)(et.iPs,(e=>Number.isNaN(e)?1:0),"bool"),Rl={kernelName:et.iPs,backendName:"cpu",kernelFunc:Fl};var Dl=n(7588),_l=n(3087),Ol=n(4190);const Ll={kernelName:et.mnI,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=(0,Ol.G)(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}};var Ml=n(1802);const zl=(0,Qi.v)(et.Cg$,(e=>Math.log1p(e))),Pl={kernelName:et.Cg$,backendName:"cpu",kernelFunc:zl},Bl=(0,nu.Z)(((e,t)=>e&&t)),Wl=(0,Ou.j)(et.RUm,Bl,null,"bool"),Vl={kernelName:et.RUm,backendName:"cpu",kernelFunc:Wl},Ul=(0,Qi.v)(et.nZd,(e=>e?0:1),"bool"),Gl={kernelName:et.nZd,backendName:"cpu",kernelFunc:Ul},Zl=(0,nu.Z)(((e,t)=>e||t)),jl=(0,Ou.j)(et.LXA,Zl,null,"bool"),Hl={kernelName:et.LXA,backendName:"cpu",kernelFunc:jl};const Kl={kernelName:et.jM4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:u}=r;(0,Hi.C)(s,"LRN");const c=s.shape[3],l=c-1,p=n.data.get(s.dataId).values,d=et.ZSL.sizeFromShape(s.shape),h=new Float32Array(d);function f(e){const t=e%c;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,l);let s=0;for(;n<=r;n++){const e=p[n];s+=e*e}return s}for(let m=0;m<d;m++){const e=f(m),t=p[m]*Math.pow(o+i*e,-u);h[m]=t}return n.makeTensorInfo(s.shape,s.dtype,h)}};const Yl={kernelName:et.ToN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=r;(0,Hi.C)(o,"LRNGrad");const p=et.ZSL.sizeFromShape(o.shape),d=o.shape[3],h=n.data.get(o.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(p),y=p;for(let b=0;b<y;b++){const e=b%d,t=b-e+Math.max(0,e-i),n=b-e+Math.min(d,e+i+1);let r=0;for(let s=t;s<n;s++)r+=Math.pow(f[s],2);r=c*r+u;for(let s=t;s<n;s++){let e=-2*c*l*f[s]*m[b]/r;b===s&&(e+=Math.pow(r,-l)),e*=h[b],g[s]+=e}}return n.makeTensorInfo(o.shape,s.dtype,g)}};var Ql=n(3759),ql=n(3396);function Xl(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=n;let u=s.shape;const c=u.length,l=et.ZSL.parseAxisParam(a,u);let p=l;const d=et.C0T.getAxesPermutation(p,c);let h=i.data.get(s.dataId).values;if(null!=d){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[d[t]];h=(0,ql._)(h,u,s.dtype,d,e),p=et.C0T.getInnerMostAxes(p.length,c),u=e}(0,Hi.C)(s,"max"),et.C0T.assertAxesAreInnerMostDims("max",p,c);const[f,m]=et.C0T.computeOutAndReduceShapes(u,p),g=et.ZSL.sizeFromShape(m),y=(0,Ql.j)(h,g,f,s.dtype),b=i.write(y,f,s.dtype);let x=f;if(o){x=et.C0T.expandShapeToKeepDim(f,l)}return{dataId:b,shape:x,dtype:s.dtype}}const Jl={kernelName:et.VAI,backendName:"cpu",kernelFunc:Xl};var ep=n(6114);const tp={kernelName:et.t3d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;(0,Hi.C)(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;et.ZSL.assert(et.C0T.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=et.C0T.computePool2DInfo(s.shape,a,o,1,i,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&et.ZSL.arraysEqual(c.inShape,c.outShape))l=(0,Ji.D)({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=et.ZSL.computeStrides(s.shape),r=Wu(e,s.shape,s.dtype,t,c,"max");l=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return l}};const np={kernelName:et.ySp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=r;(0,Hi.C)(s,"maxPool3d");const l=et.C0T.computePool3DInfo(s.shape,a,o,1,i,u,c),p=Uu(n.data.get(s.dataId).values,s.shape,s.dtype,et.ZSL.computeStrides(s.shape),l,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};const rp={kernelName:et.cHb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=r;(0,Hi.C)([s,a],"maxPool3DGrad");const l=et.C0T.computePool3DInfo(a.shape,o,i,1,u,c),p=function(e,t){const n=(0,et.ra8)(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,l=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=o;const v=Math.min(t.inDepth,c+b);for(let r=0;r<t.outHeight;++r){const c=r*s-h;let d=c;for(;d<0;)d+=i;const w=Math.min(t.inHeight,l+c);for(let s=0;s<t.outWidth;++s){const h=s*a-f;let k=h;for(;k<0;)k+=u;const T=Math.min(t.inWidth,p+h);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=o){const n=t-b;for(let r=d;r<w;r+=i){const s=r-c;for(let a=k;a<T;a+=u){const o=a-h,i=e.get(m,t,r,a,g);i>=S&&(S=i,N=n*l*p+s*l+o)}}}n.set(N,m,y,r,s,g)}}}return n}(n.bufferSync(a),l),d=l.strideDepth,h=l.strideHeight,f=l.strideWidth,m=l.dilationDepth,g=l.dilationHeight,y=l.dilationWidth,b=l.effectiveFilterDepth,x=l.effectiveFilterHeight,v=l.effectiveFilterWidth,w=b-1-l.padInfo.front,k=v-1-l.padInfo.left,T=x-1-l.padInfo.top,S=(0,et.ra8)(a.shape,"float32"),N=n.bufferSync(s);for(let I=0;I<l.batchSize;++I)for(let e=0;e<l.inChannels;++e)for(let t=0;t<l.inDepth;++t)for(let n=0;n<l.inHeight;++n)for(let r=0;r<l.inWidth;++r){const s=t-w,a=n-T,o=r-k;let i=0;for(let t=0;t<b;t+=m){const n=(s+t)/d;if(!(n<0||n>=l.outDepth||Math.floor(n)!==n))for(let r=0;r<x;r+=g){const s=(a+r)/h;if(!(s<0||s>=l.outHeight||Math.floor(s)!==s))for(let a=0;a<v;a+=y){const u=(o+a)/f;if(u<0||u>=l.outWidth||Math.floor(u)!==u)continue;const c=b*x*v-1-p.get(I,n,s,u,e)===t*x*v+r*v+a?1:0;if(0===c)continue;i+=N.get(I,n,s,u,e)*c}}}S.set(i,I,t,n,r,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const sp={kernelName:et.RXX,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;(0,Hi.C)([a,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:p}=r,d=et.C0T.computePool2DInfo(i.shape,u,c,1,l,p),h=n.data.get(i.dataId).values,f=(0,et.ra8)(d.outShape,i.dtype,Vu(h,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,T=(0,et.ra8)(i.shape,"float32"),S=n.data.get(s.dataId).values,N=(0,et.ra8)(s.shape,"float32",S);for(let I=0;I<d.batchSize;++I)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const r=t-k,s=n-w;let a=0;for(let t=0;t<x;t+=y){const n=(r+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let r=0;r<v;r+=b){const o=(s+r)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const i=x*v-1-f.get(I,n,o,e)===t*v+r?1:0;if(0===i)continue;a+=N.get(I,n,o,e)*i}}T.set(a,I,t,n,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const ap={kernelName:et.TL8,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,u=n;(0,Hi.C)(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,l=et.C0T.computePool2DInfo(r.shape,s,a,[1,1],o),[p,d]=function(e,t,n,r,s){const a=Wu(e,0,n,et.ZSL.computeStrides(t),s,"max"),o=Vu(e,t,n,s,!0,r);return[a.values,o.values]}(c,r.shape,r.dtype,i,l),h=u.write(p,l.outShape,r.dtype),f=u.write(d,l.outShape,r.dtype);return[{dataId:h,shape:l.outShape,dtype:r.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};const op={kernelName:et.g5A,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=et.ZSL.parseAxisParam(a,s.shape),u=et.C0T.computeOutAndReduceShapes(s.shape,i)[1],c=et.ZSL.sizeFromShape(u),l=[],p=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(p);const d=(0,tc.wg)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(d);const h=sl({inputs:{a:d,b:p},backend:n});l.push(h);const f=Bc({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:o}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};const ip={kernelName:et.lNG,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;(0,Hi.C)(s,"min");const i=et.ZSL.parseAxisParam(a,s.shape);let u=i;const c=et.C0T.getAxesPermutation(u,s.shape.length);let l=s;null!=c&&(l=(0,Su.m)({inputs:{x:s},backend:n,attrs:{perm:c}}),u=et.C0T.getInnerMostAxes(u.length,s.shape.length)),et.C0T.assertAxesAreInnerMostDims("min",u,l.shape.length);const[p,d]=et.C0T.computeOutAndReduceShapes(l.shape,u),h=et.ZSL.sizeFromShape(d),f=et.ZSL.makeZerosTypedArray(et.ZSL.sizeFromShape(p),l.dtype),m=n.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const e=y*h;let t=m[e];for(let n=0;n<h;++n){const r=m[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[y]=t}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(p,l.dtype,f);if(o){const e=hu({inputs:{x:g},backend:n,attrs:{shape:et.C0T.expandShapeToKeepDim(p,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var up=n(8580);const cp={kernelName:et.x7F,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:o}=r;(0,Hi.C)(s,"mirrorPad");const i=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),c=a.map(((e,t)=>e[0]+s.shape[t])),l="reflect"===o?0:1,p=n.data.get(s.dataId).values,d=s.shape.length,h=et.ZSL.computeStrides(s.shape),f=et.ZSL.sizeFromShape(i),m=i.length,g=et.ZSL.computeStrides(i),y=et.ZSL.getTypedArrayFromDType(s.dtype,f);for(let b=0;b<f;b++){let e=et.ZSL.indexToLoc(b,m,g);for(let n=0;n<m;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-l:e[n]>=c[n]&&(e[n]=2*(c[n]-1)-e[n]+l);e=e.map(((e,t)=>e-u[t]));const t=et.ZSL.locToIndex(e,d,h);y[b]=p[t]}return{dataId:n.write(y,i,s.dtype),shape:i,dtype:s.dtype}}},lp=(0,nu.Z)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),pp=(0,Ou.j)(et.BLA,lp),dp={kernelName:et.BLA,backendName:"cpu",kernelFunc:pp};function hp(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=s.shape.length;let i=a;if(-1===i&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);const u=et.ZSL.parseAxisParam([i],s.shape),c=Xl({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),l=et.C0T.expandShapeToKeepDim(c.shape,u),p=hu({inputs:{x:c},backend:n,attrs:{shape:l}}),d=(0,ol.jb)({inputs:{a:s,b:p},backend:n}),h=(0,Jc.oN)({inputs:{x:d},backend:n}),f=Bc({inputs:{x:h},backend:n,attrs:{axis:u,keepDims:!1}}),m=hu({inputs:{x:f},backend:n,attrs:{shape:l}}),g=sl({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const fp={kernelName:et.rFG,backendName:"cpu",kernelFunc:hp};const mp={kernelName:et.WT3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r;(0,Hi.C)(s,"multinomial");const u=i?s:hp({inputs:{logits:s},backend:n,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],p=n.data.get(u.dataId).values,d=[c,a],h=et.ZSL.makeZerosTypedArray(et.ZSL.sizeFromShape(d),"int32");for(let f=0;f<c;++f){const e=f*l,t=new Float32Array(l-1);t[0]=p[e];for(let s=1;s<t.length;++s)t[s]=t[s-1]+p[e+s];const n=gi.alea(o.toString()),r=f*a;for(let s=0;s<a;++s){const e=n();h[r+s]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){h[r+s]=n;break}}}return i||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",h)}};var gp=n(7962);const yp=et.kpo.c7;const bp={kernelName:et.SDM,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=r;(0,Hi.C)(s,"NonMaxSuppression");const c=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,{selectedIndices:p}=yp(c,l,o,i,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},xp=et.kpo.ZS;const vp={kernelName:et.Zl4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=r;(0,Hi.C)(s,"NonMaxSuppressionPadded");const l=n.data.get(s.dataId).values,p=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:h}=xp(l,p,o,i,u,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},wp=et.kpo.ut;const kp={kernelName:et.e0f,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=r;(0,Hi.C)(s,"NonMaxSuppressionWithScore");const l=n.data.get(s.dataId).values,p=n.data.get(a.dataId).values,d=o,h=i,f=u,m=c,{selectedIndices:g,selectedScores:y}=wp(l,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var Tp=n(7113);const Sp={kernelName:et.urI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:o,onValue:i,offValue:u}=r;(0,Hi.C)(s,"oneHot");const c=et.ZSL.sizeFromShape(s.shape),l=new Float32Array(c*o);l.fill(u);const p=n.data.get(s.dataId).values;for(let d=0;d<c;++d)p[d]>=0&&p[d]<o&&(l[d*o+p[d]]=i);return n.makeTensorInfo([...s.shape,o],a,l)}};function Np(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=(0,lc.x)({inputs:{input:r},backend:n}),t=Np({inputs:{x:e},backend:n}),s=uc({inputs:{input:r},backend:n}),a=Np({inputs:{x:s},backend:n}),o=(0,ac.f)({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return pl({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Ip={kernelName:et.xJ3,backendName:"cpu",kernelFunc:Np};const Cp={kernelName:et.LWX,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=(0,lc.x)({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=uc({inputs:{input:s},backend:r}),o=Np({inputs:{x:a},backend:r}),i=(0,ac.f)({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}return pl({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function Ep(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return el({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{et.ZSL.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),et.ZSL.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=pc({inputs:t.map((e=>{const t=el({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const Ap={kernelName:et.mM$,backendName:"cpu",kernelFunc:Ep};const $p={kernelName:et.ODT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;(0,Hi.C)(s,"pad");const i=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),c=n.data.get(s.dataId).values,l=et.ZSL.sizeFromShape(s.shape),p=s.shape.length,d=et.ZSL.computeStrides(s.shape),h=et.ZSL.sizeFromShape(i),f=i.length,m=et.ZSL.computeStrides(i),g=et.ZSL.getTypedArrayFromDType(s.dtype,h);0!==o&&g.fill(o);for(let y=0;y<l;y++){const e=et.ZSL.indexToLoc(y,p,d).map(((e,t)=>e+u[t]));g[et.ZSL.locToIndex(e,f,m)]=c[y]}return{dataId:n.write(g,i,s.dtype),shape:i,dtype:s.dtype}}},Fp=(0,nu.Z)(((e,t)=>Math.pow(e,t))),Rp=(0,Ou.j)(et.pyJ,Fp),Dp={kernelName:et.pyJ,backendName:"cpu",kernelFunc:Rp};var _p=n(1675),Op=n(5844);const Lp={kernelName:et.oJ2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:o}=t,{outputRaggedRank:i}=r,u=s.map((e=>n.data.get(e.dataId).values)),c=s.map((e=>e.shape)),l=n.data.get(a.dataId).values,p=n.data.get(o.dataId).values,[d,h,f]=(0,Op.u)(u,c,l,a.shape,a.dtype,p,o.shape,i),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,h);return m.concat([g])}};var Mp=n(7620);const zp={kernelName:et.CQC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[c,l]=(0,Mp._)(o,r.shape,r.dtype,i,s.shape,u,a.shape);return[n.makeTensorInfo([c.length],"int32",c),n.makeTensorInfo([l.length],r.dtype,l)]}};var Pp=n(814);const Bp={kernelName:et.mH5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=r,c=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,p=n.data.get(o.dataId).values,d=i.map((e=>n.data.get(e.dataId).values)),h=i.map((e=>e.shape)),[f,m]=(0,Pp.K)(c,s.shape,l,a.shape,a.dtype,p,o.shape,d,h,u);return n.makeTensorInfo(f,a.dtype,m)}};var Wp=n(2610);const Vp={kernelName:et.Q6t,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:o}=n,i=(0,Wp.q)(r,s,o,a);return t.makeTensorInfo([i.length],a,i)}},Up=(0,Qi.v)(et.huO,(e=>1/e)),Gp={kernelName:et.huO,backendName:"cpu",kernelFunc:Up};const Zp={kernelName:et.hgw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;(0,Hi.C)(s,"resizeBilinear");const u=et.ZSL.computeStrides(s.shape),[c,l]=i,[p,d,h,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(et.ZSL.sizeFromShape([p,c,l,f])),y=[a&&c>1?d-1:d,a&&l>1?h-1:h],b=[a&&c>1?c-1:c,a&&l>1?l-1:l];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let k=0;k<p;k++)for(let e=0;e<c;e++){let t;t=o?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(d-1,Math.ceil(t)),a=k*u[0]+n*u[1],i=k*u[0]+s*u[1];for(let e=0;e<l;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),s=t-n,c=Math.min(h-1,Math.ceil(t)),l=a+n*u[2],p=i+n*u[2],d=a+c*u[2],y=i+c*u[2];for(let e=0;e<f;e++){const t=m[l+e],n=m[p+e],a=t+(m[d+e]-t)*s,o=a+(n+(m[y+e]-n)*s-a)*r;g[x++]=o}}}return n.makeTensorInfo([p,c,l,f],"float32",g)}};const jp={kernelName:et.FCQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;(0,Hi.C)([a,s],"resizeBilinearGrad");const i=et.ZSL.computeStrides(s.shape),[u,c,l,p]=s.shape,[,d,h]=a.shape,f=new Float32Array(u*c*l*p),m=[o&&d>1?c-1:c,o&&h>1?l-1:l],g=[o&&d>1?d-1:d,o&&h>1?h-1:h],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let v=0;for(let w=0;w<u;w++){const e=w*i[0];for(let t=0;t<d;t++){const n=t*y,r=Math.floor(n),s=Math.min(Math.ceil(n),c-1),a=e+r*i[1],o=e+s*i[1],u=n-r,d=1-u;for(let e=0;e<h;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),l-1),s=t-n,c=1-s,h=a+n*i[2],m=a+r*i[2],g=o+n*i[2],y=o+r*i[2],w=d*c,k=d*s,T=u*c,S=u*s;for(let e=0;e<p;e++){const t=x[v++];f[h+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*T,f[y+e]+=t*S}}}}return n.makeTensorInfo([u,l,c,p],"float32",f)}};const Hp={kernelName:et.jOE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;(0,Hi.C)(s,"resizeNearestNeighbor");const u=et.ZSL.computeStrides(s.shape),[c,l]=i,[p,d,h,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(p*c*l*f),y=[a&&c>1?d-1:d,a&&l>1?h-1:h],b=[a&&c>1?c-1:c,a&&l>1?l-1:l],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let k=0;k<p;k++){const e=k*u[0];for(let t=0;t<c;t++){const n=o?x*(t+.5):x*t;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=e+r*u[1];for(let e=0;e<l;e++){const t=o?v*(e+.5):v*e;let n=Math.min(h-1,a?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([p,c,l,f],s.dtype,g)}};const Kp={kernelName:et.XQy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;(0,Hi.C)([a,s],"resizeNearestNeighborGrad");const i=et.ZSL.computeStrides(s.shape),u=et.ZSL.computeStrides(a.shape),[c,l,p,d]=s.shape,[,h,f]=a.shape,m=new Float32Array(c*l*p*d),g=n.data.get(a.dataId).values,y=[o&&h>1?l-1:l,o&&f>1?p-1:p],b=[o&&h>1?h-1:h,o&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,T=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let N=0;N<c;N++){const e=N*i[0];for(let t=0;t<l;t++){const n=e+t*i[1],r=Math.floor(t*w),s=Math.floor(r-T/2);for(let a=0;a<p;a++){const r=n+a*i[2],c=Math.floor(a*k),y=Math.floor(c-S/2);for(let n=0;n<d;n++){let i=0;for(let r=0;r<T;r++){const c=r+s;if(c<0||c>=h)continue;const d=e+c*u[1],m=c*x;if(t===Math.min(l-1,o?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const r=d+t*u[2],s=t*v;a===Math.min(p-1,o?Math.round(s):Math.floor(s))&&(i+=g[r+n])}}m[r+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}};const Yp={kernelName:et.D7i,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;(0,Hi.C)(s,"reverse");const o=s.shape.length,i=et.ZSL.parseAxisParam(a,s.shape);if(0===o)return(0,Ji.D)({inputs:{x:s},backend:n});const u=new et.ylz(s.shape,s.dtype),c=n.bufferSync(s);for(let l=0;l<u.size;l++){const e=u.indexToLoc(l),t=e.slice();i.forEach((e=>t[e]=s.shape[e]-1-t[e])),u.set(c.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Qp={kernelName:et.BK4,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,u=et.ZSL.getTypedArrayFromDType(r.dtype,et.ZSL.sizeFromShape(r.shape)),[c,l,p,d]=r.shape,[h,f]=et.C0T.getImageCenter(o,l,p),m=Math.sin(s),g=Math.cos(s),y=i.data.get(r.dataId).values;for(let b=0;b<c;b++){const e=b*p*l*d;for(let t=0;t<l;t++){const n=t*(p*d);for(let r=0;r<p;r++){const s=r*d;for(let o=0;o<d;o++){const i=[c,t,r,o],b=i[2],x=i[1];let v=(b-h)*g-(x-f)*m,w=(b-h)*m+(x-f)*g;v=Math.round(v+h),w=Math.round(w+f);let k=a;if("number"!=typeof a&&(k=3===o?255:a[o]),v>=0&&v<p&&w>=0&&w<l){k=y[e+w*(p*d)+v*d+o]}u[e+n+s+o]=k}}}}return{dataId:i.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},qp=(0,Qi.v)(et.hVg,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),Xp={kernelName:et.hVg,backendName:"cpu",kernelFunc:qp};var Jp=n(4092),ed=n(9095);const td={kernelName:et.pJc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:p}=et.C0T.calculateShapes(a,s,o),d=n.bufferSync(s),h=n.bufferSync(a),f=(0,ed.b)(d,h,o,p,c,u,i,l,0,!0);return n.makeTensorInfo(o,f.dtype,f.values)}};function nd(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function rd(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const sd={kernelName:et.uWl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:o}=r,i=function(e,t,n,r,s,a){const o=et.ZSL.getArrayFromDType("int32",n*s);for(let i=0;i<n;++i){const n=e.slice(i*r,(i+1)*r),u=i*s;for(let e=0;e<s;++e)o[u+e]="left"===a?nd(n,t[e+u]):rd(n,t[e+u])}return o}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],o);return n.makeTensorInfo(a.shape,"int32",i)}};const ad={kernelName:et.l6P,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;(0,Hi.C)([r,s,a],"select");const o=r.shape.length,i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,l=(0,et.TuY)(s.dtype,a.dtype),p=et.ZSL.makeZerosTypedArray(et.ZSL.sizeFromShape(s.shape),l);let d=0;const h=0===o||o>1||1===s.shape.length?1:et.ZSL.sizeFromShape(s.shape.slice(1));for(let f=0;f<i.length;f++)for(let e=0;e<h;e++)1===i[f]?p[d++]=u[f]:p[d++]=c[f];return n.makeTensorInfo(s.shape,l,p)}},od=et.C0T.SELU_SCALEALPHA,id=et.C0T.SELU_SCALE,ud=(0,Qi.v)(et.u$b,(e=>e>=0?id*e:od*(Math.exp(e)-1))),cd={kernelName:et.u$b,backendName:"cpu",kernelFunc:ud},ld=(0,Qi.v)(et.YVe,(e=>e<0?-1:e>0?1:0)),pd={kernelName:et.YVe,backendName:"cpu",kernelFunc:ld},dd=(0,Qi.v)(et.hql,(e=>Math.sin(e))),hd={kernelName:et.hql,backendName:"cpu",kernelFunc:dd},fd=(0,Qi.v)(et.J3C,(e=>Math.sinh(e))),md={kernelName:et.J3C,backendName:"cpu",kernelFunc:fd},gd=Math.log(1.1920928955078125e-7)+2,yd=(0,Qi.v)(et.Fin,(e=>{const t=e>-gd,n=e<gd,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),bd={kernelName:et.Fin,backendName:"cpu",kernelFunc:yd};const xd={kernelName:et.A8B,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;(0,Hi.C)([s],"spaceToBatchND");const i=et.ZSL.sizeFromShape(a),u=[[0,0]];u.push(...o);for(let b=1+a.length;b<s.shape.length;++b)u.push([0,0]);const c=$p.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),l=et.C0T.getReshaped(c.shape,a,i,!1),p=et.C0T.getPermuted(l.length,a.length,!1),d=et.C0T.getReshapedPermuted(c.shape,a,i,!1),h=hu({inputs:{x:c},backend:n,attrs:{shape:l}}),f={x:h},m={perm:p},g=(0,Su.m)({inputs:f,backend:n,attrs:m}),y=hu({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(g),y}};var vd=n(5744);const wd={kernelName:et.C8s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[p,d,h,f,m]=(0,vd.y)(i,r.shape,r.dtype,u,s.dtype,c,l);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],s.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var kd=n(5587);const Td={kernelName:et.BoJ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.data.get(s.dataId).values),i=n.data.get(r.dataId).values,u=Array.from(n.data.get(a.dataId).values),[c,l,p]=(0,kd.l)(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}};var Sd=n(5589);const Nd={kernelName:et.L6G,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[c,l]=(0,Sd.z)(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(l,r.dtype,c)}};const Id={kernelName:et.DvZ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[c,l]=(0,Sd.z)(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(l,r.dtype,c)}};const Cd={kernelName:et.jgd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:p,outputSize:d}=et.C0T.calculateShapes(a,s,i),h=!1,f=n.bufferSync(s);let m;switch(a.dtype){case"bool":{const e=n.bufferSync(a),t=Boolean(n.data.get(o.dataId).values[0]);m=(0,ed.b)(f,e,i,d,l,c,u,p,t,h);break}case"float32":{const e=n.bufferSync(a),t=n.data.get(o.dataId).values[0];m=(0,ed.b)(f,e,i,d,l,c,u,p,t,h);break}case"int32":{const e=n.bufferSync(a),t=n.data.get(o.dataId).values[0];m=(0,ed.b)(f,e,i,d,l,c,u,p,t,h);break}case"string":{const e=n.bufferSync(a),t=et.ZSL.decodeString(n.data.get(o.dataId).values[0]);m=(0,ed.b)(f,e,i,d,l,c,u,p,t,h);break}default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(i,m.dtype,m.values)}};const Ed={kernelName:et.Blb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=et.ZSL.parseAxisParam(o,s.shape)[0],u=et.C0T.prepareSplitSize(s,a,i),c=new Array(s.shape.length).fill(0),l=s.shape.slice();return u.map((e=>{const t=[...l];t[i]=e;const r=(0,Yu.di)({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[i]+=e,r}))}};var Ad=n(3252);const $d={kernelName:et.M6A,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;(0,Hi.C)(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let o=0;o<s.length;++o){const e=s[o];a[o]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Fd=(0,nu.Z)(((e,t)=>{const n=e-t;return n*n})),Rd=(0,Ou.j)(et.Ddj,Fd),Dd={kernelName:et.Ddj,backendName:"cpu",kernelFunc:Rd};var _d=n(7985);const Od=(0,Qi.v)(et.pnw,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Ld={kernelName:et.pnw,backendName:"cpu",kernelFunc:Od};var Md=n(7686);const zd={kernelName:et.UcO,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:p,shrinkAxisMask:d}=r;(0,Hi.C)(s,"stridedSlice");const{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=et.Kro.sliceInfo(s.shape,a,o,i,u,c,l,p,d);let w;if(m)w=hu({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){et.ZSL.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=et.Kro.computeOutShape(b,x,v),t=(0,Yu.di)({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=hu({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(s),t=(0,Md.e)(h,e,v,b);w=n.makeTensorInfo(f,t.dtype,t.values)}return w}};var Pd=n(3514);const Bd={kernelName:et.YAb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:p}=t,d=n.data.get(l.dataId).values,h=n.data.get(p.dataId).values,[f,m]=(0,Pd.G)(d,h,s,a,o,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};var Wd=n(2948);const Vd={kernelName:et.iW0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values[0],[c,l,p]=(0,Wd.S)(i,u,s),d=l.length;return[n.makeTensorInfo([d,2],"int32",c),n.makeTensorInfo([d],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};var Ud=n(7916);const Gd={kernelName:et.$jE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=n.data.get(a.dataId).values,i=(0,Ud.f)(o,s);return n.makeTensorInfo(a.shape,"int32",i)}},Zd=(0,Qi.v)(et.oFs,(e=>Math.tan(e))),jd={kernelName:et.oFs,backendName:"cpu",kernelFunc:Zd},Hd=(0,Qi.v)(et.iuW,(e=>Math.tanh(e))),Kd={kernelName:et.iuW,backendName:"cpu",kernelFunc:Hd};const Yd={kernelName:et.X4r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:a}=t,{sliceRank:o,numUpdates:i,sliceSize:u,strides:c,outputSize:l}=et.C0T.calculateShapes(a,s,r.shape),p=n.bufferSync(s),d=n.bufferSync(a),h=n.bufferSync(r),f=(0,ed.b)(p,d,r.shape,l,u,i,o,c,h,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};var Qd=n(1671);const qd={kernelName:et.FAs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;(0,Hi.C)(s,"tile");const o=(0,Qd.D)(n.bufferSync(s),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}};var Xd=n(3475);const Jd={kernelName:et.TBb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r;(0,Hi.C)(s,"topk");const i=n.data.get(s.dataId).values,[u,c]=(0,Xd.x)(i,s.shape,s.dtype,a,o);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};const eh={kernelName:et.dLy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=n,[l,p,d,h]=s.shape,[f,m]=null!=c?c:[p,d],g=[l,f,m,h],y=et.ZSL.computeStrides(s.shape),b=y[0],x=y[1],v=y[2],w=et.ZSL.computeStrides(g),k=w[0],T=w[1],S=w[2],N=et.ZSL.getTypedArrayFromDType(s.dtype,et.ZSL.sizeFromShape(g));N.fill(u);const I=r.data.get(s.dataId).values,C=r.data.get(a.dataId).values;for(let E=0;E<l;++E){const e=1===a.shape[0]?C:C.subarray(8*E,8*E+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let r=0;r<h;++r){let s;const a=e[6]*n+e[7]*t+1;if(0===a)continue;const c=(e[0]*n+e[1]*t+e[2])/a,l=(e[3]*n+e[4]*t+e[5])/a,h=th(c,d,i),f=th(l,p,i);switch(o){case"nearest":s=rh(I,p,d,b,x,v,E,f,h,r,u);break;case"bilinear":s=sh(I,p,d,b,x,v,E,f,h,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}N[E*k+t*T+n*S+r]=s}return r.makeTensorInfo(g,s.dtype,N)}return{dataId:r.write(N,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function th(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return et.ZSL.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return et.ZSL.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return et.ZSL.clamp(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function nh(e,t,n,r,s,a,o,i,u,c,l){return 0<=i&&i<t&&0<=u&&u<n?e[o*r+i*s+u*a+c]:l}function rh(e,t,n,r,s,a,o,i,u,c,l){return nh(e,t,n,r,s,a,o,Math.round(i),Math.round(u),c,l)}function sh(e,t,n,r,s,a,o,i,u,c,l){const p=Math.floor(i),d=Math.floor(u),h=p+1,f=d+1;return(h-i)*((f-u)*nh(e,t,n,r,s,a,o,p,d,c,l)+(u-d)*nh(e,t,n,r,s,a,o,p,f,c,l))+(i-p)*((f-u)*nh(e,t,n,r,s,a,o,h,d,c,l)+(u-d)*nh(e,t,n,r,s,a,o,h,f,c,l))}var ah=n(2750);const oh={kernelName:et.EwU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;(0,Hi.C)(a,"unique");const o=r.data.get(a.dataId).values,{outputValues:i,outputShape:u,indices:c}=(0,ah.w)(o,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}};const ih={kernelName:et.dXR,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s.shape.length,i=s.shape[a],u=new Array(o-1);let c=0;for(let h=0;h<o;h++)h!==a&&(u[c++]=s.shape[h]);const l=new Array(o).fill(0),p=s.shape.slice();p[a]=1;const d=new Array(i);for(let h=0;h<d.length;h++){l[a]=h;const e=(0,Yu.di)({inputs:{x:s},backend:n,attrs:{begin:l,size:p}});d[h]=hu({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return d}};const uh={kernelName:et.pPe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r;(0,Hi.C)(s,"unsortedSegmentSum");const i=[],u=[],c=s.shape.length-a.shape.length;let l=a;for(let d=0;d<c;++d){const e=el({inputs:{input:l},backend:n,attrs:{dim:d+1}});l=e,u.push(e)}for(let d=0;d<o;++d){const e=et.ZSL.createScalarValue(d,"int32"),t=n.makeTensorInfo([],"int32",e),r=(0,Gc.LC)({inputs:{a:t,b:l},backend:n}),a=(0,tc.wg)({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),o=(0,zc.lw)({inputs:{a:a,b:s},backend:n}),c=Bc({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});i.push(c),u.push(t),u.push(r),u.push(a),u.push(o),u.push(c)}const p=Ep({inputs:i,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},ch=[yu,bu.lO,vu,ku,du.UK,Tu,Nu,Iu,Cu,Eu,$u,Ru,_u,zu,Bu,Gu,Zu,ju,Hu,gu,Ku,Qu,Xu,Ju.LY,ec,tc.Ml,nc.uf,sc,ac.v,oc,dc,fc,mc,gc,yc,bc,xc,wc,Tc,Sc,Nc,Ic,Cc,Ec,$c,Fc,Rc,Dc,_c,Oc,Lc,Mc,Vc,Xi,Uc,Gc.RY,Xc,Jc.AC,tl,nl.Yp,ll,dl,hl,fl.Hc,yl,bl,xl,wl,Tl,Sl.xp,Nl.VM,Ji.F,Il,cc,El,$l,Rl,tu,Dl.YW,_l.Q,Ll,Ml.Fx,Pl,Vl,Gl,Hl,Kl,Yl,Jl,ep.l9,tp,np,rp,sp,ap,op,ip,up.Nu,cp,dp,mp,zc.tJ,gp.hd,bp,vp,kp,Tp.AL,Sp,Cp,Ap,$p,Dp,au,_p.S3,Lp,zp,Bp,Vp,lc.r,al,Gp,iu,cu,fu,Zp,jp,Hp,Kp,Yp,Qp,Xp,Jp.Lt,td,sd,ad,cd,lu.X3,pd,hd,md,Yu.lv,fp,bd,xd,wd,Td,Nd,Id,Cd,Ed,Ad.Fu,$d,Dd,_d.C,Ld,zd,Bd,Vd,Gd,ol.Zl,Wc,jd,Kd,Yd,qd,Jd,eh,Su.W,oh,ih,uh,Ip];for(const kv of ch)(0,et.tAK)(kv);var lh=n(7546);et.eMq.isBrowser()&&(0,et.gJX)("webgl",(()=>new lh.Q6),2);var ph=n(2792);const dh="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class hh{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=et.C0T.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=(0,ph.ik)(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}var fh=n(5694),mh=n(7575);const gh="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class yh{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=et.C0T.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=(0,ph.ik)(s);let a="";if(r)if(0===s||1===et.ZSL.sizeFromShape(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${(0,mh.bf)(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=(0,fh.Jp)("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function bh(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const xh={kernelName:et.lzr,backendName:"webgl",kernelFunc:bh};function vh(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(a.dataId),i=bh({inputs:{x:r},backend:n}),u=bh({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:u},a}const wh={kernelName:et.pr3,backendName:"webgl",kernelFunc:vh},kh="return (a < 0.) ? b * a : a;",Th="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Sh={kernelName:et.X0$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,o=n.makeTensorInfo([],"float32",et.ZSL.createScalarValue(a,"float32")),i=(0,et._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yh(Th,s.shape,o.shape):new hh(kh,s.shape,o.shape),u=n.runWebGLProgram(i,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),u}},Nh="return (a < 0.) ? b * a : a;",Ih="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Ch={kernelName:et.Ncv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=(0,et._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yh(Ih,r.shape,s.shape):new hh(Nh,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}};var Eh=n(8173),Ah=n(2509);const $h="if (isnan(x)) return x;";function Fh({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:o}=s,i=a,u=r||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=n){const e=i.texData.get(o.dataId),t=n(e.values,u);return i.makeTensorInfo(o.shape,u,t)}let c;return c=(0,et._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Ah.rf(o.shape,t):new Eh.hE(o.shape,e),i.runWebGLProgram(c,[o],u)}}function Rh({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:o,backend:i})=>{const{a:u,b:c}=o,l=i;if(r&&"complex64"===u.dtype){const t=l.texData.get(u.dataId),n=l.texData.get(c.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:c.shape},o=new hh(e,u.shape,c.shape);return l.runWebGLProgram(o,[s,a],(0,et.TuY)(n.dtype,r.dtype))})),a=vh({inputs:{real:r,imag:s},backend:l});return l.disposeIntermediateTensorInfo(r),l.disposeIntermediateTensorInfo(s),a}const p=a||(0,et.TuY)(u.dtype,c.dtype);if(("string"===u.dtype||"string"===c.dtype||l.shouldExecuteOnCPU([u,c]))&&null!=s){const e=l.texData.get(u.dataId).values,t=l.texData.get(c.dataId).values,n="string"===u.dtype?et.C0T.fromUint8ToStringArray(e):e,r="string"===u.dtype?et.C0T.fromUint8ToStringArray(t):t,[a,o]=s(u.shape,c.shape,n,r,p),i=l.makeTensorInfo(o,p);return l.texData.get(i.dataId).values=a,i}let d;return d=(0,et._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new yh(t,u.shape,c.shape,n):new hh(e,u.shape,c.shape),l.runWebGLProgram(d,[u,c],p)}}function Dh(e,t=!1){if("linear"===e)return t?Ah._Q:Eh._Q;if("relu"===e)return t?Ah.X8:Eh.X8;if("elu"===e)return t?Ah.X0:Eh.X0;if("relu6"===e)return t?Ah.Nb:Eh.Nb;if("prelu"===e)return t?Ih:Nh;if("leakyrelu"===e)return t?Th:kh;if("sigmoid"===e)return t?Ah.Hq:Eh.Hq;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class _h{constructor(e,t,n,r=!1,s=!1,a=!1,o=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=(0,ph.ik)(this.outputShape.length);const c=r?e[1]:e[2],l=Math.ceil(c/2),p=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${l}; i++) {\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const Oh={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Lh{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=et.C0T.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}var Mh=n(457);const zh="return a * b;";function Ph(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=et.C0T.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new Lh(Oh.REAL,r.shape,s.shape),o=new Lh(Oh.IMAG,r.shape,s.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,i,"float32"),c=n.runWebGLProgram(o,i,"float32"),l=vh({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[o,i]=(0,Mh.Xe)(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(i,a);return n.texData.get(u.dataId).values=o,u}let o;return o=(0,et._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yh(zh,r.shape,s.shape):new hh(zh,r.shape,s.shape),n.runWebGLProgram(o,[r,s],a)}const Bh={kernelName:et.xu7,backendName:"webgl",kernelFunc:Ph};var Wh=n(9023),Vh=n(8380);function Uh(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=n,i=et.ZSL.sizeFromShape(s.shape),u=et.ZSL.inferFromImplicitShape(a,i),c=et.ZSL.sizeFromShape(u);et.ZSL.assert(i===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`));const l=o.texData.get(s.dataId);return!l.isPacked||(0,Vh.P0)(s.shape,u)||null!==l.texture&&(0,Vh.P0)(l.shape,u)?(o.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[(0,Vh.N0)(e.shape),...(0,Vh.Ph)(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[(0,Vh.N0)(t),...(0,Vh.Ph)(t)],o=new Wh.R(a,r),i=[r],u=n.runWebGLProgram(o,[s],e.dtype,i,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,u,o)}const Gh={kernelName:et.R23,backendName:"webgl",kernelFunc:Uh};class Zh{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const o=4*Math.floor(n/4),i=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${et.ZSL.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===i}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class jh{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(o="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(o="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===l}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===l}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${u});\n      }\n    `}}function Hh(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=et.C0T.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let o=0;o<s.length;o++){const{inSize:i,windowSize:u,outSize:c}=s[o];let l,p;l="mean"===n?0===o?new Zh({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},i):new Zh({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c}):new jh({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},n),p=a,a=r.runWebGLProgram(l,[a],t),p.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(p)}return a}class Kh{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const r=(0,mh.bf)(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class Yh{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=(0,mh.bf)(this.rank),s=(0,fh.Fd)("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=s[c];const o=`vec2(${a.slice(-2).join()})`,i=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Qh(e,t,n){const r=(0,et._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yh(e.shape,t):new Kh(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function qh(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return function(e,t,n,r){const s=t,a=e.shape.length,o=et.ZSL.parseAxisParam(s,e.shape);let i=o;const u=et.C0T.getAxesPermutation(i,a),c=null!=u;let l=e;c&&(l=Qh(e,u,r),i=et.C0T.getInnerMostAxes(i.length,a)),et.C0T.assertAxesAreInnerMostDims("sum",i,a);const[p,d]=et.C0T.computeOutAndReduceShapes(l.shape,i);let h=p;n&&(h=et.C0T.expandShapeToKeepDim(p,o));const f=et.ZSL.sizeFromShape(d),m=Uh({inputs:{x:l},attrs:{shape:[et.ZSL.sizeFromShape(e.shape)/f,f]},backend:r}),g=Hh(m,(0,et.chL)(e.dtype),"sum",r),y=Uh({inputs:{x:g},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),c&&r.disposeIntermediateTensorInfo(l),y}(s,a,o,n)}const Xh={kernelName:et.WuN,backendName:"webgl",kernelFunc:qh};function Jh(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,o=n,i=s.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=s.shape[a[l]];let c;if(o.shouldExecuteOnCPU([s])){const e=o.texData.get(s.dataId).values,t=(0,Mh.Q5)(e,s.shape,s.dtype,a,u);c=o.makeTensorInfo(u,s.dtype);o.texData.get(c.dataId).values=t}else c=Qh(s,a,o);return c}const ef={kernelName:et.wx0,backendName:"webgl",kernelFunc:Jh},tf=1e3;function nf({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const c=e.shape.length,l=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],d=r?t.shape[l-1]:t.shape[l-2],h=n?e.shape[c-1]:e.shape[c-2],f=r?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=et.ZSL.sizeFromShape(m),b=et.ZSL.sizeFromShape(g),x=et.ZEY.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);et.ZSL.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,p,h]:[y,h,p],w=r?[b,f,d]:[b,d,f],k=Uh({inputs:{x:e},backend:s,attrs:{shape:v}}),T=Uh({inputs:{x:t},backend:s,attrs:{shape:w}}),S=[k,T],N=Math.max(y,b),I=n?k.shape[1]:k.shape[2],C=null!=a,E=null!=o,A="leakyrelu"===u,$=null!=u?Dh(u,!0):null;let F;if((1===h||1===f)&&I>tf&&!1===(C||E||A||null!=$)){let e=k,t=T;n&&(e=Jh({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=Jh({inputs:{x:T},backend:s,attrs:{perm:[0,2,1]}}),S.push(t));const a=1===f;let o=e;1!==f&&(o=Uh({inputs:{x:e},backend:s,attrs:{shape:[N,I,1]}}),S.push(o));const i=1===f?2:1;let u=t;a&&(u=Uh({inputs:{x:t},backend:s,attrs:{shape:[N,1,I]}}),S.push(u));const c=Ph({inputs:{a:o,b:u},backend:s});F=qh({inputs:{x:c},backend:s,attrs:{axis:i,keepDims:!0}}),S.push(c)}else{const u=(0,et.TuY)(e.dtype,t.dtype),c=new _h(v,w,[N,h,f],n,r,C,$,E,A),l=[k,T];if(null!=a&&l.push(a),E&&l.push(o),A){const e=s.makeTensorInfo([],"float32",et.ZSL.createScalarValue(i,"float32"));l.push(e),S.push(e)}F=s.runWebGLProgram(c,l,u)}const R=Uh({inputs:{x:F},backend:s,attrs:{shape:x}});S.push(F);for(const D of S)s.disposeIntermediateTensorInfo(D);return R}const rf={kernelName:et.Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:p}=r;return nf({a:s,b:a,transposeA:u,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:p,activation:l})}},sf="return abs(x);";const af={kernelName:et.ljI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=(0,Mh.f8)(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=(0,et._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ah.rf(r.shape,sf):new Eh.hE(r.shape,sf),n.runWebGLProgram(s,[r],r.dtype)}},of=Fh({opSnippet:Eh.dR+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),uf={kernelName:et.Vvy,backendName:"webgl",kernelFunc:of},cf=Fh({opSnippet:Eh.dR+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),lf={kernelName:et.PH8,backendName:"webgl",kernelFunc:cf},pf="return a + b;",df=Rh({opSnippet:pf,packedOpSnippet:pf,supportsComplex:!0,cpuKernelImpl:Mh.Gs}),hf={kernelName:et.OMN,backendName:"webgl",kernelFunc:df};class ff{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class mf{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const gf={kernelName:et.EkD,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return bh({inputs:{x:s[0]},backend:r});if(s.length>(0,et._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>(0,et.TuY)(e,t))),o=s.map((e=>e.shape)),i=(0,et._K2)().getBool("WEBGL_PACK")?new mf(s[0].shape,o):new ff(s[0].shape,o);return r.runWebGLProgram(i,s,a)}};const yf={kernelName:et.u8Z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=et.ZSL.parseAxisParam(a,s.shape);let c=u;const l=et.C0T.getAxesPermutation(c,i);let p=s;null!=l&&(p=Jh({inputs:{x:s},backend:n,attrs:{perm:l}}),c=et.C0T.getInnerMostAxes(c.length,i)),et.C0T.assertAxesAreInnerMostDims("all",c,i);const[d,h]=et.C0T.computeOutAndReduceShapes(p.shape,c),f=Uh({inputs:{x:p},backend:n,attrs:{shape:[-1,et.ZSL.sizeFromShape(h)]}}),m=Hh(f,f.dtype,"all",n);let g;if(o){g=Uh({inputs:{x:m},backend:n,attrs:{shape:et.C0T.expandShapeToKeepDim(d,u)}})}else g=Uh({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(p),g}};const bf={kernelName:et.FSt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=et.ZSL.parseAxisParam(a,s.shape);let c=u;const l=et.C0T.getAxesPermutation(c,i);let p=s;null!=l&&(p=Jh({inputs:{x:s},backend:n,attrs:{perm:l}}),c=et.C0T.getInnerMostAxes(c.length,i)),et.C0T.assertAxesAreInnerMostDims("any",c,i);const[d,h]=et.C0T.computeOutAndReduceShapes(p.shape,c),f=Uh({inputs:{x:p},backend:n,attrs:{shape:[-1,et.ZSL.sizeFromShape(h)]}}),m=Hh(f,f.dtype,"any",n);let g;if(o){g=Uh({inputs:{x:m},backend:n,attrs:{shape:et.C0T.expandShapeToKeepDim(d,u)}})}else g=Uh({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(p),g}};class xf{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class vf{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,et.ZSL.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,u=(0,mh.bf)(i),c=(0,fh.Jp)("coords",i);let l,p;if(1===a){p=i+1;const e=(0,mh.bf)(p);l=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[i-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[i-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[i-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[i-2]};`}else p=i,l=`\n        ${u} sourceLocR = coords;\n        ++${c[i-1]};\n        ${u} sourceLocG = coords;\n        ++${c[i-2]};\n        ${u} sourceLocA = coords;\n        --${c[i-1]};\n        ${u} sourceLocB = coords;\n        --${c[i-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],f=d.map((e=>"int "+e)),m=(0,fh.Jp)("sourceLocR",p-1).concat("inIdx.r"),g=(0,fh.Jp)("sourceLocG",p-1).concat("inIdx.g"),y=(0,fh.Jp)("sourceLocB",p-1).concat("inIdx.b"),b=(0,fh.Jp)("sourceLocA",p-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[i-1]} < ${o[i-1]-1};\n        bool hasNextRow = ${c[i-2]} < ${o[i-2]-1};\n        ${l}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function wf(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const o=et.C0T.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:s,outSize:Math.ceil(a/o)},u=new xf(i,n,null==r),c=[t];null!=r&&c.push(r);const l=e.runWebGLProgram(u,c,"int32");if(1===l.shape[1])return l;const p=wf(e,t,n,l);return e.disposeIntermediateTensorInfo(l),p}function kf(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=s[s.length-1],o=et.C0T.computeOptimalWindowSize(a),i=new vf(s,o,n,null==r),u=null==r?[t]:[t,r],c=e.runWebGLProgram(i,u,"int32");if(c.shape.length===t.shape.length){const r=kf(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function Tf(e,t,n,r){const s=[n];if(et.C0T.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!(0,et._K2)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let o=t;null!==a&&a.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,u]=et.C0T.computeOutAndReduceShapes(o.shape,s),c=et.ZSL.sizeFromShape(u),l=Uh({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(l);const p=wf(e,l,r);n.push(p);const d=Uh({inputs:{x:p},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return kf(e,t,r)}const Sf={kernelName:et.Jp_,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=et.ZSL.parseAxisParam(a,s.shape);const i=et.C0T.getAxesPermutation(o,s.shape.length);let u=s;const c=[];null!=i&&(u=Jh({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(u),o=et.C0T.getInnerMostAxes(o.length,u.shape.length)),et.C0T.assertAxesAreInnerMostDims("argMax",[o[0]],u.shape.length);const l=Tf(n,u,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};const Nf={kernelName:et.p_m,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=et.ZSL.parseAxisParam(a,s.shape);const i=et.C0T.getAxesPermutation(o,s.shape.length);let u=s;const c=[];null!=i&&(u=Jh({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(u),o=et.C0T.getInnerMostAxes(o.length,u.shape.length)),et.C0T.assertAxesAreInnerMostDims("argMin",[o[0]],u.shape.length);const l=Tf(n,u,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},If=Fh({opSnippet:Eh.dR+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Cf={kernelName:et.QKF,backendName:"webgl",kernelFunc:If},Ef=Fh({opSnippet:Eh.dR+"return log(x + sqrt(x * x + 1.0));"}),Af={kernelName:et.epO,backendName:"webgl",kernelFunc:Ef},$f=Fh({opSnippet:Eh.dR+"\n  return atan(x);\n"}),Ff={kernelName:et.TyE,backendName:"webgl",kernelFunc:$f},Rf=Rh({opSnippet:dh+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+gh+"\n  return result;\n"}),Df={kernelName:et.lxb,backendName:"webgl",kernelFunc:Rf},_f=Fh({opSnippet:Eh.dR+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Of={kernelName:et.zP9,backendName:"webgl",kernelFunc:_f};class Lf{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${d}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${d}, ${h});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class Mf{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(a/4),k=a%4,T=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${T}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${T}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${T}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${T}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const zf={kernelName:et.ho8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;(0,Vh.CE)(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;et.ZSL.assert(et.C0T.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=et.C0T.computePool2DInfo(s.shape,a,o,1,i,u);if(1===c.filterWidth&&1===c.filterHeight&&et.ZSL.arraysEqual(c.inShape,c.outShape))return bh({inputs:{x:s},backend:n});const l=new Lf(c,"avg",!1);return n.runWebGLProgram(l,[s],"float32")}};const Pf={kernelName:et.cS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=r,l=et.C0T.computePool3DInfo(s.shape,a,o,[1,1,1],i,u,c),p=new Mf(l,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}};class Bf{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.top,l=u-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Wf{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=l-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Vf={kernelName:et.wwC,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,p=et.C0T.computePool3DInfo(o.shape,i,u,[1,1,1],c,l),d=new Wf(p);return n.runWebGLProgram(d,[s],o.dtype)}};const Uf={kernelName:et.VCH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;(0,Vh.CE)([s,a],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=r,l=et.C0T.computePool2DInfo(o.shape,i,u,1,c),p=new Bf(l);return n.runWebGLProgram(p,[s],o.dtype)}};const Gf={kernelName:et.jAQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;return nf({a:s,b:a,transposeA:o,transposeB:i,backend:n})}};class Zf{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],et.C0T.assertAndGetBroadcastShape(e,t),et.C0T.assertAndGetBroadcastShape(e,n);let o="0.0";null!=r&&(et.C0T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=s&&(et.C0T.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${i};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class jf{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],et.C0T.assertAndGetBroadcastShape(e,t),et.C0T.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=r&&(et.C0T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=s&&(et.C0T.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${i};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Hf={kernelName:et.i5R,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:o,scale:i}=e;et.ZSL.assert(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),et.ZSL.assert(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),et.ZSL.assert(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[r,s,a];let l=null;null!=o&&(l=o.shape,c.push(o));let p=null;null!=i&&(p=i.shape,c.push(i));const d=(0,et._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new jf(r.shape,s.shape,a.shape,l,p,u):new Zf(r.shape,s.shape,a.shape,l,p,u);return t.runWebGLProgram(d,c,c[0].dtype)}};class Kf{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=(0,mh.bf)(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Yf.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Yf[t]} = start[${t}] + coords.${Yf[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Yf=["x","y","z","w","u","v"];class Qf{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=(0,mh.bf)(this.rank),n=(0,fh.Jp)("coords",this.rank),r=(0,fh.Jp)("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,o=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}}function qf(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r,[i,u]=et.Kro.parseSliceParams(s,a,o);if(et.Kro.assertParamsValid(s,i,u),0===et.ZSL.sizeFromShape(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=(0,Mh.J3)(e.values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:c}=n.texData.get(s.dataId),l=et.Kro.isSliceContinous(s.shape,i,u);if(c||!l){const e=(0,et._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Qf(u):new Kf(u),t=[i];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),o=r.texData.get(a.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=et.Kro.computeFlatOffset(t,et.ZSL.computeStrides(e.shape));s.slice&&(i+=s.slice.flatOffset),o.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),a}(s,i,u,n)}const Xf={kernelName:et.JiE,backendName:"webgl",kernelFunc:qf},Jf={kernelName:et.Ik2,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;et.ZSL.assert(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),u=et.C0T.getReshaped(s.shape,a,i),c=et.C0T.getPermuted(u.length,a.length),l=et.C0T.getReshapedPermuted(s.shape,a,i),p=et.C0T.getSliceBeginCoords(o,a.length),d=et.C0T.getSliceSize(l,o,a.length),h=[],f=Uh({inputs:{x:s},backend:n,attrs:{shape:u}}),m=Jh({inputs:{x:f},backend:n,attrs:{perm:c}}),g=Uh({inputs:{x:m},backend:n,attrs:{shape:l}}),y=qf({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const em={kernelName:et.N4F,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.readSync(s.dataId),u=n.readSync(a.dataId),c=(0,Mh.jm)(i,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}};const tm={kernelName:et.HNs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=(0,et._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=(0,et._K2)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===o){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,o]=(0,Mh.PA)(r.shape,s.shape,e,t,r.dtype),i=n.makeTensorInfo(o,r.dtype);return n.texData.get(i.dataId).values=a,i}let i;return i=a?new yh("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new hh("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(i,[r,s],r.dtype)}};const nm={kernelName:et.vj7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),o=n.readSync(s.dataId),i=et.C0T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},rm=Rh({opSnippet:"return float(a != b);",cpuKernelImpl:Mh.ad,dtype:"bool"}),sm={kernelName:et.ylV,backendName:"webgl",kernelFunc:rm};function am(e){const{inputs:t,backend:n}=e,{input:r}=t;return bh({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const om={kernelName:et.LRy,backendName:"webgl",kernelFunc:am},im="return float(int(x));";const um={kernelName:et.KXH,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===a.dtype)return bh({inputs:{x:a},backend:r});const t=et.Ul9(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=vh({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=am({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!et.ZSL.hasEncodingLoss(a.dtype,o)){const e=bh({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=(0,Mh.Kf)(e,a.shape,a.dtype,o);return r.makeTensorInfo(t,n,s)}if("int32"===o)return function(e,t){const n=new Eh.hE(e.shape,im),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",et.ZSL.getTypedArrayFromDType("bool",1)),t=rm({inputs:{a:a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}},cm="return ceil(x);",lm=Fh({opSnippet:cm,packedOpSnippet:cm,cpuKernelImpl:Mh.Md}),pm={kernelName:et.QDP,backendName:"webgl",kernelFunc:lm};class dm{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class hm{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const fm={kernelName:et.vaV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r;let i;i=(0,et._K2)().getBool("WEBGL_PACK_CLIP")?new hm(s.shape):new dm(s.shape);const u=[[a],[o]];return n.runWebGLProgram(i,[s],s.dtype,u)}};class mm{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function gm(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const ym={kernelName:et.$zE,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new mm(r.shape),o=[gm(r,s.complexTensorInfos.real),gm(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}};class bm{constructor(e){this.outputShape=[],this.outputShape=et.C0T.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const e=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${e}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class xm{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=et.C0T.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=(0,mh.bf)(r),a=(0,fh.Jp)("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];const u=o[t],c=o.slice(-2),l=o.join();let p=`if (${u} < ${i[0]}) {\n        return getChannel(\n            getT0(${l}), vec2(${c.join()}));\n        }`;for(let f=1;f<i.length;f++){const e=i[f-1];p+=`\n        if (${u} < ${i[f]}  && ${u} >= ${i[f-1]}) {\n          return getChannel(\n            getT${f}(${vm(o,u,e)}),\n            vec2(${vm(c,u,e)}));\n        }`}const d=i.length,h=i[i.length-1];p+=`\n        return getChannel(\n          getT${d}(${vm(o,u,h)}),\n          vec2(${vm(c,u,h)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function vm(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function wm(e){const{inputs:t,backend:n}=e,{input:r}=t;return bh({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const km={kernelName:et.dv8,backendName:"webgl",kernelFunc:wm};function Tm(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>am({inputs:{input:e},backend:n}))),s=e.map((e=>wm({inputs:{input:e},backend:n}))),a=Tm(r,t,n),o=Tm(s,t,n),i=vh({inputs:{real:a,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),i}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=et.ZSL.sizeFromShape(e.shape.slice(t));return Uh({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=et.C0T.computeOutShape(s.map((e=>e.shape)),1),i=1===s[0].shape[0],u=(0,Mh.dv)(a,o,r,i),c=et.C0T.computeOutShape(e.map((e=>e.shape)),t),l=n.makeTensorInfo(c,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const a=e.filter((e=>et.ZSL.sizeFromShape(e.shape)>0)),o=(0,et._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=o?new Eh.hE(e[0].shape,Eh.UC):new Ah.rf(e[0].shape,Eh.UC);return n.runWebGLProgram(t,e,r)}const i=(0,et._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>i){const e=[];for(let s=0;s<a.length;s+=i){const r=a.slice(s,s+i);e.push(Tm(r,t,n))}const r=Tm(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(o){const e=new xm(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:u,outShape:c}=function(e,t,n){const r=et.C0T.computeOutShape(e.map((e=>e.shape)),t),s=e.map((e=>Uh({inputs:{x:e},attrs:{shape:[-1,et.ZSL.sizeFromShape(e.shape.slice(t))]},backend:n})));return{tensors2D:s,outShape:r}}(a,t,n),l=new bm(u.map((e=>e.shape))),p=n.runWebGLProgram(l,u,r);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=Uh({inputs:{x:p},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(p),d}function Sm(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=et.ZSL.parseAxisParam(s,t[0].shape)[0],o=t.map((e=>e.shape));et.C0T.assertParamsConsistent(o,a);const i=et.C0T.computeOutShape(t.map((e=>e.shape)),a);if(0===et.ZSL.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>et.ZSL.sizeFromShape(e.shape)>0));return 1===u.length?bh({inputs:{x:u[0]},backend:n}):Tm(u,a,n)}const Nm={kernelName:et.$dB,backendName:"webgl",kernelFunc:Sm};class Im{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class Cm{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Em{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,ph.ik)(this.outputShape.length);const a=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,l=c;let p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<c;m++)p+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;p+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let m=0;m<c;m++)p+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(l+1)/2;m++){const t=2*m;if(p+=`\n           xC = xCCorner + ${t*i};\n           `,1===o){if(t<c&&(a%2==1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,p+=1===i&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<c)){const e=a%2==0?et.ZSL.nearestLargerEven(i):i;i%2==0&&a%2==1||i%2!=0&&a%2!=1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,p+=i>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):p+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<c&&(a%2==1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<c&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<c&&(p+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<c&&(p+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<c&&(p+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let d="",h="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,h="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${h}\n         setOutput(result);\n       }\n     `}}var Am=n(8765);class $m{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=(0,ph.ik)(this.outputShape.length);const{dataFormat:n}=t,r=(0,Am.B)(),s="channelsLast"===n,a=s?1:2,o=s?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let e=0;e<=1;e++)u+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${c};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*c+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*c+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function Fm(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function Rm({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const u=e.shape,c=r.texData.get(e.dataId),l=n.inChannels,p=u[0]*u[1]*u[2],d=n.outChannels,h="channelsLast"===n.dataFormat,f=!1;let m;const g=[];if(null!=a){const e=Fm(a.shape,h);null!=e&&(a=Uh({inputs:{x:a},backend:r,attrs:{shape:e}}),g.push(a))}if(null!=s){const e=Fm(s.shape,h);null!=e&&(s=Uh({inputs:{x:s},backend:r,attrs:{shape:e}}),g.push(s))}if(!((1===p||1===d)&&l>tf)&&c.isPacked&&h&&null!=c.texture&&u[2]%2!=0&&et.ZSL.arraysEqual(c.shape.slice(-3),u.slice(-3))){const l=u[0]*u[1]*(u[2]+1),p={dataId:e.dataId,shape:[1,l,n.inChannels],dtype:e.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,et.ZSL.assert(Vh.P0(c.shape,p.shape),(()=>`packed reshape ${c.shape} to ${p.shape} isn't free`));const h=Uh({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(h);const y=nf({a:p,b:h,backend:r,transposeA:false,transposeB:f,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),b=r.texData.get(y.dataId);et.ZSL.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,b.shape=n.outShape,m=bh({inputs:{x:y},backend:r}),m.shape=n.outShape,g.push(y)}else{const u=n.outHeight*n.outWidth,c=Uh({inputs:{x:e},backend:r,attrs:{shape:h?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),l=Uh({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),p=nf({a:h?c:l,b:h?l:c,transposeA:!h,transposeB:f,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o});m=Uh({inputs:{x:p},backend:r,attrs:{shape:n.outShape}}),g.push(c),g.push(l),g.push(p)}for(const y of g)r.disposeIntermediateTensorInfo(y);return m}function Dm({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:p,outHeight:d,dataFormat:h}=n,f="channelsLast"===h,m=u*c*l,g=d*p,y=[n.batchSize,m,g],b=[];if(null!=a){const e=Fm(a.shape,f);null!=e&&(a=Uh({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}if(null!=s){const e=Fm(s.shape,f);null!=e&&(s=Uh({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}const x=Uh({inputs:{x:t},backend:r,attrs:{shape:[1,m,et.ZSL.sizeFromShape(t.shape)/m]}});b.push(x);const v=new $m(y,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(v,[e],"float32",w),T=Uh({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(T);const S=null!=s,N=null!=a,I="leakyrelu"===i,C=i?Dh(i,!0):null,E=new _h(f?T.shape:x.shape,f?x.shape:T.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,S,C,N,I),A=f?[T,x]:[x,T];if(s&&A.push(s),N&&A.push(a),I){const e=r.makeTensorInfo([],"float32",et.ZSL.createScalarValue(o,"float32"));A.push(e),b.push(e)}const $=r.runWebGLProgram(E,A,"float32"),F=Uh({inputs:{x:$},backend:r,attrs:{shape:n.outShape}});b.push($);for(const R of b)r.disposeIntermediateTensorInfo(R);return F}const _m={kernelName:et.p2J,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=r,p=et.C0T.convertConv2DDataFormat(u),d=et.C0T.computeConv2DInfo(s.shape,a.shape,o,c,i,l,!1,p);let h;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===p&&(0,et._K2)().getBool("WEBGL_EXP_CONV")){const e=new Em(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];h=n.runWebGLProgram(e,[s,a],"float32",t)}else if((0,et._K2)().getBool("WEBGL_CONV_IM2COL"))h=Dm({x:s,filter:a,convInfo:d,backend:n});else{const e=new Im(d);h=n.runWebGLProgram(e,[s,a],"float32")}else h=Rm({x:s,filter:a,convInfo:d,backend:n});const f=Uh({inputs:{x:h},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(h),f}};class Om{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Lm{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=a?1:2,c=a?2:3,l=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Mm{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zm{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Pm={kernelName:et.rFm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,p=et.C0T.convertConv2DDataFormat(u),d=et.C0T.computeConv2DInfo(s.shape,l,o,1,i,c,!1,p),h=new Om(d);return n.runWebGLProgram(h,[s,a],"float32")}};class Bm{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=(0,ph.ik)(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const Wm={kernelName:et.jfg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r,p=et.C0T.convertConv2DDataFormat(c),d=et.C0T.computeConv2DInfo(o,a.shape,i,1,u,l,!1,p);if((0,et._K2)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===p){const e=[[d.strideHeight,d.strideWidth]],t=new Bm(d);return n.runWebGLProgram(t,[s,a],"float32",e)}{const e=new Lm(d);return n.runWebGLProgram(e,[s,a],"float32")}}};const Vm={kernelName:et.A1h,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r,c=et.C0T.computeConv3DInfo(s.shape,a.shape,o,u,i),l=new Cm(c);return n.runWebGLProgram(l,[s,a],"float32")}};const Um={kernelName:et.iGz,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:u}=r,c=et.C0T.computeConv3DInfo(s.shape,u,o,1,i),l=new Mm(c);return n.runWebGLProgram(l,[s,a],"float32")}};const Gm={kernelName:et.gC7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:u}=r,c=et.C0T.computeConv3DInfo(u,a.shape,i,1,o),l=new zm(c);return n.runWebGLProgram(l,[s,a],"float32")}},Zm=Fh({opSnippet:$h+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${gh}\n  return result;\n`}),jm={kernelName:et.Mn0,backendName:"webgl",kernelFunc:Zm},Hm=Fh({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Km={kernelName:et.MnK,backendName:"webgl",kernelFunc:Hm};class Ym{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,i,u]=e,[c]=t,[l,p]=n;this.outputShape=[c,l,p,u];const d="bilinear"===r?1:0,[h,f]=[o-1+".0",i-1+".0"],[m,g,y]=l>1?[""+(o-1)/(l-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[b,x,v]=p>1?[""+(i-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Qm={kernelName:et.MRQ,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:c}=r,l=new Ym(s.shape,a.shape,i,u,c);return n.runWebGLProgram(l,[s,a,o],"float32")}};var qm;!function(e){e.Prod="*",e.Sum="+"}(qm||(qm={}));class Xm{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===qm.Prod?"1.0":"0.0",o=n?a:`getX(${Jm(s,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let u="",c="";n?(u=r?"end != "+(i-1):"end != 0",c=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${i}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${(0,mh.bf)(s)} coords = getOutputCoords();\n        int end = ${eg(s,"coords",this.op)};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${c};\n          ${eg(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${Jm(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function Jm(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function eg(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function tg(e,t,n,r,s,a){const o=t.shape.length,i=et.C0T.getAxesPermutation([r],o);let u=t;null!=i&&(u=Jh({inputs:{x:t},backend:n,attrs:{perm:i}}));const c=et.C0T.getInnerMostAxes(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const l=u.shape[c];let p=bh({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(l))-1;d++){const t=new Xm(e,u.shape,!1,a),r=[[d]],s=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(s)}if(s){const t=new Xm(e,u.shape,s,a),r=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=i){const e=Jh({inputs:{x:p},backend:n,attrs:{perm:et.C0T.getUndoAxesPermutation(i)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),e}return p}const ng={kernelName:et.jj_,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;return tg(qm.Prod,s,n,a,o,i)}};const rg={kernelName:et.nY8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;return tg(qm.Sum,s,n,a,o,i)}};const sg={kernelName:et.wNW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=(0,Mh.jm)(e,t,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=(0,Mh.h0)(e,t,o,i);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class ag{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const og={kernelName:et.TMz,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r,i=s.shape[0],u=("NHWC"===o?s.shape[1]:s.shape[2])*a,c=("NHWC"===o?s.shape[2]:s.shape[3])*a,l=("NHWC"===o?s.shape[3]:s.shape[1])/(a*a),p=new ag("NHWC"===o?[i,u,c,l]:[i,l,u,c],a,o);return n.runWebGLProgram(p,[s],s.dtype)}};class ig{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,ph.ik)(this.outputShape.length);const a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let u="",c="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,c="result = activation(result);");const l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${l}\n        ${c}\n        setOutput(result);\n      }\n    `}}class ug{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=(0,ph.ik)(this.outputShape.length);const a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,p=l;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<l;g++)d+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;d+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let g=0;g<l;g++)d+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(p+1)/2;g++){const e=2*g;if(d+=`\n          xC = xCCorner + ${e*u};\n          `,1===i){if(e<l&&(o%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===u&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<l)){const t=o%2==0?et.ZSL.nearestLargerEven(u):u;u%2==0&&o%2==1||u%2!=0&&o%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<l&&(o%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<l&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<l&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<l&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<l&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let h="",f="";n&&(h=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const cg={kernelName:et.tGH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:c}=r;let l=u;null==l&&(l=[1,1]),et.ZSL.assert(et.C0T.eitherStridesOrDilationsAreOne(o,l),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`));const p=et.C0T.computeConv2DInfo(s.shape,a.shape,o,l,i,c,!0);let d;d=(0,et._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new ug(p):new ig(p);const h=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(d,[s,a],"float32",h)}};class lg{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pg{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const dg={kernelName:et.X$8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=r,p=et.C0T.computeConv2DInfo(s.shape,l,o,i,u,c,!0),d=new lg(p);return n.runWebGLProgram(d,[s,a],"float32")}};const hg={kernelName:et.nVu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=r,p=et.C0T.computeConv2DInfo(l,a.shape,o,i,u,c,!0),d=new pg(p);return n.runWebGLProgram(d,[s,a],"float32")}};class fg{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const mg={kernelName:et.ORI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=et.ZSL.sizeFromShape(r.shape),o=Uh({inputs:{x:r},backend:n,attrs:{shape:[a]}}),i=new fg(a),u=n.runWebGLProgram(i,[o],o.dtype),c=Uh({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};class gg{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:c}=e,{top:l,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${l}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const yg={kernelName:et.jxD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r,c=et.C0T.computeDilation2DInfo(s.shape,a.shape,o,i,"NHWC",u);let l;const p=new gg(c);l=n.runWebGLProgram(p,[s,a],"float32");const d=Uh({inputs:{x:l},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(l),d}};const bg={kernelName:et.Qgm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:u}=et.C0T.decodeEinsumEquation(s,a.length);et.C0T.checkEinsumDimSizes(o.length,u,a);const{path:c,steps:l}=et.C0T.getEinsumComputePath(i,u),p=l.length;let d=null,h=o.length;const f=[];for(let m=0;m<p;++m){for(const e of l[m]){const{permutationIndices:t,expandDims:r}=et.C0T.getEinsumPermutation(h,u[e]);let s;et.C0T.isIdentityPermutation(t)?s=a[e]:(s=Jh({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);et.ZSL.arraysEqual(s.shape,o)||(s=Uh({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===d?d=s:(d=Ph({inputs:{a:s,b:d},backend:n}),f.push(d))}m<p-1&&(c[m]>=0&&(d=qh({inputs:{x:d},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(d)),h--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},xg=Fh({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),vg={kernelName:et.Pah,backendName:"webgl",kernelFunc:xg},wg={kernelName:et.rsH,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=(0,et._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yh("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new hh("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},kg=Rh({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Mh.PP}),Tg={kernelName:et.BRl,backendName:"webgl",kernelFunc:kg},Sg=Fh({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${et.C0T.ERF_P};\n  float a1 = ${et.C0T.ERF_A1};\n  float a2 = ${et.C0T.ERF_A2};\n  float a3 = ${et.C0T.ERF_A3};\n  float a4 = ${et.C0T.ERF_A4};\n  float a5 = ${et.C0T.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Ng={kernelName:et._s9,backendName:"webgl",kernelFunc:Sg},Ig=Fh({opSnippet:$h+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Mh.E$,dtype:"float32"}),Cg={kernelName:et.ox3,backendName:"webgl",kernelFunc:Ig};function Eg(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice();let u=s;return s<0&&(et.ZSL.assert(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+s+1),i.splice(u,0,1),Uh({inputs:{x:a},backend:r,attrs:{shape:i}})}const Ag={kernelName:et.ybN,backendName:"webgl",kernelFunc:Eg},$g="return exp(x) - 1.0;",Fg=Fh({opSnippet:$g,packedOpSnippet:$g,cpuKernelImpl:Mh.SF}),Rg={kernelName:et.ybj,backendName:"webgl",kernelFunc:Fg};class Dg{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function _g(e,t,n){const r=n.texData.get(e.dataId),s=et.ZSL.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=Uh({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),i=o.shape,u=new Dg("real",i,t),c=new Dg("imag",i,t),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],p=n.runWebGLProgram(u,l,"float32"),d=n.runWebGLProgram(c,l,"float32"),h=vh({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);const f=Uh({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(h),f}const Og={kernelName:et.rGP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return _g(r,!1,n)}};class Lg{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Mg(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||et.ZSL.inferDtype(s),"string"===a){const e=et.ZSL.getArrayFromDType(a,et.ZSL.sizeFromShape(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new Lg(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const zg={kernelName:et.SQl,backendName:"webgl",kernelFunc:Mg};class Pg{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Bg={kernelName:et.BxF,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new Pg(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},Wg="return floor(x);",Vg=Fh({opSnippet:Wg,packedOpSnippet:Wg,cpuKernelImpl:Mh.CJ}),Ug={kernelName:et.ZgB,backendName:"webgl",kernelFunc:Vg},Gg=Rh({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Zg={kernelName:et.ElG,backendName:"webgl",kernelFunc:Gg};var jg=n(8560);class Hg{constructor(e){this.variableNames=["A"];const t=(0,Am.B)(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Kg{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=(0,Am.B)(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Yg={kernelName:et.awo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,c]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],l=[c,u],p=[c,u,a];if(i||o){const e=(0,et._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=Qg&&e===qg||(qg=e,Qg=document.createElement("canvas").getContext("2d",{willReadFrequently:qg})),Qg.canvas.width=u,Qg.canvas.height=c,Qg.drawImage(s,0,0,u,c),s=Qg.canvas}const d=n.makeTensorInfo(l,"int32");n.texData.get(d.dataId).usage=jg.tT.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const h=(0,et._K2)().getBool("WEBGL_PACK")?new Kg(p):new Hg(p),f=n.runWebGLProgram(h,[d],"int32");return n.disposeData(d.dataId),f}};let Qg,qg=(0,et._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const Xg={kernelName:et.aAr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=r,m=et.C0T.convertConv2DDataFormat(l),g=et.C0T.computeConv2DInfo(s.shape,a.shape,u,p,c,d,!1,m);let y;const b=[],x=null!=o,v=null!=i,w="leakyrelu"===h,k=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Uh({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(o,l)),v&&e.push(t(i,l)),w){const t=n.makeTensorInfo([],"float32",et.ZSL.createScalarValue(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&(0,et._K2)().getBool("WEBGL_EXP_CONV")){const e=h?Dh(h,!0):null,t=new Em(g,x,e,v,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();y=n.runWebGLProgram(t,s,"float32",r)}else if((0,et._K2)().getBool("WEBGL_CONV_IM2COL"))y=Dm({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{const e=h?Dh(h,!1):null,t=new Im(g,x,e,v,w),r=k();y=n.runWebGLProgram(t,r,"float32")}else y=Rm({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});const T=Uh({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};const Jg={kernelName:et.T7M,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=r,f=[];let m=l;null==m&&(m=[1,1]),et.ZSL.assert(et.C0T.eitherStridesOrDilationsAreOne(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=et.C0T.computeConv2DInfo(s.shape,a.shape,u,m,c,p,!0),y=(0,et._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=d?Dh(d,y):null,x=[s,a],v=null!=o,w=null!=i,k="leakyrelu"===d;if(v&&x.push(o),w&&x.push(i),k){const e=n.makeTensorInfo([],"float32",et.ZSL.createScalarValue(h,"float32"));x.push(e),f.push(e)}let T;T=y?new ug(g,v,b,w,k):new ig(g,v,b,w,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(T,x,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class ey{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=(0,mh.bf)(n.length);let a="\n    int index;";for(let o=0;o<this.sliceDim;o++)a+=`\n          index = round(getIndices(coords[0], ${o}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};\n          flattenIndex += index * ${this.strides[o]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const ty={kernelName:et.O4G,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,o=a[a.length-1],i=et.ZSL.sizeFromShape(r.shape),[u,c,l,p]=et.C0T.prepareAndValidate(r,s),d=Uh({inputs:{x:s},backend:n,attrs:{shape:[c,o]}}),h=Uh({inputs:{x:r},backend:n,attrs:{shape:[et.ZSL.sizeFromShape(r.shape)/l,l]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=(0,Mh.UF)(e,t,r.dtype,c,o,l,p,r.shape,i);return n.makeTensorInfo(u,r.dtype,a.values)}const f=new ey(o,p,[c,l],r.shape),m=n.runWebGLProgram(f,[h,d],h.dtype),g=Uh({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}};class ny{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=(0,mh.bf)(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function ry(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r,u=et.ZSL.parseAxisParam(o,s.shape)[0];if((0,et._K2)().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];et.ZSL.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const c=et.C0T.segment_util.collectGatherOpShapeInfo(s,a,u,i),l=et.ZSL.sizeFromShape(a.shape),p=[],d=Uh({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=Uh({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});p.push(d),p.push(h);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(h),t=n.bufferSync(d),r=(0,Mh.QM)(t,e,f);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const m=new ny(d.shape,f),g=n.runWebGLProgram(m,[d,h],d.dtype);p.push(g);const y=Uh({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const sy={kernelName:et.mxL,backendName:"webgl",kernelFunc:ry},ay=Rh({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Mh.Tm,dtype:"bool"}),oy={kernelName:et.XhZ,backendName:"webgl",kernelFunc:ay},iy=Rh({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Mh.BW}),uy={kernelName:et.lLS,backendName:"webgl",kernelFunc:iy};const cy={kernelName:et.OAQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return _g(r,!0,n)}},ly=Fh({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),py={kernelName:et.gIW,backendName:"webgl",kernelFunc:ly},dy=Fh({opSnippet:"return float(isinf(x));",dtype:"bool"}),hy={kernelName:et.E3$,backendName:"webgl",kernelFunc:dy},fy=Fh({opSnippet:"return float(isnan(x));",dtype:"bool"}),my={kernelName:et.iPs,backendName:"webgl",kernelFunc:fy},gy=Rh({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Mh.uw,dtype:"bool"}),yy={kernelName:et.mIA,backendName:"webgl",kernelFunc:gy},by=Rh({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Mh.mo,dtype:"bool"}),xy={kernelName:et.CwD,backendName:"webgl",kernelFunc:by};const vy={kernelName:et.mnI,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=(0,Mh.AC)(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}},wy=Fh({opSnippet:$h+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Mh.rI}),ky={kernelName:et.tG8,backendName:"webgl",kernelFunc:wy},Ty=Fh({opSnippet:$h+"\n  return log(1.0 + x);\n"}),Sy={kernelName:et.Cg$,backendName:"webgl",kernelFunc:Ty},Ny=Rh({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Iy={kernelName:et.RUm,backendName:"webgl",kernelFunc:Ny},Cy=Fh({opSnippet:"return float(!(x >= 1.0));"}),Ey={kernelName:et.nZd,backendName:"webgl",kernelFunc:Cy},Ay=Rh({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),$y={kernelName:et.LXA,backendName:"webgl",kernelFunc:Ay};class Fy{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class Ry{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const Dy={kernelName:et.jM4,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:u}=r,c=(0,et._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new Ry(s.shape,a,o,i,u):new Fy(s.shape,a,o,i,u);return n.runWebGLProgram(c,[s],s.dtype)}};class _y{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Oy={kernelName:et.ToN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=r,p=new _y(s.shape,i,u,c,l);return n.runWebGLProgram(p,[s,a,o],s.dtype)}};function Ly(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=s.shape.length,u=et.ZSL.parseAxisParam(a,s.shape);let c=u;const l=et.C0T.getAxesPermutation(c,i),p=null!=l,d=n.shouldExecuteOnCPU([s]);let h=s;if(p){if(d){const e=n.texData.get(h.dataId).values,t=new Array(i);for(let n=0;n<t.length;n++)t[n]=s.shape[l[n]];const r=(0,Mh.Q5)(e,s.shape,s.dtype,l,t);h=n.makeTensorInfo(t,s.dtype);n.texData.get(h.dataId).values=r}else h=Qh(s,l,n);c=et.C0T.getInnerMostAxes(c.length,i)}et.C0T.assertAxesAreInnerMostDims("max",c,i);const[f,m]=et.C0T.computeOutAndReduceShapes(h.shape,c);let g,y=f;if(o&&(y=et.C0T.expandShapeToKeepDim(f,u)),d){const e=n.texData.get(h.dataId).values,t=(0,Mh.rw)(e,et.ZSL.sizeFromShape(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=et.ZSL.sizeFromShape(t),a=Uh({inputs:{x:e},attrs:{shape:[et.ZSL.sizeFromShape(e.shape)/s,s]},backend:r}),o=Hh(a,e.dtype,"max",r),i=Uh({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(h,m,y,n);return p&&n.disposeIntermediateTensorInfo(h),g}const My={kernelName:et.VAI,backendName:"webgl",kernelFunc:Ly},zy=Rh({opSnippet:dh+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+gh+"\n  return result;\n",cpuKernelImpl:Mh.Dy}),Py={kernelName:et.LDN,backendName:"webgl",kernelFunc:zy};const By={kernelName:et.t3d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;(0,Vh.CE)(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;et.ZSL.assert(et.C0T.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=et.C0T.computePool2DInfo(s.shape,a,o,1,i,u);if(1===c.filterWidth&&1===c.filterHeight&&et.ZSL.arraysEqual(c.inShape,c.outShape))return bh({inputs:{x:s},backend:n});const l=new Lf(c,"max",!1);return n.runWebGLProgram(l,[s],s.dtype)}};const Wy={kernelName:et.ySp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dataFormat:u,dimRoundingMode:c}=r,l=et.C0T.computePool3DInfo(s.shape,a,o,[1,1,1],i,c,u),p=new Mf(l,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}};class Vy{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=s-1-e.padInfo.top,i=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Uy{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.front,p=u-1-e.padInfo.top,d=c-1-e.padInfo.left,h=i*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${p}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Gy={kernelName:et.cHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,p=et.C0T.computePool3DInfo(o.shape,i,u,[1,1,1],c,l),d=new Mf(p,"max",!0),h=n.runWebGLProgram(d,[o],o.dtype),f=new Uy(p),m=n.runWebGLProgram(f,[s,h],o.dtype);return n.disposeIntermediateTensorInfo(h),m}};const Zy={kernelName:et.RXX,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;(0,Vh.CE)([a,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:p}=r,d=et.C0T.computePool2DInfo(i.shape,u,c,1,l,p),h=new Lf(d,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new Vy(d),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const jy={kernelName:et.TL8,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,u=n;et.ZSL.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];et.ZSL.assert(et.C0T.eitherStridesOrDilationsAreOne(a,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const l=et.C0T.computePool2DInfo(r.shape,s,a,c,o),[p,d]=function(e,t,n,r){let s=new Lf(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new Lf(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,i,l,u);return[p,d]}};const Hy={kernelName:et.g5A,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,o=n,i=r.shape.length,u=et.ZSL.parseAxisParam(a,r.shape);let c=u;const l=et.C0T.getAxesPermutation(c,i),p=null!=l,d=o.shouldExecuteOnCPU([r]),h=[];let f=r;if(p){if(d){const e=o.texData.get(f.dataId).values,t=new Array(i);for(let s=0;s<t.length;s++)t[s]=r.shape[l[s]];const n=(0,Mh.Q5)(e,r.shape,r.dtype,l,t);f=o.makeTensorInfo(t,r.dtype);o.texData.get(f.dataId).values=n}else f=Qh(r,l,o);h.push(f),c=et.C0T.getInnerMostAxes(c.length,i)}et.C0T.assertAxesAreInnerMostDims("sum",c,i);const[m,g]=et.C0T.computeOutAndReduceShapes(f.shape,c);let y=m;s&&(y=et.C0T.expandShapeToKeepDim(m,u));const b=function(e,t,n,r){const s=et.ZSL.sizeFromShape(t),a=Uh({inputs:{x:e},attrs:{shape:[et.ZSL.sizeFromShape(e.shape)/s,s]},backend:r}),o=Hh(a,"float32","mean",r),i=Uh({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(f,g,y,o);for(const x of h)o.disposeIntermediateTensorInfo(x);return b}};const Ky={kernelName:et.lNG,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=et.ZSL.parseAxisParam(a,s.shape);let c=u;const l=et.C0T.getAxesPermutation(c,i);let p=s;null!=l&&(p=Jh({inputs:{x:s},backend:n,attrs:{perm:l}}),c=et.C0T.getInnerMostAxes(c.length,s.shape.length)),et.C0T.assertAxesAreInnerMostDims("min",c,i);const[d,h]=et.C0T.computeOutAndReduceShapes(p.shape,c),f=Uh({inputs:{x:p},backend:n,attrs:{shape:[-1,et.ZSL.sizeFromShape(h)]}}),m=Hh(f,f.dtype,"min",n);let g;if(o){g=Uh({inputs:{x:m},backend:n,attrs:{shape:et.C0T.expandShapeToKeepDim(d,u)}})}else g=Uh({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(p),g}},Yy=Rh({opSnippet:dh+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+gh+"\n  return result;\n",cpuKernelImpl:Mh.h}),Qy={kernelName:et.LG0,backendName:"webgl",kernelFunc:Yy};class qy{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=(0,mh.bf)(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Xy{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=(0,mh.bf)(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=(0,fh.Jp)("rc",r),u=(0,fh.Jp)("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,p="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${i[r-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const Jy={kernelName:et.x7F,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,o=(0,et._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xy(r.shape,s,a):new qy(r.shape,s,a);return t.runWebGLProgram(o,[r],r.dtype)}},eb=Rh({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+gh+"\n  return result;\n"}),tb={kernelName:et.BLA,backendName:"webgl",kernelFunc:eb};class nb{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const rb=Rh({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),sb={kernelName:et.sDr,backendName:"webgl",kernelFunc:rb},ab="return a - b;",ob=Rh({opSnippet:ab,packedOpSnippet:ab,supportsComplex:!0,cpuKernelImpl:Mh.lL}),ib={kernelName:et.PbM,backendName:"webgl",kernelFunc:ob};function ub(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=et.ZSL.parseAxisParam([a],s.shape),i=Ly({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=et.C0T.expandShapeToKeepDim(i.shape,o),c=Uh({inputs:{x:i},backend:n,attrs:{shape:u}}),l=ob({inputs:{a:s,b:c},backend:n}),p=Ig({inputs:{x:l},backend:n}),d=qh({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),h=Uh({inputs:{x:d},backend:n,attrs:{shape:u}}),f=rb({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}const cb={kernelName:et.rFG,backendName:"webgl",kernelFunc:ub};const lb={kernelName:et.WT3,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r,u=i?s:ub({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),c=u.shape[0],l=u.shape[1],p=new nb(c,l,a),d=[[o]],h=n.runWebGLProgram(p,[u],"int32",d);return i||n.disposeIntermediateTensorInfo(u),h}},pb=Eh.dR+"\n  return -x;\n";const db={kernelName:et.l0G,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=(0,Mh.rQ)(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=(0,et._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ah.rf(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Eh.hE(r.shape,pb),n.runWebGLProgram(s,[r],r.dtype)}},hb=et.kpo.c7;const fb={kernelName:et.SDM,backendName:"webgl",kernelFunc:function(e){et.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=r,c=n.readSync(s.dataId),l=n.readSync(a.dataId),{selectedIndices:p}=hb(c,l,o,i,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},mb=et.kpo.ZS;const gb={kernelName:et.Zl4,backendName:"webgl",kernelFunc:function(e){et.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=r,l=n.readSync(s.dataId),p=n.readSync(a.dataId),{selectedIndices:d,validOutputs:h}=mb(l,p,o,i,u,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},yb=et.kpo.ut;const bb={kernelName:et.e0f,backendName:"webgl",kernelFunc:function(e){et.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=r,l=n.readSync(s.dataId),p=n.readSync(a.dataId),d=o,h=i,f=u,m=c,{selectedIndices:g,selectedScores:y}=yb(l,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class xb{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const vb={kernelName:et.urI,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:o,onValue:i,offValue:u}=r,c=et.ZSL.sizeFromShape(s.shape),l=new xb(c,o,i,u),p=Uh({inputs:{x:s},backend:n,attrs:{shape:[c]}}),d=n.runWebGLProgram(l,[p],a);n.disposeIntermediateTensorInfo(p);const h=Uh({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,o]}});return n.disposeIntermediateTensorInfo(d),h}};function wb(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=am({inputs:{input:r},backend:n}),t=wb({inputs:{x:e},backend:n}),s=wm({inputs:{input:r},backend:n}),a=wb({inputs:{x:s},backend:n}),o=vh({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return Mg({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const kb={kernelName:et.xJ3,backendName:"webgl",kernelFunc:wb};const Tb={kernelName:et.LWX,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=am({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=wm({inputs:{input:s},backend:r}),o=wb({inputs:{x:a},backend:r}),i=vh({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}return Mg({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const Sb={kernelName:et.mM$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Eg({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{et.ZSL.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),et.ZSL.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=Sm({inputs:t.map((e=>{const t=Eg({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class Nb{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=(0,mh.bf)(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Ib{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=(0,mh.bf)(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=(0,fh.Jp)("rc",r),u=(0,fh.Jp)("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,p=[`${s} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${c}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let f=0,m=1===r?2:4;f<m;f++)h+=`\n        ${p[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const Cb=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;if(0===et.ZSL.sizeFromShape(s.shape)){const e=a.map(((e,t)=>e[0]+s.shape[t]+e[1]));return Mg({backend:n,attrs:{shape:e,value:o,dtype:s.dtype}})}const i=(0,et._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ib(s.shape,a,o):new Nb(s.shape,a,o),u=[[o]];return n.runWebGLProgram(i,[s],s.dtype,u)},Eb={kernelName:et.ODT,backendName:"webgl",kernelFunc:Cb},Ab=Rh({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+gh+"\n  return result;\n"}),$b={kernelName:et.pyJ,backendName:"webgl",kernelFunc:Ab};const Fb={kernelName:et.kdj,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=[],c=et.ZSL.parseAxisParam(a,s.shape);let l=c;const p=et.C0T.getAxesPermutation(l,i);let d,h=s;if(null!=p&&(h=Jh({inputs:{x:s},backend:n,attrs:{perm:p}}),l=et.C0T.getInnerMostAxes(l.length,i),u.push(h)),et.C0T.assertAxesAreInnerMostDims("prod",l,i),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:r,outDtype:s}=(0,Mh.Og)(h.shape,h.dtype,e,l);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=et.C0T.computeOutAndReduceShapes(h.shape,l),r=et.ZSL.sizeFromShape(t),a=Uh({inputs:{x:h},backend:n,attrs:{shape:[-1,r]}}),o=Hh(a,(0,et.chL)(s.dtype),"prod",n);d=Uh({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(a),u.push(o)}if(o){u.push(d);const e=et.C0T.expandShapeToKeepDim(d.shape,c);d=Uh({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const Rb={kernelName:et.oJ2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:o}=t,{outputRaggedRank:i}=r,u=s.map((e=>n.readSync(e.dataId))),c=s.map((e=>e.shape)),l=n.readSync(a.dataId),p=n.readSync(o.dataId),[d,h,f]=(0,Mh.G4)(u,c,l,a.shape,a.dtype,p,o.shape,i),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,h);return m.concat([g])}};const Db={kernelName:et.CQC,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,o=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(a.dataId),[c,l]=(0,Mh.Oy)(o,r.shape,r.dtype,i,s.shape,u,a.shape);return[n.makeTensorInfo([c.length],"int32",c),n.makeTensorInfo([l.length],r.dtype,l)]}};const _b={kernelName:et.mH5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=r,c=n.readSync(s.dataId),l=n.readSync(a.dataId),p=n.readSync(o.dataId),d=i.map((e=>n.readSync(e.dataId))),h=i.map((e=>e.shape)),[f,m]=(0,Mh.G3)(c,s.shape,l,a.shape,a.dtype,p,o.shape,d,h,u);return n.makeTensorInfo(f,a.dtype,m)}},Ob=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=(0,Mh.we)(r,s,a,o);return t.makeTensorInfo([i.length],o,i)},Lb={kernelName:et.Q6t,backendName:"webgl",kernelFunc:Ob},Mb=Fh({opSnippet:"return 1.0 / x;"}),zb={kernelName:et.huO,backendName:"webgl",kernelFunc:Mb},Pb=Fh({opSnippet:Eh.dR+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Bb={kernelName:et.fUj,backendName:"webgl",kernelFunc:Pb},Wb=Fh({opSnippet:Eh.dR+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Vb={kernelName:et.P_L,backendName:"webgl",kernelFunc:Wb};class Ub{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Gb{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Zb={kernelName:et.hgw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[u,c]=i,l=(0,et._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Gb(s.shape,u,c,a,o):new Ub(s.shape,u,c,a,o);return n.runWebGLProgram(l,[s],"float32")}};class jb{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],u=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],p=1/c,d=1/l,h=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Hb={kernelName:et.FCQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new jb(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class Kb{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Yb{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const Qb={kernelName:et.jOE,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[u,c]=i,l=(0,et._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Yb(s.shape,u,c,a,o):new Kb(s.shape,u,c,a,o);return n.runWebGLProgram(l,[s],s.dtype)}};class qb{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],u=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],p=1/c,d=1/l,h=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Xb={kernelName:et.XQy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new qb(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class Jb{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=(0,mh.bf)(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class ex{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=(0,fh.Jp)("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=(0,mh.bf)(n);function i(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const tx={kernelName:et.D7i,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=s.shape.length,i=et.ZSL.parseAxisParam(a,s.shape);if(0===o)return bh({inputs:{x:s},backend:n});const u=(0,et._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ex(s.shape,i):new Jb(s.shape,i);return n.runWebGLProgram(u,[s],s.dtype)}};class nx{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const rx={kernelName:et.BK4,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,u=new nx(r.shape,a),[c,l]=et.C0T.getImageCenter(o,r.shape[1],r.shape[2]),p=[[c,l,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(u,[r],r.dtype,p)}},sx=Fh({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),ax={kernelName:et.hVg,backendName:"webgl",kernelFunc:sx},ox=Fh({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Mh.tc}),ix={kernelName:et.TOR,backendName:"webgl",kernelFunc:ox};class ux{constructor(e,t,n,r,s,a,o=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=(0,mh.bf)(s.length),c=(0,mh.bf)(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const p=`getIndices(${l})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`;let f="";i&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${c} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${p});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class cx{constructor(e,t,n,r,s,a,o=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const u=(0,mh.bf)(s.length),c=(0,mh.bf)(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const p=`getIndices(${l})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`;let f="";i&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${c} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${p});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${h};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const lx={kernelName:et.pJc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:p}=et.C0T.calculateShapes(a,s,o),d=[p/c,c];if(0===p)return n.makeTensorInfo(o,s.dtype);const h=Uh({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),f=Uh({inputs:{x:a},backend:n,attrs:{shape:[u,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=(0,et._K2)().getBool("WEBGL_PACK")?new cx(u,i,h.shape.length,f.shape.length,l,d):new ux(u,i,h.shape.length,f.shape.length,l,d);const y=n.runWebGLProgram(g,[f,h,m],f.dtype),b=Uh({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class px{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===(0,et._K2)().getNumber("WEBGL_VERSION")?"while (left < right) {":s,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const dx={kernelName:et.uWl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:o}=r,i=new px(s.shape[0],s.shape[1],a.shape[1],o),u=[[s.shape[1]]];return n.runWebGLProgram(i,[s,a],"int32",u)}};class hx{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=o.join()}const a=(0,mh.bf)(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const fx={kernelName:et.l6P,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=new hx(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,a],(0,et.TuY)(s.dtype,a.dtype))}},mx=Fh({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${et.C0T.SELU_SCALEALPHA};\n  float scale = ${et.C0T.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),gx={kernelName:et.u$b,backendName:"webgl",kernelFunc:mx},yx=Fh({opSnippet:$h+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Mh.BC}),bx={kernelName:et.vI1,backendName:"webgl",kernelFunc:yx},xx=Fh({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),vx={kernelName:et.YVe,backendName:"webgl",kernelFunc:xx},wx=Fh({opSnippet:$h+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${gh}\n  return result;\n`}),kx={kernelName:et.hql,backendName:"webgl",kernelFunc:wx},Tx=Fh({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Sx={kernelName:et.J3C,backendName:"webgl",kernelFunc:Tx},Nx=Fh({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Ix={kernelName:et.Fin,backendName:"webgl",kernelFunc:Nx},Cx={kernelName:et.A8B,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;et.ZSL.assert(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let y=1+a.length;y<s.shape.length;++y)u.push([0,0]);const c=[],l=Cb({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),p=et.C0T.getReshaped(l.shape,a,i,!1),d=et.C0T.getPermuted(p.length,a.length,!1),h=et.C0T.getReshapedPermuted(l.shape,a,i,!1),f=Uh({inputs:{x:l},backend:n,attrs:{shape:p}}),m=Jh({inputs:{x:f},backend:n,attrs:{perm:d}}),g=Uh({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(l),c.push(f),c.push(m),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const Ex={kernelName:et.C8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.readSync(r.dataId),u=n.readSync(s.dataId),c=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[p,d,h,f,m]=(0,Mh.sB)(i,r.shape,r.dtype,u,s.dtype,c,l);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],s.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const Ax={kernelName:et.BoJ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.readSync(s.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(a.dataId)),[c,l,p]=(0,Mh.vo)(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}};const $x={kernelName:et.L6G,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const o=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(a.dataId),[c,l]=(0,Mh.zN)(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(l,r.dtype,c)}};const Fx={kernelName:et.DvZ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const o=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(a.dataId),[c,l]=(0,Mh.zN)(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(l,r.dtype,c)}};const Rx={kernelName:et.jgd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:p,outputSize:d}=et.C0T.calculateShapes(a,s,i),h=!1;if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=et.ZSL.decodeString(n.readSync(o.dataId)[0]),f=(0,Mh.fC)(e,t,i,d,l,c,u,p,r,h);return n.makeTensorInfo(i,f.dtype,f.values)}const f=new ux(c,u,s.shape.length,a.shape.length,p,[d,1],h),m=n.runWebGLProgram(f,[a,s,o],a.dtype),g=Uh({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),g}};const Dx={kernelName:et.Blb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=et.ZSL.parseAxisParam(o,s.shape)[0],u=et.C0T.prepareSplitSize(s,a,i),c=s.shape.length,l=new Array(c).fill(0),p=s.shape.slice();return u.map((e=>{const t=[...p];t[i]=e;const r=qf({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,r}))}},_x="return sqrt(x);",Ox=Fh({opSnippet:_x,packedOpSnippet:_x,cpuKernelImpl:Mh.LF}),Lx={kernelName:et.dFH,backendName:"webgl",kernelFunc:Ox},Mx=Fh({opSnippet:"return x * x;"}),zx={kernelName:et.M6A,backendName:"webgl",kernelFunc:Mx},Px="return (a - b) * (a - b);",Bx=Rh({opSnippet:Px,packedOpSnippet:Px}),Wx={kernelName:et.Ddj,backendName:"webgl",kernelFunc:Bx};const Vx={kernelName:et.GZp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const a=n.readSync(s.dataId),o=et.C0T.fromUint8ToStringArray(a),i=(0,Mh.yZ)(o,"string",r);return n.makeTensorInfo(s.shape,"string",i)}};const Ux={kernelName:et.pnw,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=Eh.dR+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new Eh.hE(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class Gx{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=(0,mh.bf)(n.length),a=(0,mh.bf)(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const Zx={kernelName:et.UcO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:p,shrinkAxisMask:d}=r,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=et.Kro.sliceInfo(s.shape,a,o,i,u,c,l,p,d);let w;if(m)w=Uh({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){et.ZSL.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=et.Kro.computeOutShape(b,x,v),t=qf({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=Uh({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=(0,et.ra8)(s.shape,s.dtype,e),r=(0,Mh.cy)(h,t,v,b);w=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new Gx(b,v,h);w=n.runWebGLProgram(e,[s],s.dtype)}}const k=Uh({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const jx={kernelName:et.YAb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:p}=t,d=n.readSync(l.dataId),h=n.readSync(p.dataId),[f,m]=(0,Mh.UC)(d,h,s,a,o,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};const Hx={kernelName:et.iW0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[c,l,p]=(0,Mh.S6)(i,u,s),d=l.length;return[n.makeTensorInfo([d,2],"int32",c),n.makeTensorInfo([d],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};const Kx={kernelName:et.$jE,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(a.dataId),i=(0,Mh.fW)(o,s);return n.makeTensorInfo(a.shape,"int32",i)}},Yx=Fh({opSnippet:"return tan(x);"}),Qx={kernelName:et.oFs,backendName:"webgl",kernelFunc:Yx},qx=Fh({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Xx={kernelName:et.iuW,backendName:"webgl",kernelFunc:qx};const Jx={kernelName:et.X4r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:a,updates:o}=t,{}=r,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:p}=et.C0T.calculateShapes(o,a,s.shape),d=[p/c,c];if(0===p)return n.makeTensorInfo(s.shape,a.dtype);const h=Uh({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),f=Uh({inputs:{x:o},backend:n,attrs:{shape:[u,c]}}),m=Uh({inputs:{x:s},backend:n,attrs:{shape:d}}),g=new ux(u,i,h.shape.length,f.shape.length,l,d,!1,!0),y=n.runWebGLProgram(g,[f,h,m],m.dtype),b=Uh({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class ev{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const r=(0,mh.bf)(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function tv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>et.ZSL.decodeString(e))):e,r=(0,et.ra8)(s.shape,s.dtype,t),o=(0,Mh.$O)(r,a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new ev(s.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}const nv={kernelName:et.FAs,backendName:"webgl",kernelFunc:tv};class rv{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class sv{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function av(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function ov(e){let t=1;for(;t<e;)t*=2;return t}const iv={kernelName:et.TBb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r,i=(0,et._K2)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=(0,et._K2)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,l=c[c.length-1];if(n.shouldExecuteOnCPU([s])||l<i||a>u){const e=n.readSync(s.dataId),[t,r]=(0,Mh.xt)(e,c,s.dtype,a,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return c[c.length-1]=0,[n.makeTensorInfo(c,s.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===l)return[s,Mg({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const p=n.texData.get(s.dataId),d=null!==p&&p.isPacked,h=d?n.unpackTensor(s):s,f=et.ZSL.sizeFromShape(c)/l,m=Uh({inputs:{x:h},attrs:{shape:[f,l]},backend:n});d&&av(n,h);const g=ov(a),y=ov(l);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{const s=x(),a=new rv(r),o=[[l],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(a,s,"int32",o),av(n,i)};for(let N=1;N<g;N*=2){const e=2*N;for(let t=N;t>=1;t/=2)v(e,t,[f,y])}for(let N=y;N>g;N/=2){const e=x(),t=new sv([f,N/2]),r=[[l],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(t,e,"int32",r),av(n,s);const a=g/2,o=2*a;for(let n=a;n>=1;n/=2)v(o,n,b.shape)}let w=b;b=qf({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),av(n,w);let k=ry({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});av(n,m);const T=c.slice(0,-1);T.push(a),w=b,b=Uh({inputs:{x:b},attrs:{shape:T},backend:n}),av(n,w);const S=k;return k=Uh({inputs:{x:k},attrs:{shape:T},backend:n}),av(n,S),[k,b]}};class uv{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const o="nearest"===n?1:2;let i;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const cv={kernelName:et.dLy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=r,[l,p,d,h]=s.shape,[f,m]=null!=c?c:[p,d],g=new uv(p,d,o,i,u,[l,f,m,h]);return n.runWebGLProgram(g,[s,a],"float32")}};const lv={kernelName:et.EwU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;(0,Vh.CE)(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(a.dataId),{outputValues:i,outputShape:u,indices:c}=(0,Mh.M_)(o,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}};const pv={kernelName:et.dXR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s,i=o.shape.length,u=s.shape[a],c=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==a&&(c[l++]=o.shape[m]);const p=[],d=new Array(i).fill(0),h=o.shape.slice();h[a]=1;const f=new Array(u);for(let m=0;m<f.length;m++){d[a]=m;const e=qf({inputs:{x:o},backend:n,attrs:{begin:d,size:h}}),t=Uh({inputs:{x:e},backend:n,attrs:{shape:c}});f[m]=t,p.push(e)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class dv{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,o=a*Math.ceil(s/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}const hv=[rf,af,uf,lf,hf,gf,yf,bf,Sf,Nf,Cf,Af,Ff,Df,Of,zf,Pf,Vf,Uf,Gf,Hf,Jf,em,tm,nm,um,pm,fm,wh,ym,Nm,_m,Pm,Wm,Vm,Um,Gm,jm,Km,Qm,ng,rg,sg,og,cg,dg,hg,mg,yg,bg,vg,wg,Tg,Ng,Cg,Ag,Rg,Og,zg,Bg,Ug,Zg,Yg,Xg,Jg,ty,sy,oy,uy,xh,cy,km,py,hy,my,Sh,yy,xy,vy,ky,Sy,Iy,Ey,$y,Dy,Oy,My,Py,By,Wy,Gy,Zy,jy,Hy,Ky,Qy,Jy,tb,lb,Bh,db,fb,gb,bb,sm,vb,Tb,Sb,Eb,$b,Ch,Fb,Rb,Db,_b,Lb,om,sb,zb,Bb,Vb,Gh,Zb,Hb,Qb,Xb,tx,rx,ax,ix,lx,dx,fx,gx,bx,vx,kx,Sx,Xf,cb,Ix,Cx,Ex,Ax,$x,Fx,Rx,Dx,Lx,zx,Wx,Vx,Ux,Zx,jx,Hx,Kx,ib,Xh,Qx,Xx,Jx,nv,iv,cv,ef,lv,pv,{kernelName:et.pPe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r,i=s.shape.length,u=[];let c=0;const l=et.C0T.getAxesPermutation([c],i);let p=s;null!=l&&(p=Jh({inputs:{x:s},backend:n,attrs:{perm:l}}),u.push(p),c=et.C0T.getInnerMostAxes(1,i)[0]);const d=et.C0T.segment_util.computeOutShape(p.shape,c,o),h=et.ZSL.sizeFromShape([p.shape[c]]),f=Uh({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});u.push(f);const m=(0,et.chL)(s.dtype),g=(e,t,r,s,a)=>{const o=e.shape[0],i=e.shape[1],c=et.C0T.segment_util.segOpComputeOptimalWindowSize(i,a),l=new dv({windowSize:c,inSize:i,batchSize:o,numSegments:a},t),p=n.compileAndRun(l,[e,r],s);if(u.push(p),p.shape[1]===a)return p;const d=Ob({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),h=tv({inputs:{x:d},backend:n,attrs:{reps:[i/c]}});u.push(d),u.push(h);return g(p,t,h,s,a)},y=Uh({inputs:{x:g(f,"unsortedSegmentSum",a,m,o)},backend:n,attrs:{shape:d}});let b=y;if(null!=l){u.push(y);const e=et.C0T.getUndoAxesPermutation(l);b=Jh({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},kb];for(const kv of hv)(0,et.tAK)(kv);et.bgA,Za.r;var fv=n(4496),mv=n(8944);const gv=[{title:"Strength Estimation",description:"Estimates the strength of passwords using machine learning.",icon:C.createElement(Ie,null)},{title:"Training data",description:"Trained on a diverse dataset of randomly generated passwords.",icon:C.createElement(Fe,null)},{title:"Tensorflow",description:"Created with TensorFlow for robust and efficient computation.",icon:C.createElement(Re.A,null)},{title:"Max Length",description:"Currently, the model can only process passwords with a maximum of 15 characters.",icon:C.createElement(Me,null)}];function yv(e,t){void 0===t&&(t=15);const n="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~";function r(e,t){const r=new Array(t).fill(0).map((()=>new Array(94).fill(0)));for(let s=0;s<e.length;s++){const t=e[s],a=n.indexOf(t);-1!==a&&(r[s][a]=1)}return r}const s=[];for(let a=0;a<e.length;a++){const n=String(e[a]);s.push(r(n,t))}return(0,et.OEK)(s)}const bv=()=>C.createElement(fv.A,{title:"Password Strength AI",description:"Boost your online security with this cutting-edge open source project! The AI-driven password strength estimator utilizes advanced algorithms to analyze and assess the robustness of your passwords, helping you create stronger and more secure credentials.",keywords:"password strength, open-source, data privacy, ai, online security, password, password security, strength, offrange, estimation"});var xv=()=>{let{projectData:e,loading:t,error:n}=(0,I.Ay)("PassStrengthAI");return C.createElement(S.A,{projectData:e,error:n},C.createElement(N.x,{title:"Password Strength AI",description:e.description,image:C.createElement(Re.A,{width:"auto",height:"auto",className:"d-block mx-auto"})},C.createElement(E.A,{className:"d-flex flex-column gap-2 work-box"},C.createElement("div",{className:"d-grid gap-2 d-sm-flex justify-content-sm-center"},C.createElement(mv.P,{projectData:e,loading:t,error:n}),C.createElement(A.A,{href:"https://github.com/OffRange/PassStrengthAI"},C.createElement("span",null,C.createElement(ze.A,{className:"me-2"}),"View on GitHub"))))),C.createElement("section",null,C.createElement($.A,{className:"px-4"},C.createElement("h2",{className:"pb-2 border-bottom border-primary"},"About"),C.createElement(F.A,{xs:"1",sm:"2",md:"3",lg:"4",className:"g-4 py-5","data-aos":"fade-up"},gv.map(((e,t)=>C.createElement(T.X,{key:t,title:e.title,description:e.description,icon:e.icon})))))),C.createElement(wv,null))};const vv=[{color:"#FF0000"},{color:"#FF4500"},{color:"#FF8C00"},{color:"#FFD700"},{color:"#ADFF2F"},{color:"#00FF00"}],wv=()=>{const{0:e,1:t}=(0,C.useState)("password"),{0:n,1:r}=(0,C.useState)(""),{0:s,1:a}=(0,C.useState)(),{0:o,1:i}=(0,C.useState)();(0,C.useEffect)((()=>{(async()=>{const e=await fi("/model/model.json");a(e),await e.predictAsync(yv(["password"]))})()}),[]),(0,C.useEffect)((()=>{(async()=>{if(n&&0!==n.length){if(s){if(n.length>s.inputs[0].shape[1])return;const e=await s.predictAsync(yv([n])),t=e.argMax(-1).dataSync()[0];console.log(e),i({highestIndex:t,prop:100*e.dataSync()[t]})}}else i(null)})()}),[n,s]);return C.createElement("section",null,C.createElement($.A,null,C.createElement("h2",{className:"pb-2 border-bottom border-primary"},"Try it yourself!"),C.createElement("div",{"data-aos":"fade-left"},C.createElement("p",{className:"text-warning lead"},"Processing speed may vary from device to device as the model calculates the result in your browser and not on the backend!"),C.createElement(G,{size:"lg",className:"pb-5 pt-5"},C.createElement(G.Text,null,C.createElement(Ue,null)),C.createElement(we.Control,{placeholder:"Enter a password",type:e,onChange:e=>r(e.target.value),value:n,maxLength:s?s.inputs[0].shape[1]:0}),C.createElement(A.A,{variant:"outline-secondary",className:"show-hide",onClick:()=>t("password"===e?"text":"password")},"password"===e?C.createElement(Ke,null):C.createElement(Je,null)),C.createElement("div",{className:"d-flex align-items-center mb-3 mt-3 w-100"},vv.map(((e,t)=>C.createElement("div",{key:t,className:`w-${0===t?25:100} rounded ${!o||"highestIndex"in o&&t>o.highestIndex?"bg-body-secondary":""} ${t<vv.length-1?"me-2":""}`,style:{height:"5px",backgroundColor:`${e.color}`}})))),C.createElement(E.A,{className:"d-flex flex-column"},C.createElement("div",{className:"d-grid gap-2 d-sm-flex"},C.createElement("p",null,o?{0:"Cracked",1:"Ridiculous",2:"Weak",3:"Moderate",4:"Strong",5:"Very strong"}[o.highestIndex]:"Enter a password"),o&&"prop"in o?C.createElement("p",null,`${o.prop.toFixed(2)}%`):""))),C.createElement("p",{className:"text-secondary"},"Please note that the project is currently in beta, and while the models strive to provide accurate results, there is a possibility of producing inaccurate estimations."))))}},8570:function(e){e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function o(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=u(e,(0|e)<0?-1:0,!0),o&&(a[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),o&&(s[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=h)return k}else{if(e<=-f)return T;if(e+1>=f)return w}return e<0?i(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=o,n.fromNumber=i,n.fromBits=u;var c=Math.pow;function l(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return l(e.substring(1),t,n).neg();for(var s=i(c(n,8)),a=g,o=0;o<e.length;o+=8){var u=Math.min(8,e.length-o),p=parseInt(e.substring(o,o+u),n);if(u<8){var d=i(c(n,u));a=a.mul(d).add(i(p))}else a=(a=a.mul(s)).add(i(p))}return a.unsigned=t,a}function p(e,t){return"number"==typeof e?i(e,t):"string"==typeof e?l(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=l,n.fromValue=p;var d=4294967296,h=d*d,f=h/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var x=o(1,!0);n.UONE=x;var v=o(-1);n.NEG_ONE=v;var w=u(-1,2147483647,!1);n.MAX_VALUE=w;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var T=u(0,-2147483648,!1);n.MIN_VALUE=T;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(T)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=i(c(e,6),this.unsigned),a=this,o="";;){var u=a.div(s),l=(a.sub(u.mul(s)).toInt()>>>0).toString(e);if((a=u).isZero())return l+o;for(;l.length<6;)l="0"+l;o=""+l+o}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(T)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return!(1&~this.low)},S.isEven=function(){return!(1&this.low)},S.equals=function(e){return r(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(T)?T:this.not().add(b)},S.neg=S.negate,S.add=function(e){r(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,o=e.high>>>16,i=65535&e.high,c=e.low>>>16,l=0,d=0,h=0,f=0;return h+=(f+=a+(65535&e.low))>>>16,d+=(h+=s+c)>>>16,l+=(d+=n+i)>>>16,l+=t+o,u((h&=65535)<<16|(f&=65535),(l&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=p(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=p(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(T))return e.isOdd()?T:g;if(e.eq(T))return this.isOdd()?T:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,o=65535&this.low,c=e.high>>>16,l=65535&e.high,d=e.low>>>16,h=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=o*h)>>>16,y+=(b+=a*h)>>>16,b&=65535,y+=(b+=o*d)>>>16,f+=(y+=s*h)>>>16,y&=65535,f+=(y+=a*d)>>>16,y&=65535,f+=(y+=o*l)>>>16,f+=n*h+s*d+a*l+o*c,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=p(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(T))return e.eq(b)||e.eq(v)?T:e.eq(T)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(T))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),l=o<=48?1:c(2,o-48),d=i(n),h=d.mul(e);h.isNegative()||h.gt(s);)h=(d=i(n-=l,this.unsigned)).mul(e);d.isZero()&&(d=b),a=a.add(d),s=s.sub(h)}return a},S.div=S.divide,S.modulo=function(e){return r(e)||(e=p(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},7391:function(e,t,n){var r=n(7180),s=n(3181),a=n(3031),o=n(9067),i=n(6833),u=n(3717),c=n(4801);c.alea=r,c.xor128=s,c.xorwow=a,c.xorshift7=o,c.xor4096=i,c.tychei=u,e.exports=c},7180:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=i:n.amdD&&n.amdO?void 0===(r=function(){return i}.call(t,n,t,s))||(s.exports=r):this.alea=i}(0,e=n.nmd(e),n.amdD)},3717:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=i:n.amdD&&n.amdO?void 0===(r=function(){return i}.call(t,n,t,s))||(s.exports=r):this.tychei=i}(0,e=n.nmd(e),n.amdD)},3181:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=i:n.amdD&&n.amdO?void 0===(r=function(){return i}.call(t,n,t,s))||(s.exports=r):this.xor128=i}(0,e=n.nmd(e),n.amdD)},6833:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(o=o+1640531527|0,s=0==(n=i[127&a]^=r+o)?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=o,e.X=i,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=i:n.amdD&&n.amdO?void 0===(r=function(){return i}.call(t,n,t,s))||(s.exports=r):this.xor4096=i}(0,e=n.nmd(e),n.amdD)},9067:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=i:n.amdD&&n.amdO?void 0===(r=function(){return i}.call(t,n,t,s))||(s.exports=r):this.xorshift7=i}(0,e=n.nmd(e),n.amdD)},3031:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=i:n.amdD&&n.amdO?void 0===(r=function(){return i}.call(t,n,t,s))||(s.exports=r):this.xorwow=i}(0,e=n.nmd(e),n.amdD)},4801:function(e,t,n){var r;!function(s,a,o){var i,u=256,c=o.pow(u,6),l=o.pow(2,52),p=2*l,d=u-1;function h(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(a)]}}():e,3),r),h=new f(r),x=function(){for(var e=h.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,y(b(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(o.random=e,t):e})(x,d,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);s<u;)o[s]=s++;for(s=0;s<u;s++)o[s]=o[a=d&a+e[s%n]+(t=o[s])],o[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,o=r.S;e--;)t=o[s=d&s+1],n=n*u+o[d&(o[s]=o[a=d&a+t])+(o[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),a),e.exports){e.exports=h;try{i=n(1234)}catch(x){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},9771:function(e){"use strict";var t=function(){};e.exports=t},5817:function(){},8590:function(){},4530:function(){},5727:function(){},551:function(){},1234:function(){}}]);
//# sourceMappingURL=component---src-pages-projects-password-strength-ai-index-jsx-5f5a5d12de9987cee2eb.js.map